Search.setIndex({"alltitles": {"Acknowledgements": [[346, "acknowledgements"], [347, "acknowledgements"]], "Acknowledgments": [[348, "acknowledgments"]], "Applications of Sup3r": [[348, "applications-of-sup3r"]], "Command Line Interfaces (CLIs)": [[342, null]], "Data Records": [[348, "data-records"]], "Directory Structure": [[346, "directory-structure"]], "Example Sup3rCC Data Usage": [[346, "example-sup3rcc-data-usage"]], "Examples": [[345, null]], "Getting Started": [[348, null]], "How it Works": [[348, "how-it-works"]], "Installation": [[349, null]], "Installation and Usage": [[350, null]], "Installing sup3r": [[348, "installing-sup3r"]], "Nuances of Sup3rCC": [[346, "nuances-of-sup3rcc"]], "Option 1: Install from PIP (recommended for analysts):": [[348, "option-1-install-from-pip-recommended-for-analysts"], [349, "option-1-install-from-pip-recommended-for-analysts"]], "Option 2: Clone repo (recommended for developers)": [[348, "option-2-clone-repo-recommended-for-developers"], [349, "option-2-clone-repo-recommended-for-developers"]], "Parameter": [[249, "parameter"]], "Publications": [[348, "publications"]], "Recommended Citation": [[346, "recommended-citation"], [347, "recommended-citation"], [348, "recommended-citation"]], "Running Sup3rCC Models": [[346, "running-sup3rcc-models"]], "Running Sup3rWind Models": [[347, "running-sup3rwind-models"]], "Step 1: Learns High-Resolution Physics From Historical Data (Training Phase)": [[348, "step-1-learns-high-resolution-physics-from-historical-data-training-phase"]], "Step 2: Collects Coarse Climate Data and Scenarios": [[348, "step-2-collects-coarse-climate-data-and-scenarios"]], "Step 3: Generates Realistic, High-Resolution Climate Data (Inference Phase)": [[348, "step-3-generates-realistic-high-resolution-climate-data-inference-phase"]], "Sup3rCC": [[348, "sup3rcc"]], "Sup3rCC Data Access": [[346, "sup3rcc-data-access"]], "Sup3rCC Examples": [[346, null]], "Sup3rCC Versions": [[346, "sup3rcc-versions"]], "Sup3rUHI": [[348, "sup3ruhi"]], "Sup3rWind": [[348, "sup3rwind"]], "Sup3rWind Data Access": [[347, "sup3rwind-data-access"]], "Sup3rWind Data Usage": [[347, "sup3rwind-data-usage"]], "Sup3rWind Examples": [[347, null]], "Sup3rWind Versions": [[347, "sup3rwind-versions"]], "Training from scratch": [[347, "training-from-scratch"]], "batch": [[343, "sup3r-batch"]], "bias-calc": [[343, "sup3r-bias-calc"]], "data-collect": [[343, "sup3r-data-collect"]], "forward-pass": [[343, "sup3r-forward-pass"]], "pipeline": [[343, "sup3r-pipeline"]], "qa": [[343, "sup3r-qa"]], "solar": [[343, "sup3r-solar"]], "sup3r": [[0, null], [343, null]], "sup3r.batch": [[1, null]], "sup3r.batch.batch_cli": [[2, null]], "sup3r.bias": [[3, null]], "sup3r.bias.abstract": [[4, null]], "sup3r.bias.abstract.AbstractBiasCorrection": [[5, null]], "sup3r.bias.base": [[6, null]], "sup3r.bias.base.DataRetrievalBase": [[7, null]], "sup3r.bias.bias_calc": [[8, null]], "sup3r.bias.bias_calc.LinearCorrection": [[9, null]], "sup3r.bias.bias_calc.MonthlyLinearCorrection": [[10, null]], "sup3r.bias.bias_calc.MonthlyScalarCorrection": [[11, null]], "sup3r.bias.bias_calc.ScalarCorrection": [[12, null]], "sup3r.bias.bias_calc.SkillAssessment": [[13, null]], "sup3r.bias.bias_calc_cli": [[14, null]], "sup3r.bias.bias_calc_cli.kickoff_local_job": [[15, null]], "sup3r.bias.bias_calc_cli.kickoff_slurm_job": [[16, null]], "sup3r.bias.bias_calc_vortex": [[17, null]], "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate": [[18, null]], "sup3r.bias.bias_calc_vortex.VortexMeanPrepper": [[19, null]], "sup3r.bias.bias_transforms": [[20, null]], "sup3r.bias.bias_transforms.global_linear_bc": [[21, null]], "sup3r.bias.bias_transforms.local_linear_bc": [[22, null]], "sup3r.bias.bias_transforms.local_presrat_bc": [[23, null]], "sup3r.bias.bias_transforms.local_qdm_bc": [[24, null]], "sup3r.bias.bias_transforms.monthly_local_linear_bc": [[25, null]], "sup3r.bias.mixins": [[26, null]], "sup3r.bias.mixins.FillAndSmoothMixin": [[27, null]], "sup3r.bias.mixins.ZeroRateMixin": [[28, null]], "sup3r.bias.presrat": [[29, null]], "sup3r.bias.presrat.PresRat": [[30, null]], "sup3r.bias.qdm": [[31, null]], "sup3r.bias.qdm.QuantileDeltaMappingCorrection": [[32, null]], "sup3r.bias.utilities": [[33, null]], "sup3r.bias.utilities.bias_correct_feature": [[34, null]], "sup3r.bias.utilities.bias_correct_features": [[35, null]], "sup3r.bias.utilities.lin_bc": [[36, null]], "sup3r.bias.utilities.qdm_bc": [[37, null]], "sup3r.cli": [[38, null]], "sup3r.models": [[39, null]], "sup3r.models.abstract": [[40, null]], "sup3r.models.abstract.AbstractSingleModel": [[41, null]], "sup3r.models.base": [[42, null]], "sup3r.models.base.Sup3rGan": [[43, null]], "sup3r.models.conditional": [[44, null]], "sup3r.models.conditional.Sup3rCondMom": [[45, null]], "sup3r.models.dc": [[46, null]], "sup3r.models.dc.Sup3rGanDC": [[47, null]], "sup3r.models.interface": [[48, null]], "sup3r.models.interface.AbstractInterface": [[49, null]], "sup3r.models.linear": [[50, null]], "sup3r.models.linear.LinearInterp": [[51, null]], "sup3r.models.multi_step": [[52, null]], "sup3r.models.multi_step.MultiStepGan": [[53, null]], "sup3r.models.multi_step.MultiStepSurfaceMetGan": [[54, null]], "sup3r.models.multi_step.SolarMultiStepGan": [[55, null]], "sup3r.models.solar_cc": [[56, null]], "sup3r.models.solar_cc.SolarCC": [[57, null]], "sup3r.models.surface": [[58, null]], "sup3r.models.surface.SurfaceSpatialMetModel": [[59, null]], "sup3r.models.utilities": [[60, null]], "sup3r.models.utilities.TensorboardMixIn": [[61, null]], "sup3r.models.utilities.TrainingSession": [[62, null]], "sup3r.models.utilities.get_optimizer_class": [[63, null]], "sup3r.models.utilities.st_interp": [[64, null]], "sup3r.models.with_obs": [[65, null]], "sup3r.models.with_obs.Sup3rGanWithObs": [[66, null]], "sup3r.pipeline": [[67, null]], "sup3r.pipeline.forward_pass": [[68, null]], "sup3r.pipeline.forward_pass.ForwardPass": [[69, null]], "sup3r.pipeline.forward_pass_cli": [[70, null]], "sup3r.pipeline.forward_pass_cli.kickoff_local_job": [[71, null]], "sup3r.pipeline.forward_pass_cli.kickoff_slurm_job": [[72, null]], "sup3r.pipeline.pipeline_cli": [[73, null]], "sup3r.pipeline.slicer": [[74, null]], "sup3r.pipeline.slicer.ForwardPassSlicer": [[75, null]], "sup3r.pipeline.strategy": [[76, null]], "sup3r.pipeline.strategy.ForwardPassChunk": [[77, null]], "sup3r.pipeline.strategy.ForwardPassStrategy": [[78, null]], "sup3r.pipeline.utilities": [[79, null]], "sup3r.pipeline.utilities.get_chunk_slices": [[80, null]], "sup3r.pipeline.utilities.get_model": [[81, null]], "sup3r.postprocessing": [[82, null]], "sup3r.postprocessing.collectors": [[83, null]], "sup3r.postprocessing.collectors.base": [[84, null]], "sup3r.postprocessing.collectors.base.BaseCollector": [[85, null]], "sup3r.postprocessing.collectors.h5": [[86, null]], "sup3r.postprocessing.collectors.h5.CollectorH5": [[87, null]], "sup3r.postprocessing.collectors.nc": [[88, null]], "sup3r.postprocessing.collectors.nc.CollectorNC": [[89, null]], "sup3r.postprocessing.data_collect_cli": [[90, null]], "sup3r.postprocessing.data_collect_cli.kickoff_local_job": [[91, null]], "sup3r.postprocessing.data_collect_cli.kickoff_slurm_job": [[92, null]], "sup3r.postprocessing.writers": [[93, null]], "sup3r.postprocessing.writers.base": [[94, null]], "sup3r.postprocessing.writers.base.OutputHandler": [[95, null]], "sup3r.postprocessing.writers.base.OutputMixin": [[96, null]], "sup3r.postprocessing.writers.base.RexOutputs": [[97, null]], "sup3r.postprocessing.writers.h5": [[98, null]], "sup3r.postprocessing.writers.h5.OutputHandlerH5": [[99, null]], "sup3r.postprocessing.writers.nc": [[100, null]], "sup3r.postprocessing.writers.nc.OutputHandlerNC": [[101, null]], "sup3r.preprocessing": [[102, null]], "sup3r.preprocessing.accessor": [[103, null]], "sup3r.preprocessing.accessor.Sup3rX": [[104, null]], "sup3r.preprocessing.base": [[105, null]], "sup3r.preprocessing.base.Container": [[106, null]], "sup3r.preprocessing.base.DsetTuple": [[107, null]], "sup3r.preprocessing.base.Sup3rDataset": [[108, null]], "sup3r.preprocessing.base.Sup3rMeta": [[109, null]], "sup3r.preprocessing.batch_handlers": [[110, null]], "sup3r.preprocessing.batch_handlers.dc": [[111, null]], "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC": [[112, null]], "sup3r.preprocessing.batch_handlers.factory": [[113, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandler": [[114, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC": [[115, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory": [[116, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1": [[117, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF": [[118, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2": [[119, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF": [[120, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep": [[121, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF": [[122, null]], "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler": [[123, null]], "sup3r.preprocessing.batch_queues": [[124, null]], "sup3r.preprocessing.batch_queues.abstract": [[125, null]], "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue": [[126, null]], "sup3r.preprocessing.batch_queues.base": [[127, null]], "sup3r.preprocessing.batch_queues.base.SingleBatchQueue": [[128, null]], "sup3r.preprocessing.batch_queues.conditional": [[129, null]], "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue": [[130, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1": [[131, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF": [[132, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2": [[133, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF": [[134, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep": [[135, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF": [[136, null]], "sup3r.preprocessing.batch_queues.dc": [[137, null]], "sup3r.preprocessing.batch_queues.dc.BatchQueueDC": [[138, null]], "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC": [[139, null]], "sup3r.preprocessing.batch_queues.dual": [[140, null]], "sup3r.preprocessing.batch_queues.dual.DualBatchQueue": [[141, null]], "sup3r.preprocessing.batch_queues.utilities": [[142, null]], "sup3r.preprocessing.batch_queues.utilities.smooth_data": [[143, null]], "sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing": [[144, null]], "sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing": [[145, null]], "sup3r.preprocessing.cachers": [[146, null]], "sup3r.preprocessing.cachers.base": [[147, null]], "sup3r.preprocessing.cachers.base.Cacher": [[148, null]], "sup3r.preprocessing.cachers.utilities": [[149, null]], "sup3r.preprocessing.collections": [[150, null]], "sup3r.preprocessing.collections.base": [[151, null]], "sup3r.preprocessing.collections.base.Collection": [[152, null]], "sup3r.preprocessing.collections.stats": [[153, null]], "sup3r.preprocessing.collections.stats.StatsCollection": [[154, null]], "sup3r.preprocessing.data_handlers": [[155, null]], "sup3r.preprocessing.data_handlers.base": [[156, null]], "sup3r.preprocessing.data_handlers.base.DailyDataHandler": [[157, null]], "sup3r.preprocessing.data_handlers.base.DataHandler": [[158, null]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC": [[159, null]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC": [[160, null]], "sup3r.preprocessing.data_handlers.exo": [[161, null]], "sup3r.preprocessing.data_handlers.exo.ExoData": [[162, null]], "sup3r.preprocessing.data_handlers.exo.ExoDataHandler": [[163, null]], "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep": [[164, null]], "sup3r.preprocessing.data_handlers.nc_cc": [[165, null]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC": [[166, null]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw": [[167, null]], "sup3r.preprocessing.derivers": [[168, null]], "sup3r.preprocessing.derivers.base": [[169, null]], "sup3r.preprocessing.derivers.base.BaseDeriver": [[170, null]], "sup3r.preprocessing.derivers.base.Deriver": [[171, null]], "sup3r.preprocessing.derivers.methods": [[172, null]], "sup3r.preprocessing.derivers.methods.ClearSkyRatio": [[173, null]], "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC": [[174, null]], "sup3r.preprocessing.derivers.methods.CloudMask": [[175, null]], "sup3r.preprocessing.derivers.methods.DerivedFeature": [[176, null]], "sup3r.preprocessing.derivers.methods.Latitude": [[177, null]], "sup3r.preprocessing.derivers.methods.Longitude": [[178, null]], "sup3r.preprocessing.derivers.methods.PressureWRF": [[179, null]], "sup3r.preprocessing.derivers.methods.SurfaceRH": [[180, null]], "sup3r.preprocessing.derivers.methods.Sza": [[181, null]], "sup3r.preprocessing.derivers.methods.Tas": [[182, null]], "sup3r.preprocessing.derivers.methods.TasMax": [[183, null]], "sup3r.preprocessing.derivers.methods.TasMin": [[184, null]], "sup3r.preprocessing.derivers.methods.TempNCforCC": [[185, null]], "sup3r.preprocessing.derivers.methods.USolar": [[186, null]], "sup3r.preprocessing.derivers.methods.UWind": [[187, null]], "sup3r.preprocessing.derivers.methods.UWindPowerLaw": [[188, null]], "sup3r.preprocessing.derivers.methods.VSolar": [[189, null]], "sup3r.preprocessing.derivers.methods.VWind": [[190, null]], "sup3r.preprocessing.derivers.methods.VWindPowerLaw": [[191, null]], "sup3r.preprocessing.derivers.methods.Winddirection": [[192, null]], "sup3r.preprocessing.derivers.methods.Windspeed": [[193, null]], "sup3r.preprocessing.derivers.utilities": [[194, null]], "sup3r.preprocessing.derivers.utilities.SolarZenith": [[195, null]], "sup3r.preprocessing.derivers.utilities.invert_uv": [[196, null]], "sup3r.preprocessing.derivers.utilities.parse_feature": [[197, null]], "sup3r.preprocessing.derivers.utilities.transform_rotate_wind": [[198, null]], "sup3r.preprocessing.derivers.utilities.windspeed_log_law": [[199, null]], "sup3r.preprocessing.loaders": [[200, null]], "sup3r.preprocessing.loaders.Loader": [[201, null]], "sup3r.preprocessing.loaders.base": [[202, null]], "sup3r.preprocessing.loaders.base.BaseLoader": [[203, null]], "sup3r.preprocessing.loaders.h5": [[204, null]], "sup3r.preprocessing.loaders.h5.LoaderH5": [[205, null]], "sup3r.preprocessing.loaders.nc": [[206, null]], "sup3r.preprocessing.loaders.nc.LoaderNC": [[207, null]], "sup3r.preprocessing.loaders.utilities": [[208, null]], "sup3r.preprocessing.loaders.utilities.standardize_names": [[209, null]], "sup3r.preprocessing.loaders.utilities.standardize_values": [[210, null]], "sup3r.preprocessing.names": [[211, null]], "sup3r.preprocessing.names.Dimension": [[212, null]], "sup3r.preprocessing.rasterizers": [[213, null]], "sup3r.preprocessing.rasterizers.base": [[214, null]], "sup3r.preprocessing.rasterizers.base.BaseRasterizer": [[215, null]], "sup3r.preprocessing.rasterizers.dual": [[216, null]], "sup3r.preprocessing.rasterizers.dual.DualRasterizer": [[217, null]], "sup3r.preprocessing.rasterizers.exo": [[218, null]], "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer": [[219, null]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizer": [[220, null]], "sup3r.preprocessing.rasterizers.exo.ObsRasterizer": [[221, null]], "sup3r.preprocessing.rasterizers.exo.SzaRasterizer": [[222, null]], "sup3r.preprocessing.rasterizers.extended": [[223, null]], "sup3r.preprocessing.rasterizers.extended.Rasterizer": [[224, null]], "sup3r.preprocessing.samplers": [[225, null]], "sup3r.preprocessing.samplers.base": [[226, null]], "sup3r.preprocessing.samplers.base.Sampler": [[227, null]], "sup3r.preprocessing.samplers.cc": [[228, null]], "sup3r.preprocessing.samplers.cc.DualSamplerCC": [[229, null]], "sup3r.preprocessing.samplers.dc": [[230, null]], "sup3r.preprocessing.samplers.dc.SamplerDC": [[231, null]], "sup3r.preprocessing.samplers.dual": [[232, null]], "sup3r.preprocessing.samplers.dual.DualSampler": [[233, null]], "sup3r.preprocessing.samplers.utilities": [[234, null]], "sup3r.preprocessing.samplers.utilities.daily_time_sampler": [[235, null]], "sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data": [[236, null]], "sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler": [[237, null]], "sup3r.preprocessing.samplers.utilities.uniform_box_sampler": [[238, null]], "sup3r.preprocessing.samplers.utilities.uniform_time_sampler": [[239, null]], "sup3r.preprocessing.samplers.utilities.weighted_box_sampler": [[240, null]], "sup3r.preprocessing.samplers.utilities.weighted_time_sampler": [[241, null]], "sup3r.preprocessing.utilities": [[242, null]], "sup3r.preprocessing.utilities.check_signatures": [[243, null]], "sup3r.preprocessing.utilities.composite_info": [[244, null]], "sup3r.preprocessing.utilities.composite_sig": [[245, null]], "sup3r.preprocessing.utilities.compute_if_dask": [[246, null]], "sup3r.preprocessing.utilities.contains_ellipsis": [[247, null]], "sup3r.preprocessing.utilities.dims_array_tuple": [[248, null]], "sup3r.preprocessing.utilities.expand_paths": [[249, null]], "sup3r.preprocessing.utilities.get_class_kwargs": [[250, null]], "sup3r.preprocessing.utilities.get_date_range_kwargs": [[251, null]], "sup3r.preprocessing.utilities.get_input_handler_class": [[252, null]], "sup3r.preprocessing.utilities.get_obj_params": [[253, null]], "sup3r.preprocessing.utilities.get_source_type": [[254, null]], "sup3r.preprocessing.utilities.is_type_of": [[255, null]], "sup3r.preprocessing.utilities.log_args": [[256, null]], "sup3r.preprocessing.utilities.lower_names": [[257, null]], "sup3r.preprocessing.utilities.lowered": [[258, null]], "sup3r.preprocessing.utilities.make_time_index_from_kws": [[259, null]], "sup3r.preprocessing.utilities.numpy_if_tensor": [[260, null]], "sup3r.preprocessing.utilities.ordered_array": [[261, null]], "sup3r.preprocessing.utilities.ordered_dims": [[262, null]], "sup3r.preprocessing.utilities.parse_ellipsis": [[263, null]], "sup3r.preprocessing.utilities.parse_features": [[264, null]], "sup3r.preprocessing.utilities.parse_keys": [[265, null]], "sup3r.preprocessing.utilities.parse_to_list": [[266, null]], "sup3r.qa": [[267, null]], "sup3r.qa.qa": [[268, null]], "sup3r.qa.qa.Sup3rQa": [[269, null]], "sup3r.qa.qa_cli": [[270, null]], "sup3r.qa.utilities": [[271, null]], "sup3r.qa.utilities.continuous_dist": [[272, null]], "sup3r.qa.utilities.direct_dist": [[273, null]], "sup3r.qa.utilities.frequency_spectrum": [[274, null]], "sup3r.qa.utilities.gradient_dist": [[275, null]], "sup3r.qa.utilities.time_derivative_dist": [[276, null]], "sup3r.qa.utilities.tke_frequency_spectrum": [[277, null]], "sup3r.qa.utilities.tke_wavenumber_spectrum": [[278, null]], "sup3r.qa.utilities.wavenumber_spectrum": [[279, null]], "sup3r.solar": [[280, null]], "sup3r.solar.solar": [[281, null]], "sup3r.solar.solar.Solar": [[282, null]], "sup3r.solar.solar_cli": [[283, null]], "sup3r.solar.solar_cli.kickoff_local_job": [[284, null]], "sup3r.solar.solar_cli.kickoff_slurm_job": [[285, null]], "sup3r.utilities": [[286, null]], "sup3r.utilities.ModuleName": [[287, null]], "sup3r.utilities.cli": [[288, null]], "sup3r.utilities.cli.BaseCLI": [[289, null]], "sup3r.utilities.cli.SlurmManager": [[290, null]], "sup3r.utilities.era_downloader": [[291, null]], "sup3r.utilities.era_downloader.EraDownloader": [[292, null]], "sup3r.utilities.interpolation": [[293, null]], "sup3r.utilities.interpolation.Interpolator": [[294, null]], "sup3r.utilities.loss_metrics": [[295, null]], "sup3r.utilities.loss_metrics.CoarseMseLoss": [[296, null]], "sup3r.utilities.loss_metrics.ExpLoss": [[297, null]], "sup3r.utilities.loss_metrics.LowResLoss": [[298, null]], "sup3r.utilities.loss_metrics.MaterialDerivativeLoss": [[299, null]], "sup3r.utilities.loss_metrics.MmdLoss": [[300, null]], "sup3r.utilities.loss_metrics.PerceptualLoss": [[301, null]], "sup3r.utilities.loss_metrics.SpatialDerivativeLoss": [[302, null]], "sup3r.utilities.loss_metrics.SpatialExtremesLoss": [[303, null]], "sup3r.utilities.loss_metrics.SpatialFftLoss": [[304, null]], "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss": [[305, null]], "sup3r.utilities.loss_metrics.TemporalDerivativeLoss": [[306, null]], "sup3r.utilities.loss_metrics.TemporalExtremesLoss": [[307, null]], "sup3r.utilities.loss_metrics.gaussian_kernel": [[308, null]], "sup3r.utilities.pytest": [[309, null]], "sup3r.utilities.pytest.helpers": [[310, null]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC": [[311, null]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC": [[312, null]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory": [[313, null]], "sup3r.utilities.pytest.helpers.DualSamplerTesterCC": [[314, null]], "sup3r.utilities.pytest.helpers.DummyData": [[315, null]], "sup3r.utilities.pytest.helpers.DummySampler": [[316, null]], "sup3r.utilities.pytest.helpers.SamplerTester": [[317, null]], "sup3r.utilities.pytest.helpers.SamplerTesterDC": [[318, null]], "sup3r.utilities.pytest.helpers.make_collect_chunks": [[319, null]], "sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files": [[320, null]], "sup3r.utilities.pytest.helpers.make_fake_dset": [[321, null]], "sup3r.utilities.pytest.helpers.make_fake_h5_chunks": [[322, null]], "sup3r.utilities.pytest.helpers.make_fake_nc_file": [[323, null]], "sup3r.utilities.pytest.helpers.make_fake_tif": [[324, null]], "sup3r.utilities.pytest.helpers.test_sampler_factory": [[325, null]], "sup3r.utilities.utilities": [[326, null]], "sup3r.utilities.utilities.Timer": [[327, null]], "sup3r.utilities.utilities.camel_to_underscore": [[328, null]], "sup3r.utilities.utilities.enforce_limits": [[329, null]], "sup3r.utilities.utilities.generate_random_string": [[330, null]], "sup3r.utilities.utilities.get_dset_attrs": [[331, null]], "sup3r.utilities.utilities.get_feature_basename": [[332, null]], "sup3r.utilities.utilities.get_tmp_file": [[333, null]], "sup3r.utilities.utilities.nn_fill_array": [[334, null]], "sup3r.utilities.utilities.pd_date_range": [[335, null]], "sup3r.utilities.utilities.preprocess_datasets": [[336, null]], "sup3r.utilities.utilities.safe_cast": [[337, null]], "sup3r.utilities.utilities.safe_serialize": [[338, null]], "sup3r.utilities.utilities.spatial_coarsening": [[339, null]], "sup3r.utilities.utilities.temporal_coarsening": [[340, null]], "sup3r.utilities.utilities.xr_open_mfdataset": [[341, null]]}, "docnames": ["_autosummary/sup3r", "_autosummary/sup3r.batch", "_autosummary/sup3r.batch.batch_cli", "_autosummary/sup3r.bias", "_autosummary/sup3r.bias.abstract", "_autosummary/sup3r.bias.abstract.AbstractBiasCorrection", "_autosummary/sup3r.bias.base", "_autosummary/sup3r.bias.base.DataRetrievalBase", "_autosummary/sup3r.bias.bias_calc", "_autosummary/sup3r.bias.bias_calc.LinearCorrection", "_autosummary/sup3r.bias.bias_calc.MonthlyLinearCorrection", "_autosummary/sup3r.bias.bias_calc.MonthlyScalarCorrection", "_autosummary/sup3r.bias.bias_calc.ScalarCorrection", "_autosummary/sup3r.bias.bias_calc.SkillAssessment", "_autosummary/sup3r.bias.bias_calc_cli", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_local_job", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_slurm_job", "_autosummary/sup3r.bias.bias_calc_vortex", "_autosummary/sup3r.bias.bias_calc_vortex.BiasCorrectUpdate", "_autosummary/sup3r.bias.bias_calc_vortex.VortexMeanPrepper", "_autosummary/sup3r.bias.bias_transforms", "_autosummary/sup3r.bias.bias_transforms.global_linear_bc", "_autosummary/sup3r.bias.bias_transforms.local_linear_bc", "_autosummary/sup3r.bias.bias_transforms.local_presrat_bc", "_autosummary/sup3r.bias.bias_transforms.local_qdm_bc", "_autosummary/sup3r.bias.bias_transforms.monthly_local_linear_bc", "_autosummary/sup3r.bias.mixins", "_autosummary/sup3r.bias.mixins.FillAndSmoothMixin", "_autosummary/sup3r.bias.mixins.ZeroRateMixin", "_autosummary/sup3r.bias.presrat", "_autosummary/sup3r.bias.presrat.PresRat", "_autosummary/sup3r.bias.qdm", "_autosummary/sup3r.bias.qdm.QuantileDeltaMappingCorrection", "_autosummary/sup3r.bias.utilities", "_autosummary/sup3r.bias.utilities.bias_correct_feature", "_autosummary/sup3r.bias.utilities.bias_correct_features", "_autosummary/sup3r.bias.utilities.lin_bc", "_autosummary/sup3r.bias.utilities.qdm_bc", "_autosummary/sup3r.cli", "_autosummary/sup3r.models", "_autosummary/sup3r.models.abstract", "_autosummary/sup3r.models.abstract.AbstractSingleModel", "_autosummary/sup3r.models.base", "_autosummary/sup3r.models.base.Sup3rGan", "_autosummary/sup3r.models.conditional", "_autosummary/sup3r.models.conditional.Sup3rCondMom", "_autosummary/sup3r.models.dc", "_autosummary/sup3r.models.dc.Sup3rGanDC", "_autosummary/sup3r.models.interface", "_autosummary/sup3r.models.interface.AbstractInterface", "_autosummary/sup3r.models.linear", "_autosummary/sup3r.models.linear.LinearInterp", "_autosummary/sup3r.models.multi_step", "_autosummary/sup3r.models.multi_step.MultiStepGan", "_autosummary/sup3r.models.multi_step.MultiStepSurfaceMetGan", "_autosummary/sup3r.models.multi_step.SolarMultiStepGan", "_autosummary/sup3r.models.solar_cc", "_autosummary/sup3r.models.solar_cc.SolarCC", "_autosummary/sup3r.models.surface", "_autosummary/sup3r.models.surface.SurfaceSpatialMetModel", "_autosummary/sup3r.models.utilities", "_autosummary/sup3r.models.utilities.TensorboardMixIn", "_autosummary/sup3r.models.utilities.TrainingSession", "_autosummary/sup3r.models.utilities.get_optimizer_class", "_autosummary/sup3r.models.utilities.st_interp", "_autosummary/sup3r.models.with_obs", "_autosummary/sup3r.models.with_obs.Sup3rGanWithObs", "_autosummary/sup3r.pipeline", "_autosummary/sup3r.pipeline.forward_pass", "_autosummary/sup3r.pipeline.forward_pass.ForwardPass", "_autosummary/sup3r.pipeline.forward_pass_cli", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_local_job", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_slurm_job", "_autosummary/sup3r.pipeline.pipeline_cli", "_autosummary/sup3r.pipeline.slicer", "_autosummary/sup3r.pipeline.slicer.ForwardPassSlicer", "_autosummary/sup3r.pipeline.strategy", "_autosummary/sup3r.pipeline.strategy.ForwardPassChunk", "_autosummary/sup3r.pipeline.strategy.ForwardPassStrategy", "_autosummary/sup3r.pipeline.utilities", "_autosummary/sup3r.pipeline.utilities.get_chunk_slices", "_autosummary/sup3r.pipeline.utilities.get_model", "_autosummary/sup3r.postprocessing", "_autosummary/sup3r.postprocessing.collectors", "_autosummary/sup3r.postprocessing.collectors.base", "_autosummary/sup3r.postprocessing.collectors.base.BaseCollector", "_autosummary/sup3r.postprocessing.collectors.h5", "_autosummary/sup3r.postprocessing.collectors.h5.CollectorH5", "_autosummary/sup3r.postprocessing.collectors.nc", "_autosummary/sup3r.postprocessing.collectors.nc.CollectorNC", "_autosummary/sup3r.postprocessing.data_collect_cli", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_local_job", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_slurm_job", "_autosummary/sup3r.postprocessing.writers", "_autosummary/sup3r.postprocessing.writers.base", "_autosummary/sup3r.postprocessing.writers.base.OutputHandler", "_autosummary/sup3r.postprocessing.writers.base.OutputMixin", "_autosummary/sup3r.postprocessing.writers.base.RexOutputs", "_autosummary/sup3r.postprocessing.writers.h5", "_autosummary/sup3r.postprocessing.writers.h5.OutputHandlerH5", "_autosummary/sup3r.postprocessing.writers.nc", "_autosummary/sup3r.postprocessing.writers.nc.OutputHandlerNC", "_autosummary/sup3r.preprocessing", "_autosummary/sup3r.preprocessing.accessor", "_autosummary/sup3r.preprocessing.accessor.Sup3rX", "_autosummary/sup3r.preprocessing.base", "_autosummary/sup3r.preprocessing.base.Container", "_autosummary/sup3r.preprocessing.base.DsetTuple", "_autosummary/sup3r.preprocessing.base.Sup3rDataset", "_autosummary/sup3r.preprocessing.base.Sup3rMeta", "_autosummary/sup3r.preprocessing.batch_handlers", "_autosummary/sup3r.preprocessing.batch_handlers.dc", "_autosummary/sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC", "_autosummary/sup3r.preprocessing.batch_handlers.factory", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandler", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF", "_autosummary/sup3r.preprocessing.batch_handlers.factory.DualBatchHandler", "_autosummary/sup3r.preprocessing.batch_queues", "_autosummary/sup3r.preprocessing.batch_queues.abstract", "_autosummary/sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.base", "_autosummary/sup3r.preprocessing.batch_queues.base.SingleBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.conditional", "_autosummary/sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1SF", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SF", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF", "_autosummary/sup3r.preprocessing.batch_queues.dc", "_autosummary/sup3r.preprocessing.batch_queues.dc.BatchQueueDC", "_autosummary/sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC", "_autosummary/sup3r.preprocessing.batch_queues.dual", "_autosummary/sup3r.preprocessing.batch_queues.dual.DualBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.utilities", "_autosummary/sup3r.preprocessing.batch_queues.utilities.smooth_data", "_autosummary/sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing", "_autosummary/sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing", "_autosummary/sup3r.preprocessing.cachers", "_autosummary/sup3r.preprocessing.cachers.base", "_autosummary/sup3r.preprocessing.cachers.base.Cacher", "_autosummary/sup3r.preprocessing.cachers.utilities", "_autosummary/sup3r.preprocessing.collections", "_autosummary/sup3r.preprocessing.collections.base", "_autosummary/sup3r.preprocessing.collections.base.Collection", "_autosummary/sup3r.preprocessing.collections.stats", "_autosummary/sup3r.preprocessing.collections.stats.StatsCollection", "_autosummary/sup3r.preprocessing.data_handlers", "_autosummary/sup3r.preprocessing.data_handlers.base", "_autosummary/sup3r.preprocessing.data_handlers.base.DailyDataHandler", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandler", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC", "_autosummary/sup3r.preprocessing.data_handlers.exo", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoData", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoDataHandler", "_autosummary/sup3r.preprocessing.data_handlers.exo.SingleExoDataStep", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw", "_autosummary/sup3r.preprocessing.derivers", "_autosummary/sup3r.preprocessing.derivers.base", "_autosummary/sup3r.preprocessing.derivers.base.BaseDeriver", "_autosummary/sup3r.preprocessing.derivers.base.Deriver", "_autosummary/sup3r.preprocessing.derivers.methods", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatio", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatioCC", "_autosummary/sup3r.preprocessing.derivers.methods.CloudMask", "_autosummary/sup3r.preprocessing.derivers.methods.DerivedFeature", "_autosummary/sup3r.preprocessing.derivers.methods.Latitude", "_autosummary/sup3r.preprocessing.derivers.methods.Longitude", "_autosummary/sup3r.preprocessing.derivers.methods.PressureWRF", "_autosummary/sup3r.preprocessing.derivers.methods.SurfaceRH", "_autosummary/sup3r.preprocessing.derivers.methods.Sza", "_autosummary/sup3r.preprocessing.derivers.methods.Tas", "_autosummary/sup3r.preprocessing.derivers.methods.TasMax", "_autosummary/sup3r.preprocessing.derivers.methods.TasMin", "_autosummary/sup3r.preprocessing.derivers.methods.TempNCforCC", "_autosummary/sup3r.preprocessing.derivers.methods.USolar", "_autosummary/sup3r.preprocessing.derivers.methods.UWind", "_autosummary/sup3r.preprocessing.derivers.methods.UWindPowerLaw", "_autosummary/sup3r.preprocessing.derivers.methods.VSolar", "_autosummary/sup3r.preprocessing.derivers.methods.VWind", "_autosummary/sup3r.preprocessing.derivers.methods.VWindPowerLaw", "_autosummary/sup3r.preprocessing.derivers.methods.Winddirection", "_autosummary/sup3r.preprocessing.derivers.methods.Windspeed", "_autosummary/sup3r.preprocessing.derivers.utilities", "_autosummary/sup3r.preprocessing.derivers.utilities.SolarZenith", "_autosummary/sup3r.preprocessing.derivers.utilities.invert_uv", "_autosummary/sup3r.preprocessing.derivers.utilities.parse_feature", "_autosummary/sup3r.preprocessing.derivers.utilities.transform_rotate_wind", "_autosummary/sup3r.preprocessing.derivers.utilities.windspeed_log_law", "_autosummary/sup3r.preprocessing.loaders", "_autosummary/sup3r.preprocessing.loaders.Loader", "_autosummary/sup3r.preprocessing.loaders.base", "_autosummary/sup3r.preprocessing.loaders.base.BaseLoader", "_autosummary/sup3r.preprocessing.loaders.h5", "_autosummary/sup3r.preprocessing.loaders.h5.LoaderH5", "_autosummary/sup3r.preprocessing.loaders.nc", "_autosummary/sup3r.preprocessing.loaders.nc.LoaderNC", "_autosummary/sup3r.preprocessing.loaders.utilities", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_names", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_values", "_autosummary/sup3r.preprocessing.names", "_autosummary/sup3r.preprocessing.names.Dimension", "_autosummary/sup3r.preprocessing.rasterizers", "_autosummary/sup3r.preprocessing.rasterizers.base", "_autosummary/sup3r.preprocessing.rasterizers.base.BaseRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.dual", "_autosummary/sup3r.preprocessing.rasterizers.dual.DualRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.exo", "_autosummary/sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.exo.ObsRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.exo.SzaRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.extended", "_autosummary/sup3r.preprocessing.rasterizers.extended.Rasterizer", "_autosummary/sup3r.preprocessing.samplers", "_autosummary/sup3r.preprocessing.samplers.base", "_autosummary/sup3r.preprocessing.samplers.base.Sampler", "_autosummary/sup3r.preprocessing.samplers.cc", "_autosummary/sup3r.preprocessing.samplers.cc.DualSamplerCC", "_autosummary/sup3r.preprocessing.samplers.dc", "_autosummary/sup3r.preprocessing.samplers.dc.SamplerDC", "_autosummary/sup3r.preprocessing.samplers.dual", "_autosummary/sup3r.preprocessing.samplers.dual.DualSampler", "_autosummary/sup3r.preprocessing.samplers.utilities", "_autosummary/sup3r.preprocessing.samplers.utilities.daily_time_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_box_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_time_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_box_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_time_sampler", "_autosummary/sup3r.preprocessing.utilities", "_autosummary/sup3r.preprocessing.utilities.check_signatures", "_autosummary/sup3r.preprocessing.utilities.composite_info", "_autosummary/sup3r.preprocessing.utilities.composite_sig", "_autosummary/sup3r.preprocessing.utilities.compute_if_dask", "_autosummary/sup3r.preprocessing.utilities.contains_ellipsis", "_autosummary/sup3r.preprocessing.utilities.dims_array_tuple", "_autosummary/sup3r.preprocessing.utilities.expand_paths", "_autosummary/sup3r.preprocessing.utilities.get_class_kwargs", "_autosummary/sup3r.preprocessing.utilities.get_date_range_kwargs", "_autosummary/sup3r.preprocessing.utilities.get_input_handler_class", "_autosummary/sup3r.preprocessing.utilities.get_obj_params", "_autosummary/sup3r.preprocessing.utilities.get_source_type", "_autosummary/sup3r.preprocessing.utilities.is_type_of", "_autosummary/sup3r.preprocessing.utilities.log_args", "_autosummary/sup3r.preprocessing.utilities.lower_names", "_autosummary/sup3r.preprocessing.utilities.lowered", "_autosummary/sup3r.preprocessing.utilities.make_time_index_from_kws", "_autosummary/sup3r.preprocessing.utilities.numpy_if_tensor", "_autosummary/sup3r.preprocessing.utilities.ordered_array", "_autosummary/sup3r.preprocessing.utilities.ordered_dims", "_autosummary/sup3r.preprocessing.utilities.parse_ellipsis", "_autosummary/sup3r.preprocessing.utilities.parse_features", "_autosummary/sup3r.preprocessing.utilities.parse_keys", "_autosummary/sup3r.preprocessing.utilities.parse_to_list", "_autosummary/sup3r.qa", "_autosummary/sup3r.qa.qa", "_autosummary/sup3r.qa.qa.Sup3rQa", "_autosummary/sup3r.qa.qa_cli", "_autosummary/sup3r.qa.utilities", "_autosummary/sup3r.qa.utilities.continuous_dist", "_autosummary/sup3r.qa.utilities.direct_dist", "_autosummary/sup3r.qa.utilities.frequency_spectrum", "_autosummary/sup3r.qa.utilities.gradient_dist", "_autosummary/sup3r.qa.utilities.time_derivative_dist", "_autosummary/sup3r.qa.utilities.tke_frequency_spectrum", "_autosummary/sup3r.qa.utilities.tke_wavenumber_spectrum", "_autosummary/sup3r.qa.utilities.wavenumber_spectrum", "_autosummary/sup3r.solar", "_autosummary/sup3r.solar.solar", "_autosummary/sup3r.solar.solar.Solar", "_autosummary/sup3r.solar.solar_cli", "_autosummary/sup3r.solar.solar_cli.kickoff_local_job", "_autosummary/sup3r.solar.solar_cli.kickoff_slurm_job", "_autosummary/sup3r.utilities", "_autosummary/sup3r.utilities.ModuleName", "_autosummary/sup3r.utilities.cli", "_autosummary/sup3r.utilities.cli.BaseCLI", "_autosummary/sup3r.utilities.cli.SlurmManager", "_autosummary/sup3r.utilities.era_downloader", "_autosummary/sup3r.utilities.era_downloader.EraDownloader", "_autosummary/sup3r.utilities.interpolation", "_autosummary/sup3r.utilities.interpolation.Interpolator", "_autosummary/sup3r.utilities.loss_metrics", "_autosummary/sup3r.utilities.loss_metrics.CoarseMseLoss", "_autosummary/sup3r.utilities.loss_metrics.ExpLoss", "_autosummary/sup3r.utilities.loss_metrics.LowResLoss", "_autosummary/sup3r.utilities.loss_metrics.MaterialDerivativeLoss", "_autosummary/sup3r.utilities.loss_metrics.MmdLoss", "_autosummary/sup3r.utilities.loss_metrics.PerceptualLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatialDerivativeLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatialExtremesLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatialFftLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatiotemporalFftLoss", "_autosummary/sup3r.utilities.loss_metrics.TemporalDerivativeLoss", "_autosummary/sup3r.utilities.loss_metrics.TemporalExtremesLoss", "_autosummary/sup3r.utilities.loss_metrics.gaussian_kernel", "_autosummary/sup3r.utilities.pytest", "_autosummary/sup3r.utilities.pytest.helpers", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterCC", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterDC", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory", "_autosummary/sup3r.utilities.pytest.helpers.DualSamplerTesterCC", "_autosummary/sup3r.utilities.pytest.helpers.DummyData", "_autosummary/sup3r.utilities.pytest.helpers.DummySampler", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTester", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTesterDC", "_autosummary/sup3r.utilities.pytest.helpers.make_collect_chunks", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_dset", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_h5_chunks", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_nc_file", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_tif", "_autosummary/sup3r.utilities.pytest.helpers.test_sampler_factory", "_autosummary/sup3r.utilities.utilities", "_autosummary/sup3r.utilities.utilities.Timer", "_autosummary/sup3r.utilities.utilities.camel_to_underscore", "_autosummary/sup3r.utilities.utilities.enforce_limits", "_autosummary/sup3r.utilities.utilities.generate_random_string", "_autosummary/sup3r.utilities.utilities.get_dset_attrs", "_autosummary/sup3r.utilities.utilities.get_feature_basename", "_autosummary/sup3r.utilities.utilities.get_tmp_file", "_autosummary/sup3r.utilities.utilities.nn_fill_array", "_autosummary/sup3r.utilities.utilities.pd_date_range", "_autosummary/sup3r.utilities.utilities.preprocess_datasets", "_autosummary/sup3r.utilities.utilities.safe_cast", "_autosummary/sup3r.utilities.utilities.safe_serialize", "_autosummary/sup3r.utilities.utilities.spatial_coarsening", "_autosummary/sup3r.utilities.utilities.temporal_coarsening", "_autosummary/sup3r.utilities.utilities.xr_open_mfdataset", "_cli/cli", "_cli/sup3r", "api", "examples/examples", "examples/sup3rcc", "examples/sup3rwind", "index", "misc/installation", "misc/installation_usage"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_autosummary/sup3r.rst", "_autosummary/sup3r.batch.rst", "_autosummary/sup3r.batch.batch_cli.rst", "_autosummary/sup3r.bias.rst", "_autosummary/sup3r.bias.abstract.rst", "_autosummary/sup3r.bias.abstract.AbstractBiasCorrection.rst", "_autosummary/sup3r.bias.base.rst", "_autosummary/sup3r.bias.base.DataRetrievalBase.rst", "_autosummary/sup3r.bias.bias_calc.rst", "_autosummary/sup3r.bias.bias_calc.LinearCorrection.rst", "_autosummary/sup3r.bias.bias_calc.MonthlyLinearCorrection.rst", "_autosummary/sup3r.bias.bias_calc.MonthlyScalarCorrection.rst", "_autosummary/sup3r.bias.bias_calc.ScalarCorrection.rst", "_autosummary/sup3r.bias.bias_calc.SkillAssessment.rst", "_autosummary/sup3r.bias.bias_calc_cli.rst", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_local_job.rst", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.bias.bias_calc_vortex.rst", "_autosummary/sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.rst", "_autosummary/sup3r.bias.bias_calc_vortex.VortexMeanPrepper.rst", "_autosummary/sup3r.bias.bias_transforms.rst", "_autosummary/sup3r.bias.bias_transforms.global_linear_bc.rst", "_autosummary/sup3r.bias.bias_transforms.local_linear_bc.rst", "_autosummary/sup3r.bias.bias_transforms.local_presrat_bc.rst", "_autosummary/sup3r.bias.bias_transforms.local_qdm_bc.rst", "_autosummary/sup3r.bias.bias_transforms.monthly_local_linear_bc.rst", "_autosummary/sup3r.bias.mixins.rst", "_autosummary/sup3r.bias.mixins.FillAndSmoothMixin.rst", "_autosummary/sup3r.bias.mixins.ZeroRateMixin.rst", "_autosummary/sup3r.bias.presrat.rst", "_autosummary/sup3r.bias.presrat.PresRat.rst", "_autosummary/sup3r.bias.qdm.rst", "_autosummary/sup3r.bias.qdm.QuantileDeltaMappingCorrection.rst", "_autosummary/sup3r.bias.utilities.rst", "_autosummary/sup3r.bias.utilities.bias_correct_feature.rst", "_autosummary/sup3r.bias.utilities.bias_correct_features.rst", "_autosummary/sup3r.bias.utilities.lin_bc.rst", "_autosummary/sup3r.bias.utilities.qdm_bc.rst", "_autosummary/sup3r.cli.rst", "_autosummary/sup3r.models.rst", "_autosummary/sup3r.models.abstract.rst", "_autosummary/sup3r.models.abstract.AbstractSingleModel.rst", "_autosummary/sup3r.models.base.rst", "_autosummary/sup3r.models.base.Sup3rGan.rst", "_autosummary/sup3r.models.conditional.rst", "_autosummary/sup3r.models.conditional.Sup3rCondMom.rst", "_autosummary/sup3r.models.dc.rst", "_autosummary/sup3r.models.dc.Sup3rGanDC.rst", "_autosummary/sup3r.models.interface.rst", "_autosummary/sup3r.models.interface.AbstractInterface.rst", "_autosummary/sup3r.models.linear.rst", "_autosummary/sup3r.models.linear.LinearInterp.rst", "_autosummary/sup3r.models.multi_step.rst", "_autosummary/sup3r.models.multi_step.MultiStepGan.rst", "_autosummary/sup3r.models.multi_step.MultiStepSurfaceMetGan.rst", "_autosummary/sup3r.models.multi_step.SolarMultiStepGan.rst", "_autosummary/sup3r.models.solar_cc.rst", "_autosummary/sup3r.models.solar_cc.SolarCC.rst", "_autosummary/sup3r.models.surface.rst", "_autosummary/sup3r.models.surface.SurfaceSpatialMetModel.rst", "_autosummary/sup3r.models.utilities.rst", "_autosummary/sup3r.models.utilities.TensorboardMixIn.rst", "_autosummary/sup3r.models.utilities.TrainingSession.rst", "_autosummary/sup3r.models.utilities.get_optimizer_class.rst", "_autosummary/sup3r.models.utilities.st_interp.rst", "_autosummary/sup3r.models.with_obs.rst", "_autosummary/sup3r.models.with_obs.Sup3rGanWithObs.rst", "_autosummary/sup3r.pipeline.rst", "_autosummary/sup3r.pipeline.forward_pass.rst", "_autosummary/sup3r.pipeline.forward_pass.ForwardPass.rst", "_autosummary/sup3r.pipeline.forward_pass_cli.rst", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_local_job.rst", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.pipeline.pipeline_cli.rst", "_autosummary/sup3r.pipeline.slicer.rst", "_autosummary/sup3r.pipeline.slicer.ForwardPassSlicer.rst", "_autosummary/sup3r.pipeline.strategy.rst", "_autosummary/sup3r.pipeline.strategy.ForwardPassChunk.rst", "_autosummary/sup3r.pipeline.strategy.ForwardPassStrategy.rst", "_autosummary/sup3r.pipeline.utilities.rst", "_autosummary/sup3r.pipeline.utilities.get_chunk_slices.rst", "_autosummary/sup3r.pipeline.utilities.get_model.rst", "_autosummary/sup3r.postprocessing.rst", "_autosummary/sup3r.postprocessing.collectors.rst", "_autosummary/sup3r.postprocessing.collectors.base.rst", "_autosummary/sup3r.postprocessing.collectors.base.BaseCollector.rst", "_autosummary/sup3r.postprocessing.collectors.h5.rst", "_autosummary/sup3r.postprocessing.collectors.h5.CollectorH5.rst", "_autosummary/sup3r.postprocessing.collectors.nc.rst", "_autosummary/sup3r.postprocessing.collectors.nc.CollectorNC.rst", "_autosummary/sup3r.postprocessing.data_collect_cli.rst", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_local_job.rst", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.postprocessing.writers.rst", "_autosummary/sup3r.postprocessing.writers.base.rst", "_autosummary/sup3r.postprocessing.writers.base.OutputHandler.rst", "_autosummary/sup3r.postprocessing.writers.base.OutputMixin.rst", "_autosummary/sup3r.postprocessing.writers.base.RexOutputs.rst", "_autosummary/sup3r.postprocessing.writers.h5.rst", "_autosummary/sup3r.postprocessing.writers.h5.OutputHandlerH5.rst", "_autosummary/sup3r.postprocessing.writers.nc.rst", "_autosummary/sup3r.postprocessing.writers.nc.OutputHandlerNC.rst", "_autosummary/sup3r.preprocessing.rst", "_autosummary/sup3r.preprocessing.accessor.rst", "_autosummary/sup3r.preprocessing.accessor.Sup3rX.rst", "_autosummary/sup3r.preprocessing.base.rst", "_autosummary/sup3r.preprocessing.base.Container.rst", "_autosummary/sup3r.preprocessing.base.DsetTuple.rst", "_autosummary/sup3r.preprocessing.base.Sup3rDataset.rst", "_autosummary/sup3r.preprocessing.base.Sup3rMeta.rst", "_autosummary/sup3r.preprocessing.batch_handlers.rst", "_autosummary/sup3r.preprocessing.batch_handlers.dc.rst", "_autosummary/sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandler.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.rst", "_autosummary/sup3r.preprocessing.batch_queues.rst", "_autosummary/sup3r.preprocessing.batch_queues.abstract.rst", "_autosummary/sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.base.rst", "_autosummary/sup3r.preprocessing.batch_queues.base.SingleBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.rst", "_autosummary/sup3r.preprocessing.batch_queues.dc.rst", "_autosummary/sup3r.preprocessing.batch_queues.dc.BatchQueueDC.rst", "_autosummary/sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.rst", "_autosummary/sup3r.preprocessing.batch_queues.dual.rst", "_autosummary/sup3r.preprocessing.batch_queues.dual.DualBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.smooth_data.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing.rst", "_autosummary/sup3r.preprocessing.cachers.rst", "_autosummary/sup3r.preprocessing.cachers.base.rst", "_autosummary/sup3r.preprocessing.cachers.base.Cacher.rst", "_autosummary/sup3r.preprocessing.cachers.utilities.rst", "_autosummary/sup3r.preprocessing.collections.rst", "_autosummary/sup3r.preprocessing.collections.base.rst", "_autosummary/sup3r.preprocessing.collections.base.Collection.rst", "_autosummary/sup3r.preprocessing.collections.stats.rst", "_autosummary/sup3r.preprocessing.collections.stats.StatsCollection.rst", "_autosummary/sup3r.preprocessing.data_handlers.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DailyDataHandler.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandler.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoData.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoDataHandler.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.rst", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.rst", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.rst", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.rst", "_autosummary/sup3r.preprocessing.derivers.rst", "_autosummary/sup3r.preprocessing.derivers.base.rst", "_autosummary/sup3r.preprocessing.derivers.base.BaseDeriver.rst", "_autosummary/sup3r.preprocessing.derivers.base.Deriver.rst", "_autosummary/sup3r.preprocessing.derivers.methods.rst", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatio.rst", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatioCC.rst", "_autosummary/sup3r.preprocessing.derivers.methods.CloudMask.rst", "_autosummary/sup3r.preprocessing.derivers.methods.DerivedFeature.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Latitude.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Longitude.rst", "_autosummary/sup3r.preprocessing.derivers.methods.PressureWRF.rst", "_autosummary/sup3r.preprocessing.derivers.methods.SurfaceRH.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Sza.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Tas.rst", "_autosummary/sup3r.preprocessing.derivers.methods.TasMax.rst", "_autosummary/sup3r.preprocessing.derivers.methods.TasMin.rst", "_autosummary/sup3r.preprocessing.derivers.methods.TempNCforCC.rst", "_autosummary/sup3r.preprocessing.derivers.methods.USolar.rst", "_autosummary/sup3r.preprocessing.derivers.methods.UWind.rst", "_autosummary/sup3r.preprocessing.derivers.methods.UWindPowerLaw.rst", "_autosummary/sup3r.preprocessing.derivers.methods.VSolar.rst", "_autosummary/sup3r.preprocessing.derivers.methods.VWind.rst", "_autosummary/sup3r.preprocessing.derivers.methods.VWindPowerLaw.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Winddirection.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Windspeed.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.SolarZenith.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.invert_uv.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.parse_feature.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.transform_rotate_wind.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.windspeed_log_law.rst", "_autosummary/sup3r.preprocessing.loaders.rst", "_autosummary/sup3r.preprocessing.loaders.Loader.rst", "_autosummary/sup3r.preprocessing.loaders.base.rst", "_autosummary/sup3r.preprocessing.loaders.base.BaseLoader.rst", "_autosummary/sup3r.preprocessing.loaders.h5.rst", "_autosummary/sup3r.preprocessing.loaders.h5.LoaderH5.rst", "_autosummary/sup3r.preprocessing.loaders.nc.rst", "_autosummary/sup3r.preprocessing.loaders.nc.LoaderNC.rst", "_autosummary/sup3r.preprocessing.loaders.utilities.rst", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_names.rst", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_values.rst", "_autosummary/sup3r.preprocessing.names.rst", "_autosummary/sup3r.preprocessing.names.Dimension.rst", "_autosummary/sup3r.preprocessing.rasterizers.rst", "_autosummary/sup3r.preprocessing.rasterizers.base.rst", "_autosummary/sup3r.preprocessing.rasterizers.base.BaseRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.dual.rst", "_autosummary/sup3r.preprocessing.rasterizers.dual.DualRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.ObsRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.SzaRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.extended.rst", "_autosummary/sup3r.preprocessing.rasterizers.extended.Rasterizer.rst", "_autosummary/sup3r.preprocessing.samplers.rst", "_autosummary/sup3r.preprocessing.samplers.base.rst", "_autosummary/sup3r.preprocessing.samplers.base.Sampler.rst", "_autosummary/sup3r.preprocessing.samplers.cc.rst", "_autosummary/sup3r.preprocessing.samplers.cc.DualSamplerCC.rst", "_autosummary/sup3r.preprocessing.samplers.dc.rst", "_autosummary/sup3r.preprocessing.samplers.dc.SamplerDC.rst", "_autosummary/sup3r.preprocessing.samplers.dual.rst", "_autosummary/sup3r.preprocessing.samplers.dual.DualSampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.daily_time_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_box_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_time_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_box_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_time_sampler.rst", "_autosummary/sup3r.preprocessing.utilities.rst", "_autosummary/sup3r.preprocessing.utilities.check_signatures.rst", "_autosummary/sup3r.preprocessing.utilities.composite_info.rst", "_autosummary/sup3r.preprocessing.utilities.composite_sig.rst", "_autosummary/sup3r.preprocessing.utilities.compute_if_dask.rst", "_autosummary/sup3r.preprocessing.utilities.contains_ellipsis.rst", "_autosummary/sup3r.preprocessing.utilities.dims_array_tuple.rst", "_autosummary/sup3r.preprocessing.utilities.expand_paths.rst", "_autosummary/sup3r.preprocessing.utilities.get_class_kwargs.rst", "_autosummary/sup3r.preprocessing.utilities.get_date_range_kwargs.rst", "_autosummary/sup3r.preprocessing.utilities.get_input_handler_class.rst", "_autosummary/sup3r.preprocessing.utilities.get_obj_params.rst", "_autosummary/sup3r.preprocessing.utilities.get_source_type.rst", "_autosummary/sup3r.preprocessing.utilities.is_type_of.rst", "_autosummary/sup3r.preprocessing.utilities.log_args.rst", "_autosummary/sup3r.preprocessing.utilities.lower_names.rst", "_autosummary/sup3r.preprocessing.utilities.lowered.rst", "_autosummary/sup3r.preprocessing.utilities.make_time_index_from_kws.rst", "_autosummary/sup3r.preprocessing.utilities.numpy_if_tensor.rst", "_autosummary/sup3r.preprocessing.utilities.ordered_array.rst", "_autosummary/sup3r.preprocessing.utilities.ordered_dims.rst", "_autosummary/sup3r.preprocessing.utilities.parse_ellipsis.rst", "_autosummary/sup3r.preprocessing.utilities.parse_features.rst", "_autosummary/sup3r.preprocessing.utilities.parse_keys.rst", "_autosummary/sup3r.preprocessing.utilities.parse_to_list.rst", "_autosummary/sup3r.qa.rst", "_autosummary/sup3r.qa.qa.rst", "_autosummary/sup3r.qa.qa.Sup3rQa.rst", "_autosummary/sup3r.qa.qa_cli.rst", "_autosummary/sup3r.qa.utilities.rst", "_autosummary/sup3r.qa.utilities.continuous_dist.rst", "_autosummary/sup3r.qa.utilities.direct_dist.rst", "_autosummary/sup3r.qa.utilities.frequency_spectrum.rst", "_autosummary/sup3r.qa.utilities.gradient_dist.rst", "_autosummary/sup3r.qa.utilities.time_derivative_dist.rst", "_autosummary/sup3r.qa.utilities.tke_frequency_spectrum.rst", "_autosummary/sup3r.qa.utilities.tke_wavenumber_spectrum.rst", "_autosummary/sup3r.qa.utilities.wavenumber_spectrum.rst", "_autosummary/sup3r.solar.rst", "_autosummary/sup3r.solar.solar.rst", "_autosummary/sup3r.solar.solar.Solar.rst", "_autosummary/sup3r.solar.solar_cli.rst", "_autosummary/sup3r.solar.solar_cli.kickoff_local_job.rst", "_autosummary/sup3r.solar.solar_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.utilities.rst", "_autosummary/sup3r.utilities.ModuleName.rst", "_autosummary/sup3r.utilities.cli.rst", "_autosummary/sup3r.utilities.cli.BaseCLI.rst", "_autosummary/sup3r.utilities.cli.SlurmManager.rst", "_autosummary/sup3r.utilities.era_downloader.rst", "_autosummary/sup3r.utilities.era_downloader.EraDownloader.rst", "_autosummary/sup3r.utilities.interpolation.rst", "_autosummary/sup3r.utilities.interpolation.Interpolator.rst", "_autosummary/sup3r.utilities.loss_metrics.rst", "_autosummary/sup3r.utilities.loss_metrics.CoarseMseLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.ExpLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.LowResLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.MaterialDerivativeLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.MmdLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.PerceptualLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatialDerivativeLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatialExtremesLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatialFftLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatiotemporalFftLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.TemporalDerivativeLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.TemporalExtremesLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.gaussian_kernel.rst", "_autosummary/sup3r.utilities.pytest.rst", "_autosummary/sup3r.utilities.pytest.helpers.rst", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.rst", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.rst", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory.rst", "_autosummary/sup3r.utilities.pytest.helpers.DualSamplerTesterCC.rst", "_autosummary/sup3r.utilities.pytest.helpers.DummyData.rst", "_autosummary/sup3r.utilities.pytest.helpers.DummySampler.rst", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTester.rst", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTesterDC.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_collect_chunks.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_dset.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_h5_chunks.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_nc_file.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_tif.rst", "_autosummary/sup3r.utilities.pytest.helpers.test_sampler_factory.rst", "_autosummary/sup3r.utilities.utilities.rst", "_autosummary/sup3r.utilities.utilities.Timer.rst", "_autosummary/sup3r.utilities.utilities.camel_to_underscore.rst", "_autosummary/sup3r.utilities.utilities.enforce_limits.rst", "_autosummary/sup3r.utilities.utilities.generate_random_string.rst", "_autosummary/sup3r.utilities.utilities.get_dset_attrs.rst", "_autosummary/sup3r.utilities.utilities.get_feature_basename.rst", "_autosummary/sup3r.utilities.utilities.get_tmp_file.rst", "_autosummary/sup3r.utilities.utilities.nn_fill_array.rst", "_autosummary/sup3r.utilities.utilities.pd_date_range.rst", "_autosummary/sup3r.utilities.utilities.preprocess_datasets.rst", "_autosummary/sup3r.utilities.utilities.safe_cast.rst", "_autosummary/sup3r.utilities.utilities.safe_serialize.rst", "_autosummary/sup3r.utilities.utilities.spatial_coarsening.rst", "_autosummary/sup3r.utilities.utilities.temporal_coarsening.rst", "_autosummary/sup3r.utilities.utilities.xr_open_mfdataset.rst", "_cli/cli.rst", "_cli/sup3r.rst", "api.rst", "examples/examples.rst", "examples/sup3rcc.rst", "examples/sup3rwind.rst", "index.rst", "misc/installation.rst", "misc/installation_usage.rst"], "indexentries": {"--background": [[343, "cmdoption-sup3r-pipeline-background", false]], "--cancel": [[343, "cmdoption-sup3r-batch-cancel", false], [343, "cmdoption-sup3r-pipeline-cancel", false]], "--config_file": [[343, "cmdoption-sup3r-c", false]], "--delete": [[343, "cmdoption-sup3r-batch-delete", false]], "--dry-run": [[343, "cmdoption-sup3r-batch-dry-run", false]], "--monitor": [[343, "cmdoption-sup3r-pipeline-monitor", false]], "--monitor-background": [[343, "cmdoption-sup3r-batch-monitor-background", false]], "--verbose": [[343, "cmdoption-sup3r-batch-v", false], [343, "cmdoption-sup3r-bias-calc-v", false], [343, "cmdoption-sup3r-data-collect-v", false], [343, "cmdoption-sup3r-forward-pass-v", false], [343, "cmdoption-sup3r-pipeline-v", false], [343, "cmdoption-sup3r-qa-v", false], [343, "cmdoption-sup3r-solar-v", false], [343, "cmdoption-sup3r-v", false]], "--version": [[343, "cmdoption-sup3r-version", false]], "-c": [[343, "cmdoption-sup3r-c", false]], "-v": [[343, "cmdoption-sup3r-batch-v", false], [343, "cmdoption-sup3r-bias-calc-v", false], [343, "cmdoption-sup3r-data-collect-v", false], [343, "cmdoption-sup3r-forward-pass-v", false], [343, "cmdoption-sup3r-pipeline-v", false], [343, "cmdoption-sup3r-qa-v", false], [343, "cmdoption-sup3r-solar-v", false], [343, "cmdoption-sup3r-v", false]], "__add__() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.__add__", false]], "__add__() (modulename method)": [[287, "sup3r.utilities.ModuleName.__add__", false]], "__call__() (coarsemseloss method)": [[296, "sup3r.utilities.loss_metrics.CoarseMseLoss.__call__", false]], "__call__() (exploss method)": [[297, "sup3r.utilities.loss_metrics.ExpLoss.__call__", false]], "__call__() (lowresloss method)": [[298, "sup3r.utilities.loss_metrics.LowResLoss.__call__", false]], "__call__() (materialderivativeloss method)": [[299, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.__call__", false]], "__call__() (mmdloss method)": [[300, "sup3r.utilities.loss_metrics.MmdLoss.__call__", false]], "__call__() (perceptualloss method)": [[301, "sup3r.utilities.loss_metrics.PerceptualLoss.__call__", false]], "__call__() (spatialderivativeloss method)": [[302, "sup3r.utilities.loss_metrics.SpatialDerivativeLoss.__call__", false]], "__call__() (spatialextremesloss method)": [[303, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.__call__", false]], "__call__() (spatialfftloss method)": [[304, "sup3r.utilities.loss_metrics.SpatialFftLoss.__call__", false]], "__call__() (spatiotemporalfftloss method)": [[305, "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss.__call__", false]], "__call__() (sup3rmeta method)": [[109, "sup3r.preprocessing.base.Sup3rMeta.__call__", false]], "__call__() (temporalderivativeloss method)": [[306, "sup3r.utilities.loss_metrics.TemporalDerivativeLoss.__call__", false]], "__call__() (temporalextremesloss method)": [[307, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.__call__", false]], "__call__() (timer method)": [[327, "sup3r.utilities.utilities.Timer.__call__", false]], "__mul__() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.__mul__", false]], "__mul__() (modulename method)": [[287, "sup3r.utilities.ModuleName.__mul__", false]], "__mul__() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.__mul__", false]], "abstractbatchqueue (class in sup3r.preprocessing.batch_queues.abstract)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue", false]], "abstractbiascorrection (class in sup3r.bias.abstract)": [[5, "sup3r.bias.abstract.AbstractBiasCorrection", false]], "abstractinterface (class in sup3r.models.interface)": [[49, "sup3r.models.interface.AbstractInterface", false]], "abstractsinglemodel (class in sup3r.models.abstract)": [[41, "sup3r.models.abstract.AbstractSingleModel", false]], "add_dataset() (rexoutputs class method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.add_dataset", false]], "add_dims_to_data_vars() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.add_dims_to_data_vars", false]], "add_pressure() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.add_pressure", false]], "add_status_cmd() (basecli class method)": [[289, "sup3r.utilities.cli.BaseCLI.add_status_cmd", false]], "adders (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.adders", false]], "all_names() (modulename class method)": [[287, "sup3r.utilities.ModuleName.all_names", false]], "all_vars_exist() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.all_vars_exist", false]], "as_array() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.as_array", false]], "assign() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.assign", false]], "attrs (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.attrs", false]], "base_loader (datahandlerh5solarcc attribute)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.BASE_LOADER", false]], "base_loader (datahandlerh5windcc attribute)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.BASE_LOADER", false]], "base_loader (loaderh5 attribute)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5.BASE_LOADER", false]], "base_loader() (baseloader method)": [[203, "sup3r.preprocessing.loaders.base.BaseLoader.BASE_LOADER", false]], "base_loader() (loader method)": [[201, "sup3r.preprocessing.loaders.Loader.BASE_LOADER", false]], "base_loader() (loadernc method)": [[207, "sup3r.preprocessing.loaders.nc.LoaderNC.BASE_LOADER", false]], "basecli (class in sup3r.utilities.cli)": [[289, "sup3r.utilities.cli.BaseCLI", false]], "basecollector (class in sup3r.postprocessing.collectors.base)": [[85, "sup3r.postprocessing.collectors.base.BaseCollector", false]], "basederiver (class in sup3r.preprocessing.derivers.base)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver", false]], "baseexorasterizer (class in sup3r.preprocessing.rasterizers.exo)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer", false]], "baseloader (class in sup3r.preprocessing.loaders.base)": [[203, "sup3r.preprocessing.loaders.base.BaseLoader", false]], "baserasterizer (class in sup3r.preprocessing.rasterizers.base)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer", false]], "batchhandler (class in sup3r.preprocessing.batch_handlers.factory)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler", false]], "batchhandlercc (class in sup3r.preprocessing.batch_handlers.factory)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC", false]], "batchhandlerdc (class in sup3r.preprocessing.batch_handlers.dc)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC", false]], "batchhandlerfactory() (in module sup3r.preprocessing.batch_handlers.factory)": [[116, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory", false]], "batchhandlermom1 (class in sup3r.preprocessing.batch_handlers.factory)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1", false]], "batchhandlermom1sf (class in sup3r.preprocessing.batch_handlers.factory)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF", false]], "batchhandlermom2 (class in sup3r.preprocessing.batch_handlers.factory)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2", false]], "batchhandlermom2sep (class in sup3r.preprocessing.batch_handlers.factory)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep", false]], "batchhandlermom2sepsf (class in sup3r.preprocessing.batch_handlers.factory)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF", false]], "batchhandlermom2sf (in module sup3r.preprocessing.batch_handlers.factory)": [[120, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF", false]], "batchhandlertestercc (class in sup3r.utilities.pytest.helpers)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC", false]], "batchhandlertesterdc (class in sup3r.utilities.pytest.helpers)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC", false]], "batchhandlertesterfactory() (in module sup3r.utilities.pytest.helpers)": [[313, "sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory", false]], "batchqueuedc (class in sup3r.preprocessing.batch_queues.dc)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC", false]], "bias_correct_feature() (in module sup3r.bias.utilities)": [[34, "sup3r.bias.utilities.bias_correct_feature", false]], "bias_correct_features() (in module sup3r.bias.utilities)": [[35, "sup3r.bias.utilities.bias_correct_features", false]], "bias_correct_input_handler() (sup3rqa method)": [[269, "sup3r.qa.qa.Sup3rQa.bias_correct_input_handler", false]], "biascorrectupdate (class in sup3r.bias.bias_calc_vortex)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate", false]], "cache_data() (cacher method)": [[148, "sup3r.preprocessing.cachers.base.Cacher.cache_data", false]], "cache_file (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.cache_file", false]], "cache_file (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.cache_file", false]], "cache_file (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.cache_file", false]], "cache_file (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.cache_file", false]], "cache_files (exodatahandler property)": [[163, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.cache_files", false]], "cacher (class in sup3r.preprocessing.cachers.base)": [[148, "sup3r.preprocessing.cachers.base.Cacher", false]], "calc_k_factor() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.calc_k_factor", false]], "calc_loss() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.calc_loss", false]], "calc_loss() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_loss", false]], "calc_loss() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.calc_loss", false]], "calc_loss() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.calc_loss", false]], "calc_loss() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.calc_loss", false]], "calc_loss() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.calc_loss", false]], "calc_loss_cond_mom() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.calc_loss_cond_mom", false]], "calc_loss_disc() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_loss_disc", false]], "calc_loss_disc() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.calc_loss_disc", false]], "calc_loss_disc() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.calc_loss_disc", false]], "calc_loss_disc() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.calc_loss_disc", false]], "calc_loss_gen_content() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_loss_gen_content", false]], "calc_loss_gen_content() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.calc_loss_gen_content", false]], "calc_loss_gen_content() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.calc_loss_gen_content", false]], "calc_loss_gen_content() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.calc_loss_gen_content", false]], "calc_tau_fut() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.calc_tau_fut", false]], "calc_val_loss() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_val_loss", false]], "calc_val_loss() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.calc_val_loss", false]], "calc_val_loss() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.calc_val_loss", false]], "calc_val_loss() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.calc_val_loss", false]], "calc_val_loss() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.calc_val_loss", false]], "calc_val_loss_gen() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.calc_val_loss_gen", false]], "call() (coarsemseloss method)": [[296, "sup3r.utilities.loss_metrics.CoarseMseLoss.call", false]], "call() (exploss method)": [[297, "sup3r.utilities.loss_metrics.ExpLoss.call", false]], "call() (lowresloss method)": [[298, "sup3r.utilities.loss_metrics.LowResLoss.call", false]], "call() (materialderivativeloss method)": [[299, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.call", false]], "call() (mmdloss method)": [[300, "sup3r.utilities.loss_metrics.MmdLoss.call", false]], "call() (perceptualloss method)": [[301, "sup3r.utilities.loss_metrics.PerceptualLoss.call", false]], "call() (spatialderivativeloss method)": [[302, "sup3r.utilities.loss_metrics.SpatialDerivativeLoss.call", false]], "call() (spatialextremesloss method)": [[303, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.call", false]], "call() (spatialfftloss method)": [[304, "sup3r.utilities.loss_metrics.SpatialFftLoss.call", false]], "call() (spatiotemporalfftloss method)": [[305, "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss.call", false]], "call() (temporalderivativeloss method)": [[306, "sup3r.utilities.loss_metrics.TemporalDerivativeLoss.call", false]], "call() (temporalextremesloss method)": [[307, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.call", false]], "camel_to_underscore() (in module sup3r.utilities.utilities)": [[328, "sup3r.utilities.utilities.camel_to_underscore", false]], "capitalize() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.capitalize", false]], "capitalize() (modulename method)": [[287, "sup3r.utilities.ModuleName.capitalize", false]], "casefold() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.casefold", false]], "casefold() (modulename method)": [[287, "sup3r.utilities.ModuleName.casefold", false]], "center() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.center", false]], "center() (modulename method)": [[287, "sup3r.utilities.ModuleName.center", false]], "change_qos() (slurmmanager method)": [[290, "sup3r.utilities.cli.SlurmManager.change_qos", false]], "check_batch_handler_attrs() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.check_batch_handler_attrs", false]], "check_batch_handler_attrs() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.check_batch_handler_attrs", false]], "check_batch_handler_attrs() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.check_batch_handler_attrs", false]], "check_batch_handler_attrs() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.check_batch_handler_attrs", false]], "check_boundary_slice() (forwardpassslicer method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.check_boundary_slice", false]], "check_enhancement_factors() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.check_enhancement_factors", false]], "check_enhancement_factors() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.check_enhancement_factors", false]], "check_enhancement_factors() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.check_enhancement_factors", false]], "check_enhancement_factors() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.check_enhancement_factors", false]], "check_enhancement_factors() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.check_enhancement_factors", false]], "check_features() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.check_features", false]], "check_features() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.check_features", false]], "check_features() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.check_features", false]], "check_features() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.check_features", false]], "check_features() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.check_features", false]], "check_features() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.check_features", false]], "check_features() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.check_features", false]], "check_features() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.check_features", false]], "check_features() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.check_features", false]], "check_features() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.check_features", false]], "check_features() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.check_features", false]], "check_features() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.check_features", false]], "check_features() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.check_features", false]], "check_features() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.check_features", false]], "check_features() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.check_features", false]], "check_features() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.check_features", false]], "check_features() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.check_features", false]], "check_features() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.check_features", false]], "check_features() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.check_features", false]], "check_features() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.check_features", false]], "check_features() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.check_features", false]], "check_features() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.check_features", false]], "check_features() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.check_features", false]], "check_for_consistent_shapes() (dualsampler method)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.check_for_consistent_shapes", false]], "check_for_consistent_shapes() (dualsamplercc method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.check_for_consistent_shapes", false]], "check_module_name() (basecli class method)": [[289, "sup3r.utilities.cli.BaseCLI.check_module_name", false]], "check_registry() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.check_registry", false]], "check_registry() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.check_registry", false]], "check_registry() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.check_registry", false]], "check_registry() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.check_registry", false]], "check_registry() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.check_registry", false]], "check_registry() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.check_registry", false]], "check_registry() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.check_registry", false]], "check_registry() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.check_registry", false]], "check_regridded_lr_data() (dualrasterizer method)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.check_regridded_lr_data", false]], "check_shared_attr() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.check_shared_attr", false]], "check_shared_attr() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.check_shared_attr", false]], "check_shared_attr() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.check_shared_attr", false]], "check_shared_attr() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.check_shared_attr", false]], "check_shared_attr() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.check_shared_attr", false]], "check_shared_attr() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.check_shared_attr", false]], "check_shared_attr() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.check_shared_attr", false]], "check_shared_attr() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.check_shared_attr", false]], "check_shared_attr() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.check_shared_attr", false]], "check_shared_attr() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.check_shared_attr", false]], "check_shared_attr() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.check_shared_attr", false]], "check_shared_attr() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.check_shared_attr", false]], "check_shared_attr() (collection method)": [[152, "sup3r.preprocessing.collections.base.Collection.check_shared_attr", false]], "check_shared_attr() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.check_shared_attr", false]], "check_shared_attr() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.check_shared_attr", false]], "check_shared_attr() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.check_shared_attr", false]], "check_shared_attr() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.check_shared_attr", false]], "check_shared_attr() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.check_shared_attr", false]], "check_shared_attr() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.check_shared_attr", false]], "check_shared_attr() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.check_shared_attr", false]], "check_shared_attr() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.check_shared_attr", false]], "check_shared_attr() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.check_shared_attr", false]], "check_shared_attr() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.check_shared_attr", false]], "check_shared_attr() (statscollection method)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.check_shared_attr", false]], "check_shared_attr() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.check_shared_attr", false]], "check_signatures() (in module sup3r.preprocessing.utilities)": [[243, "sup3r.preprocessing.utilities.check_signatures", false]], "check_status() (slurmmanager method)": [[290, "sup3r.utilities.cli.SlurmManager.check_status", false]], "check_status_using_job_id() (slurmmanager method)": [[290, "sup3r.utilities.cli.SlurmManager.check_status_using_job_id", false]], "check_target_and_shape() (baserasterizer method)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.check_target_and_shape", false]], "check_target_and_shape() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.check_target_and_shape", false]], "chunk_finished() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.chunk_finished", false]], "chunk_lookup (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.chunk_lookup", false]], "chunk_masked() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.chunk_masked", false]], "chunks (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.chunks", false]], "clear() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.clear", false]], "clear() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.clear", false]], "clearsky_ratio (solar property)": [[282, "sup3r.solar.solar.Solar.clearsky_ratio", false]], "clearskyratio (class in sup3r.preprocessing.derivers.methods)": [[173, "sup3r.preprocessing.derivers.methods.ClearSkyRatio", false]], "clearskyratiocc (class in sup3r.preprocessing.derivers.methods)": [[174, "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC", false]], "close() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.close", false]], "close() (solar method)": [[282, "sup3r.solar.solar.Solar.close", false]], "close() (sup3rqa method)": [[269, "sup3r.qa.qa.Sup3rQa.close", false]], "cloud_mask (solar property)": [[282, "sup3r.solar.solar.Solar.cloud_mask", false]], "cloudmask (class in sup3r.preprocessing.derivers.methods)": [[175, "sup3r.preprocessing.derivers.methods.CloudMask", false]], "coarsemseloss (class in sup3r.utilities.loss_metrics)": [[296, "sup3r.utilities.loss_metrics.CoarseMseLoss", false]], "coarsen() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.coarsen", false]], "coarsen_data() (sup3rqa method)": [[269, "sup3r.qa.qa.Sup3rQa.coarsen_data", false]], "collect() (basecollector class method)": [[85, "sup3r.postprocessing.collectors.base.BaseCollector.collect", false]], "collect() (collectorh5 class method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.collect", false]], "collect() (collectornc class method)": [[89, "sup3r.postprocessing.collectors.nc.CollectorNC.collect", false]], "collect_feature() (collectorh5 method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.collect_feature", false]], "collect_input_attrs() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.collect_input_attrs", false]], "collect_input_attrs() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.collect_input_attrs", false]], "collect_input_attrs() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.collect_input_attrs", false]], "collect_input_attrs() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.collect_input_attrs", false]], "collect_input_attrs() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.collect_input_attrs", false]], "collect_input_attrs() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.collect_input_attrs", false]], "collect_input_attrs() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.collect_input_attrs", false]], "collect_input_attrs() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.collect_input_attrs", false]], "collection (class in sup3r.preprocessing.collections.base)": [[152, "sup3r.preprocessing.collections.base.Collection", false]], "collectorh5 (class in sup3r.postprocessing.collectors.h5)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5", false]], "collectornc (class in sup3r.postprocessing.collectors.nc)": [[89, "sup3r.postprocessing.collectors.nc.CollectorNC", false]], "compare_dists() (dataretrievalbase static method)": [[7, "sup3r.bias.base.DataRetrievalBase.compare_dists", false]], "compare_dists() (linearcorrection static method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.compare_dists", false]], "compare_dists() (monthlylinearcorrection static method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.compare_dists", false]], "compare_dists() (monthlyscalarcorrection static method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.compare_dists", false]], "compare_dists() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.compare_dists", false]], "compare_dists() (quantiledeltamappingcorrection static method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.compare_dists", false]], "compare_dists() (scalarcorrection static method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.compare_dists", false]], "compare_dists() (skillassessment static method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.compare_dists", false]], "composite_info() (in module sup3r.preprocessing.utilities)": [[244, "sup3r.preprocessing.utilities.composite_info", false]], "composite_sig() (in module sup3r.preprocessing.utilities)": [[245, "sup3r.preprocessing.utilities.composite_sig", false]], "compute() (clearskyratio class method)": [[173, "sup3r.preprocessing.derivers.methods.ClearSkyRatio.compute", false]], "compute() (clearskyratiocc class method)": [[174, "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC.compute", false]], "compute() (cloudmask class method)": [[175, "sup3r.preprocessing.derivers.methods.CloudMask.compute", false]], "compute() (derivedfeature class method)": [[176, "sup3r.preprocessing.derivers.methods.DerivedFeature.compute", false]], "compute() (latitude class method)": [[177, "sup3r.preprocessing.derivers.methods.Latitude.compute", false]], "compute() (longitude class method)": [[178, "sup3r.preprocessing.derivers.methods.Longitude.compute", false]], "compute() (pressurewrf class method)": [[179, "sup3r.preprocessing.derivers.methods.PressureWRF.compute", false]], "compute() (sup3rdataset method)": [[108, "sup3r.preprocessing.base.Sup3rDataset.compute", false]], "compute() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.compute", false]], "compute() (surfacerh class method)": [[180, "sup3r.preprocessing.derivers.methods.SurfaceRH.compute", false]], "compute() (sza class method)": [[181, "sup3r.preprocessing.derivers.methods.Sza.compute", false]], "compute() (tas class method)": [[182, "sup3r.preprocessing.derivers.methods.Tas.compute", false]], "compute() (tasmax class method)": [[183, "sup3r.preprocessing.derivers.methods.TasMax.compute", false]], "compute() (tasmin class method)": [[184, "sup3r.preprocessing.derivers.methods.TasMin.compute", false]], "compute() (tempncforcc class method)": [[185, "sup3r.preprocessing.derivers.methods.TempNCforCC.compute", false]], "compute() (usolar class method)": [[186, "sup3r.preprocessing.derivers.methods.USolar.compute", false]], "compute() (uwind class method)": [[187, "sup3r.preprocessing.derivers.methods.UWind.compute", false]], "compute() (uwindpowerlaw class method)": [[188, "sup3r.preprocessing.derivers.methods.UWindPowerLaw.compute", false]], "compute() (vsolar class method)": [[189, "sup3r.preprocessing.derivers.methods.VSolar.compute", false]], "compute() (vwind class method)": [[190, "sup3r.preprocessing.derivers.methods.VWind.compute", false]], "compute() (vwindpowerlaw class method)": [[191, "sup3r.preprocessing.derivers.methods.VWindPowerLaw.compute", false]], "compute() (winddirection class method)": [[192, "sup3r.preprocessing.derivers.methods.Winddirection.compute", false]], "compute() (windspeed class method)": [[193, "sup3r.preprocessing.derivers.methods.Windspeed.compute", false]], "compute_if_dask() (in module sup3r.preprocessing.utilities)": [[246, "sup3r.preprocessing.utilities.compute_if_dask", false]], "conditionalbatchqueue (class in sup3r.preprocessing.batch_queues.conditional)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue", false]], "container (class in sup3r.preprocessing.base)": [[106, "sup3r.preprocessing.base.Container", false]], "container_weights (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.container_weights", false]], "container_weights (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.container_weights", false]], "container_weights (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.container_weights", false]], "container_weights (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.container_weights", false]], "container_weights (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.container_weights", false]], "container_weights (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.container_weights", false]], "container_weights (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.container_weights", false]], "container_weights (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.container_weights", false]], "container_weights (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.container_weights", false]], "container_weights (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.container_weights", false]], "container_weights (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.container_weights", false]], "container_weights (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.container_weights", false]], "container_weights (collection property)": [[152, "sup3r.preprocessing.collections.base.Collection.container_weights", false]], "container_weights (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.container_weights", false]], "container_weights (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.container_weights", false]], "container_weights (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.container_weights", false]], "container_weights (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.container_weights", false]], "container_weights (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.container_weights", false]], "container_weights (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.container_weights", false]], "container_weights (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.container_weights", false]], "container_weights (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.container_weights", false]], "container_weights (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.container_weights", false]], "container_weights (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.container_weights", false]], "container_weights (statscollection property)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.container_weights", false]], "container_weights (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.container_weights", false]], "contains_ellipsis() (in module sup3r.preprocessing.utilities)": [[247, "sup3r.preprocessing.utilities.contains_ellipsis", false]], "continuous_dist() (in module sup3r.qa.utilities)": [[272, "sup3r.qa.utilities.continuous_dist", false]], "convert_all_tifs() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.convert_all_tifs", false]], "convert_month_height_tif() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.convert_month_height_tif", false]], "convert_month_tif() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.convert_month_tif", false]], "convert_z() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.convert_z", false]], "coordinates (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.coordinates", false]], "coords (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.coords", false]], "coords (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.coords", false]], "coords (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.coords", false]], "coords (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.coords", false]], "coords_2d() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.coords_2d", false]], "coords_3d() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.coords_3d", false]], "coords_4d() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.coords_4d", false]], "coords_4d_pres() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.coords_4d_pres", false]], "copy() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.copy", false]], "copy() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.copy", false]], "count() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.count", false]], "count() (modulename method)": [[287, "sup3r.utilities.ModuleName.count", false]], "daily_time_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[235, "sup3r.preprocessing.samplers.utilities.daily_time_sampler", false]], "dailydatahandler (class in sup3r.preprocessing.data_handlers.base)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler", false]], "data (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.data", false]], "data (basederiver property)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.data", false]], "data (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.data", false]], "data (baseloader property)": [[203, "sup3r.preprocessing.loaders.base.BaseLoader.data", false]], "data (baserasterizer property)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.data", false]], "data (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.data", false]], "data (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.data", false]], "data (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.data", false]], "data (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.data", false]], "data (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.data", false]], "data (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.data", false]], "data (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.data", false]], "data (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.data", false]], "data (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.data", false]], "data (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.data", false]], "data (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.data", false]], "data (cacher property)": [[148, "sup3r.preprocessing.cachers.base.Cacher.data", false]], "data (collection property)": [[152, "sup3r.preprocessing.collections.base.Collection.data", false]], "data (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.data", false]], "data (container property)": [[106, "sup3r.preprocessing.base.Container.data", false]], "data (dailydatahandler property)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.data", false]], "data (datahandler property)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.data", false]], "data (datahandlerh5solarcc property)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.data", false]], "data (datahandlerh5windcc property)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.data", false]], "data (datahandlerncforcc property)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.data", false]], "data (datahandlerncforccwithpowerlaw property)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.data", false]], "data (deriver property)": [[171, "sup3r.preprocessing.derivers.base.Deriver.data", false]], "data (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.data", false]], "data (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.data", false]], "data (dualrasterizer property)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.data", false]], "data (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.data", false]], "data (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.data", false]], "data (dummydata property)": [[315, "sup3r.utilities.pytest.helpers.DummyData.data", false]], "data (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.data", false]], "data (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.data", false]], "data (loader property)": [[201, "sup3r.preprocessing.loaders.Loader.data", false]], "data (loaderh5 property)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5.data", false]], "data (loadernc property)": [[207, "sup3r.preprocessing.loaders.nc.LoaderNC.data", false]], "data (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.data", false]], "data (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.data", false]], "data (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.data", false]], "data (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.data", false]], "data (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.data", false]], "data (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.data", false]], "data (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.data", false]], "data (rasterizer property)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.data", false]], "data (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.data", false]], "data (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.data", false]], "data (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.data", false]], "data (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.data", false]], "data (statscollection property)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.data", false]], "data (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.data", false]], "data (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.data", false]], "data_version (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.data_version", false]], "datahandler (class in sup3r.preprocessing.data_handlers.base)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler", false]], "datahandlerh5solarcc (class in sup3r.preprocessing.data_handlers.base)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC", false]], "datahandlerh5windcc (class in sup3r.preprocessing.data_handlers.base)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC", false]], "datahandlerncforcc (class in sup3r.preprocessing.data_handlers.nc_cc)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC", false]], "datahandlerncforccwithpowerlaw (class in sup3r.preprocessing.data_handlers.nc_cc)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw", false]], "dataretrievalbase (class in sup3r.bias.base)": [[7, "sup3r.bias.base.DataRetrievalBase", false]], "datasets (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.datasets", false]], "daylight_hours (solarcc attribute)": [[57, "sup3r.models.solar_cc.SolarCC.DAYLIGHT_HOURS", false]], "derive() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.derive", false]], "derive() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.derive", false]], "derive() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.derive", false]], "derive() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.derive", false]], "derive() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.derive", false]], "derive() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.derive", false]], "derive() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.derive", false]], "derive() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.derive", false]], "derivedfeature (class in sup3r.preprocessing.derivers.methods)": [[176, "sup3r.preprocessing.derivers.methods.DerivedFeature", false]], "deriver (class in sup3r.preprocessing.derivers.base)": [[171, "sup3r.preprocessing.derivers.base.Deriver", false]], "df_str_decode() (rexoutputs static method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.df_str_decode", false]], "dhi (solar property)": [[282, "sup3r.solar.solar.Solar.dhi", false]], "dict_to_tensorboard() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.dict_to_tensorboard", false]], "dict_to_tensorboard() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.dict_to_tensorboard", false]], "dict_to_tensorboard() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.dict_to_tensorboard", false]], "dict_to_tensorboard() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.dict_to_tensorboard", false]], "dict_to_tensorboard() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.dict_to_tensorboard", false]], "dict_to_tensorboard() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.dict_to_tensorboard", false]], "dict_to_tensorboard() (tensorboardmixin method)": [[61, "sup3r.models.utilities.TensorboardMixIn.dict_to_tensorboard", false]], "dimension (class in sup3r.preprocessing.names)": [[212, "sup3r.preprocessing.names.Dimension", false]], "dims_2d() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.dims_2d", false]], "dims_3d() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.dims_3d", false]], "dims_3d_bc() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.dims_3d_bc", false]], "dims_4d() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.dims_4d", false]], "dims_4d_bc() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.dims_4d_bc", false]], "dims_4d_pres() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.dims_4d_pres", false]], "dims_array_tuple() (in module sup3r.preprocessing.utilities)": [[248, "sup3r.preprocessing.utilities.dims_array_tuple", false]], "direct_dist() (in module sup3r.qa.utilities)": [[273, "sup3r.qa.utilities.direct_dist", false]], "discriminate() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.discriminate", false]], "discriminate() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.discriminate", false]], "discriminate() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.discriminate", false]], "discriminate() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.discriminate", false]], "discriminator (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.discriminator", false]], "discriminator (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.discriminator", false]], "discriminator (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.discriminator", false]], "discriminator (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.discriminator", false]], "discriminator_weights (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.discriminator_weights", false]], "discriminator_weights (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.discriminator_weights", false]], "discriminator_weights (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.discriminator_weights", false]], "discriminator_weights (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.discriminator_weights", false]], "dist (solar property)": [[282, "sup3r.solar.solar.Solar.dist", false]], "distance_upper_bound (dataretrievalbase property)": [[7, "sup3r.bias.base.DataRetrievalBase.distance_upper_bound", false]], "distance_upper_bound (linearcorrection property)": [[9, "sup3r.bias.bias_calc.LinearCorrection.distance_upper_bound", false]], "distance_upper_bound (monthlylinearcorrection property)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.distance_upper_bound", false]], "distance_upper_bound (monthlyscalarcorrection property)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.distance_upper_bound", false]], "distance_upper_bound (presrat property)": [[30, "sup3r.bias.presrat.PresRat.distance_upper_bound", false]], "distance_upper_bound (quantiledeltamappingcorrection property)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.distance_upper_bound", false]], "distance_upper_bound (scalarcorrection property)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.distance_upper_bound", false]], "distance_upper_bound (skillassessment property)": [[13, "sup3r.bias.bias_calc.SkillAssessment.distance_upper_bound", false]], "dists (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.dists", false]], "dists (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.dists", false]], "dists (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.dists", false]], "dists (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.dists", false]], "dni (solar property)": [[282, "sup3r.solar.solar.Solar.dni", false]], "do_level_interpolation() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.do_level_interpolation", false]], "do_level_interpolation() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.do_level_interpolation", false]], "do_level_interpolation() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.do_level_interpolation", false]], "do_level_interpolation() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.do_level_interpolation", false]], "do_level_interpolation() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.do_level_interpolation", false]], "do_level_interpolation() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.do_level_interpolation", false]], "do_level_interpolation() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.do_level_interpolation", false]], "do_level_interpolation() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.do_level_interpolation", false]], "download_file() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.download_file", false]], "download_process_combine() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.download_process_combine", false]], "downscale_arr() (surfacespatialmetmodel class method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_arr", false]], "downscale_pres() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_pres", false]], "downscale_rh() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_rh", false]], "downscale_temp() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_temp", false]], "dsets (dsettuple property)": [[107, "sup3r.preprocessing.base.DsetTuple.dsets", false]], "dsets (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.dsets", false]], "dsettuple (class in sup3r.preprocessing.base)": [[107, "sup3r.preprocessing.base.DsetTuple", false]], "dtype (sup3rdataset property)": [[108, "sup3r.preprocessing.base.Sup3rDataset.dtype", false]], "dtype (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.dtype", false]], "dtypes (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.dtypes", false]], "dualbatchhandler (class in sup3r.preprocessing.batch_handlers.factory)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler", false]], "dualbatchqueue (class in sup3r.preprocessing.batch_queues.dual)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue", false]], "dualrasterizer (class in sup3r.preprocessing.rasterizers.dual)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer", false]], "dualsampler (class in sup3r.preprocessing.samplers.dual)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler", false]], "dualsamplercc (class in sup3r.preprocessing.samplers.cc)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC", false]], "dualsamplertestercc (in module sup3r.utilities.pytest.helpers)": [[314, "sup3r.utilities.pytest.helpers.DualSamplerTesterCC", false]], "dummydata (class in sup3r.utilities.pytest.helpers)": [[315, "sup3r.utilities.pytest.helpers.DummyData", false]], "dummysampler (class in sup3r.utilities.pytest.helpers)": [[316, "sup3r.utilities.pytest.helpers.DummySampler", false]], "early_stop() (abstractsinglemodel static method)": [[41, "sup3r.models.abstract.AbstractSingleModel.early_stop", false]], "early_stop() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.early_stop", false]], "early_stop() (sup3rcondmom static method)": [[45, "sup3r.models.conditional.Sup3rCondMom.early_stop", false]], "early_stop() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.early_stop", false]], "early_stop() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.early_stop", false]], "early_stop() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.early_stop", false]], "elapsed (timer property)": [[327, "sup3r.utilities.utilities.Timer.elapsed", false]], "elapsed_str (timer property)": [[327, "sup3r.utilities.utilities.Timer.elapsed_str", false]], "encode() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.encode", false]], "encode() (modulename method)": [[287, "sup3r.utilities.ModuleName.encode", false]], "endswith() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.endswith", false]], "endswith() (modulename method)": [[287, "sup3r.utilities.ModuleName.endswith", false]], "enforce_limits() (in module sup3r.utilities.utilities)": [[329, "sup3r.utilities.utilities.enforce_limits", false]], "enqueue_batches() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.enqueue_batches", false]], "enqueue_batches() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.enqueue_batches", false]], "enqueue_batches() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.enqueue_batches", false]], "enqueue_batches() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.enqueue_batches", false]], "enqueue_batches() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.enqueue_batches", false]], "enqueue_batches() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.enqueue_batches", false]], "enqueue_batches() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.enqueue_batches", false]], "enqueue_batches() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.enqueue_batches", false]], "enqueue_batches() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.enqueue_batches", false]], "enqueue_batches() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.enqueue_batches", false]], "enqueue_batches() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.enqueue_batches", false]], "enqueue_batches() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.enqueue_batches", false]], "enqueue_batches() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.enqueue_batches", false]], "enqueue_batches() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.enqueue_batches", false]], "enqueue_batches() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.enqueue_batches", false]], "enqueue_batches() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.enqueue_batches", false]], "enqueue_batches() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.enqueue_batches", false]], "enqueue_batches() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.enqueue_batches", false]], "enqueue_batches() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.enqueue_batches", false]], "enqueue_batches() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.enqueue_batches", false]], "enqueue_batches() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.enqueue_batches", false]], "enqueue_batches() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.enqueue_batches", false]], "enqueue_batches() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.enqueue_batches", false]], "eradownloader (class in sup3r.utilities.era_downloader)": [[292, "sup3r.utilities.era_downloader.EraDownloader", false]], "exodata (class in sup3r.preprocessing.data_handlers.exo)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData", false]], "exodatahandler (class in sup3r.preprocessing.data_handlers.exo)": [[163, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler", false]], "exorasterizer (class in sup3r.preprocessing.rasterizers.exo)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer", false]], "expand_paths() (in module sup3r.preprocessing.utilities)": [[249, "sup3r.preprocessing.utilities.expand_paths", false]], "expandtabs() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.expandtabs", false]], "expandtabs() (modulename method)": [[287, "sup3r.utilities.ModuleName.expandtabs", false]], "exploss (class in sup3r.utilities.loss_metrics)": [[297, "sup3r.utilities.loss_metrics.ExpLoss", false]], "export() (sup3rqa method)": [[269, "sup3r.qa.qa.Sup3rQa.export", false]], "extra_padding (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.extra_padding", false]], "feature_inds_other (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_other", false]], "feature_inds_pres (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_pres", false]], "feature_inds_rh (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_rh", false]], "feature_inds_temp (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_temp", false]], "features (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.features", false]], "features (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.features", false]], "features (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.features", false]], "features (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.features", false]], "features (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.features", false]], "features (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.features", false]], "features (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.features", false]], "features (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.features", false]], "features (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.features", false]], "features (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.features", false]], "features (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.features", false]], "features (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.features", false]], "features (collection property)": [[152, "sup3r.preprocessing.collections.base.Collection.features", false]], "features (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.features", false]], "features (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.features", false]], "features (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.features", false]], "features (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.features", false]], "features (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.features", false]], "features (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.features", false]], "features (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.features", false]], "features (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.features", false]], "features (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.features", false]], "features (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.features", false]], "features (statscollection property)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.features", false]], "features (sup3rdataset property)": [[108, "sup3r.preprocessing.base.Sup3rDataset.features", false]], "features (sup3rqa property)": [[269, "sup3r.qa.qa.Sup3rQa.features", false]], "features (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.features", false]], "features (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.features", false]], "file_paths (baseloader property)": [[203, "sup3r.preprocessing.loaders.base.BaseLoader.file_paths", false]], "file_paths (loader property)": [[201, "sup3r.preprocessing.loaders.Loader.file_paths", false]], "file_paths (loaderh5 property)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5.file_paths", false]], "file_paths (loadernc property)": [[207, "sup3r.preprocessing.loaders.nc.LoaderNC.file_paths", false]], "fill_and_smooth() (fillandsmoothmixin method)": [[27, "sup3r.bias.mixins.FillAndSmoothMixin.fill_and_smooth", false]], "fill_and_smooth() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.fill_and_smooth", false]], "fill_and_smooth() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.fill_and_smooth", false]], "fill_and_smooth() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.fill_and_smooth", false]], "fill_and_smooth() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.fill_and_smooth", false]], "fill_and_smooth() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.fill_and_smooth", false]], "fill_and_smooth() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.fill_and_smooth", false]], "fill_and_smooth() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.fill_and_smooth", false]], "fillandsmoothmixin (class in sup3r.bias.mixins)": [[27, "sup3r.bias.mixins.FillAndSmoothMixin", false]], "find() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.find", false]], "find() (modulename method)": [[287, "sup3r.utilities.ModuleName.find", false]], "finish_epoch() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.finish_epoch", false]], "finish_epoch() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.finish_epoch", false]], "finish_epoch() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.finish_epoch", false]], "finish_epoch() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.finish_epoch", false]], "finish_epoch() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.finish_epoch", false]], "finish_epoch() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.finish_epoch", false]], "fix_downscaled_bias() (surfacespatialmetmodel class method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.fix_downscaled_bias", false]], "flat_2d() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.flat_2d", false]], "flatten() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.flatten", false]], "flattened (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.flattened", false]], "format() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.format", false]], "format() (modulename method)": [[287, "sup3r.utilities.ModuleName.format", false]], "format_map() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.format_map", false]], "format_map() (modulename method)": [[287, "sup3r.utilities.ModuleName.format_map", false]], "format_walltime() (slurmmanager static method)": [[290, "sup3r.utilities.cli.SlurmManager.format_walltime", false]], "forwardpass (class in sup3r.pipeline.forward_pass)": [[69, "sup3r.pipeline.forward_pass.ForwardPass", false]], "forwardpasschunk (class in sup3r.pipeline.strategy)": [[77, "sup3r.pipeline.strategy.ForwardPassChunk", false]], "forwardpassslicer (class in sup3r.pipeline.slicer)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer", false]], "forwardpassstrategy (class in sup3r.pipeline.strategy)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy", false]], "frequency_spectrum() (in module sup3r.qa.utilities)": [[274, "sup3r.qa.utilities.frequency_spectrum", false]], "from_config() (basecli class method)": [[289, "sup3r.utilities.cli.BaseCLI.from_config", false]], "from_config() (coarsemseloss class method)": [[296, "sup3r.utilities.loss_metrics.CoarseMseLoss.from_config", false]], "from_config() (exploss class method)": [[297, "sup3r.utilities.loss_metrics.ExpLoss.from_config", false]], "from_config() (lowresloss class method)": [[298, "sup3r.utilities.loss_metrics.LowResLoss.from_config", false]], "from_config() (materialderivativeloss class method)": [[299, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.from_config", false]], "from_config() (mmdloss class method)": [[300, "sup3r.utilities.loss_metrics.MmdLoss.from_config", false]], "from_config() (perceptualloss class method)": [[301, "sup3r.utilities.loss_metrics.PerceptualLoss.from_config", false]], "from_config() (spatialderivativeloss class method)": [[302, "sup3r.utilities.loss_metrics.SpatialDerivativeLoss.from_config", false]], "from_config() (spatialextremesloss class method)": [[303, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.from_config", false]], "from_config() (spatialfftloss class method)": [[304, "sup3r.utilities.loss_metrics.SpatialFftLoss.from_config", false]], "from_config() (spatiotemporalfftloss class method)": [[305, "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss.from_config", false]], "from_config() (temporalderivativeloss class method)": [[306, "sup3r.utilities.loss_metrics.TemporalDerivativeLoss.from_config", false]], "from_config() (temporalextremesloss class method)": [[307, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.from_config", false]], "from_config_preflight() (basecli class method)": [[289, "sup3r.utilities.cli.BaseCLI.from_config_preflight", false]], "fromkeys() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.fromkeys", false]], "fromkeys() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.fromkeys", false]], "full_version_record (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.full_version_record", false]], "fwp_mask (forwardpassstrategy property)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.fwp_mask", false]], "gaussian_kernel() (in module sup3r.utilities.loss_metrics)": [[308, "sup3r.utilities.loss_metrics.gaussian_kernel", false]], "generate() (abstractinterface method)": [[49, "sup3r.models.interface.AbstractInterface.generate", false]], "generate() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.generate", false]], "generate() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.generate", false]], "generate() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.generate", false]], "generate() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.generate", false]], "generate() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.generate", false]], "generate() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.generate", false]], "generate() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.generate", false]], "generate() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.generate", false]], "generate() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.generate", false]], "generate() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.generate", false]], "generate() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.generate", false]], "generate_random_string() (in module sup3r.utilities.utilities)": [[330, "sup3r.utilities.utilities.generate_random_string", false]], "generator (abstractsinglemodel property)": [[41, "sup3r.models.abstract.AbstractSingleModel.generator", false]], "generator (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.generator", false]], "generator (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.generator", false]], "generator (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.generator", false]], "generator (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.generator", false]], "generator (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.generator", false]], "generator_weights (abstractsinglemodel property)": [[41, "sup3r.models.abstract.AbstractSingleModel.generator_weights", false]], "generator_weights (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.generator_weights", false]], "generator_weights (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.generator_weights", false]], "generator_weights (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.generator_weights", false]], "generator_weights (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.generator_weights", false]], "generator_weights (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.generator_weights", false]], "get() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.get", false]], "get() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.get", false]], "get_all_data() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_all_data", false]], "get_all_step_data() (exodatahandler method)": [[163, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_all_step_data", false]], "get_attrs() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.get_attrs", false]], "get_base_data() (dataretrievalbase class method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_base_data", false]], "get_base_data() (linearcorrection class method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_base_data", false]], "get_base_data() (monthlylinearcorrection class method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_base_data", false]], "get_base_data() (monthlyscalarcorrection class method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_base_data", false]], "get_base_data() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.get_base_data", false]], "get_base_data() (quantiledeltamappingcorrection class method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_base_data", false]], "get_base_data() (scalarcorrection class method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_base_data", false]], "get_base_data() (skillassessment class method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_base_data", false]], "get_base_gid() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_base_gid", false]], "get_base_gid() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_base_gid", false]], "get_base_gid() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_base_gid", false]], "get_base_gid() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_base_gid", false]], "get_base_gid() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_base_gid", false]], "get_base_gid() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_base_gid", false]], "get_base_gid() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_base_gid", false]], "get_base_gid() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_base_gid", false]], "get_batch() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_batch", false]], "get_batch() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_batch", false]], "get_batch() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_batch", false]], "get_batch() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_batch", false]], "get_batch() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_batch", false]], "get_batch() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_batch", false]], "get_batch() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_batch", false]], "get_batch() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_batch", false]], "get_batch() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_batch", false]], "get_batch() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_batch", false]], "get_batch() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_batch", false]], "get_batch() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_batch", false]], "get_batch() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_batch", false]], "get_batch() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_batch", false]], "get_batch() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_batch", false]], "get_batch() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_batch", false]], "get_batch() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_batch", false]], "get_batch() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_batch", false]], "get_batch() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_batch", false]], "get_batch() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_batch", false]], "get_batch() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_batch", false]], "get_batch() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_batch", false]], "get_batch() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_batch", false]], "get_bc_factors() (biascorrectupdate class method)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.get_bc_factors", false]], "get_bias_data() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_bias_data", false]], "get_bias_data() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_bias_data", false]], "get_bias_data() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_bias_data", false]], "get_bias_data() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_bias_data", false]], "get_bias_data() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_bias_data", false]], "get_bias_data() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_bias_data", false]], "get_bias_data() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_bias_data", false]], "get_bias_data() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_bias_data", false]], "get_bias_gid() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_bias_gid", false]], "get_bias_gid() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_bias_gid", false]], "get_bias_gid() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_bias_gid", false]], "get_bias_gid() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_bias_gid", false]], "get_bias_gid() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_bias_gid", false]], "get_bias_gid() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_bias_gid", false]], "get_bias_gid() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_bias_gid", false]], "get_bias_gid() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_bias_gid", false]], "get_cds_client() (eradownloader static method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.get_cds_client", false]], "get_chunk() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.get_chunk", false]], "get_chunk_indices() (basecollector static method)": [[85, "sup3r.postprocessing.collectors.base.BaseCollector.get_chunk_indices", false]], "get_chunk_indices() (collectorh5 static method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_chunk_indices", false]], "get_chunk_indices() (collectornc static method)": [[89, "sup3r.postprocessing.collectors.nc.CollectorNC.get_chunk_indices", false]], "get_chunk_indices() (forwardpassslicer method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.get_chunk_indices", false]], "get_chunk_indices() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.get_chunk_indices", false]], "get_chunk_slices() (in module sup3r.pipeline.utilities)": [[80, "sup3r.pipeline.utilities.get_chunk_slices", false]], "get_chunksizes() (cacher class method)": [[148, "sup3r.preprocessing.cachers.base.Cacher.get_chunksizes", false]], "get_class_kwargs() (in module sup3r.preprocessing.utilities)": [[250, "sup3r.preprocessing.utilities.get_class_kwargs", false]], "get_clearsky_ghi() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_clearsky_ghi", false]], "get_clearsky_ghi() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_clearsky_ghi", false]], "get_closest_row_col() (baserasterizer method)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.get_closest_row_col", false]], "get_closest_row_col() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.get_closest_row_col", false]], "get_collection_attrs() (collectorh5 method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_collection_attrs", false]], "get_combine_type_data() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.get_combine_type_data", false]], "get_config() (coarsemseloss method)": [[296, "sup3r.utilities.loss_metrics.CoarseMseLoss.get_config", false]], "get_config() (exploss method)": [[297, "sup3r.utilities.loss_metrics.ExpLoss.get_config", false]], "get_config() (lowresloss method)": [[298, "sup3r.utilities.loss_metrics.LowResLoss.get_config", false]], "get_config() (materialderivativeloss method)": [[299, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.get_config", false]], "get_config() (mmdloss method)": [[300, "sup3r.utilities.loss_metrics.MmdLoss.get_config", false]], "get_config() (perceptualloss method)": [[301, "sup3r.utilities.loss_metrics.PerceptualLoss.get_config", false]], "get_config() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.get_config", false]], "get_config() (spatialderivativeloss method)": [[302, "sup3r.utilities.loss_metrics.SpatialDerivativeLoss.get_config", false]], "get_config() (spatialextremesloss method)": [[303, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.get_config", false]], "get_config() (spatialfftloss method)": [[304, "sup3r.utilities.loss_metrics.SpatialFftLoss.get_config", false]], "get_config() (spatiotemporalfftloss method)": [[305, "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss.get_config", false]], "get_config() (temporalderivativeloss method)": [[306, "sup3r.utilities.loss_metrics.TemporalDerivativeLoss.get_config", false]], "get_config() (temporalextremesloss method)": [[307, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.get_config", false]], "get_container_index() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_container_index", false]], "get_container_index() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_container_index", false]], "get_container_index() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_container_index", false]], "get_container_index() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_container_index", false]], "get_container_index() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_container_index", false]], "get_container_index() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_container_index", false]], "get_container_index() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_container_index", false]], "get_container_index() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_container_index", false]], "get_container_index() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_container_index", false]], "get_container_index() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_container_index", false]], "get_container_index() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_container_index", false]], "get_container_index() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_container_index", false]], "get_container_index() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_container_index", false]], "get_container_index() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_container_index", false]], "get_container_index() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_container_index", false]], "get_container_index() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_container_index", false]], "get_container_index() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_container_index", false]], "get_container_index() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_container_index", false]], "get_container_index() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_container_index", false]], "get_container_index() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_container_index", false]], "get_container_index() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_container_index", false]], "get_container_index() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_container_index", false]], "get_container_index() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_container_index", false]], "get_coordinate_indices() (collectorh5 method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_coordinate_indices", false]], "get_cropped_slices() (forwardpassslicer static method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.get_cropped_slices", false]], "get_data() (baseexorasterizer method)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.get_data", false]], "get_data() (collectorh5 method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_data", false]], "get_data() (exorasterizer method)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.get_data", false]], "get_data() (obsrasterizer method)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.get_data", false]], "get_data() (szarasterizer method)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.get_data", false]], "get_data_pair() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_data_pair", false]], "get_data_pair() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_data_pair", false]], "get_data_pair() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_data_pair", false]], "get_data_pair() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_data_pair", false]], "get_data_pair() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_data_pair", false]], "get_data_pair() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_data_pair", false]], "get_data_pair() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_data_pair", false]], "get_data_pair() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_data_pair", false]], "get_date_range_kwargs() (in module sup3r.preprocessing.utilities)": [[251, "sup3r.preprocessing.utilities.get_date_range_kwargs", false]], "get_distance_upper_bound() (baseexorasterizer method)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.get_distance_upper_bound", false]], "get_distance_upper_bound() (exorasterizer method)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.get_distance_upper_bound", false]], "get_distance_upper_bound() (obsrasterizer method)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.get_distance_upper_bound", false]], "get_distance_upper_bound() (szarasterizer method)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.get_distance_upper_bound", false]], "get_dset_attrs() (in module sup3r.utilities.utilities)": [[331, "sup3r.utilities.utilities.get_dset_attrs", false]], "get_dset_out() (sup3rqa method)": [[269, "sup3r.qa.qa.Sup3rQa.get_dset_out", false]], "get_dset_properties() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.get_dset_properties", false]], "get_exo_cache_files() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.get_exo_cache_files", false]], "get_exo_kwargs() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.get_exo_kwargs", false]], "get_exo_rasterizer() (exodatahandler method)": [[163, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_exo_rasterizer", false]], "get_exo_steps() (exodatahandler class method)": [[163, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_exo_steps", false]], "get_feature_basename() (in module sup3r.utilities.utilities)": [[332, "sup3r.utilities.utilities.get_feature_basename", false]], "get_features() (dualsampler method)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.get_features", false]], "get_features() (dualsamplercc method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.get_features", false]], "get_flist_chunks() (collectorh5 method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_flist_chunks", false]], "get_height_files() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_height_files", false]], "get_hours() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.get_hours", false]], "get_hr_exo_input() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.get_hr_exo_input", false]], "get_hr_exo_input() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_hr_exo_input", false]], "get_hr_exo_input() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.get_hr_exo_input", false]], "get_hr_exo_input() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.get_hr_exo_input", false]], "get_hr_exo_input() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_hr_exo_input", false]], "get_hr_exo_input() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_hr_exo_input", false]], "get_hr_slices() (forwardpassslicer static method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.get_hr_slices", false]], "get_input_chunk() (forwardpass method)": [[69, "sup3r.pipeline.forward_pass.ForwardPass.get_input_chunk", false]], "get_input_file() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_input_file", false]], "get_input_handler_class() (in module sup3r.preprocessing.utilities)": [[252, "sup3r.preprocessing.utilities.get_input_handler_class", false]], "get_inputs() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.get_inputs", false]], "get_inputs() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.get_inputs", false]], "get_inputs() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.get_inputs", false]], "get_inputs() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.get_inputs", false]], "get_inputs() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.get_inputs", false]], "get_inputs() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_inputs", false]], "get_inputs() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_inputs", false]], "get_inputs() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.get_inputs", false]], "get_lat_lon() (baserasterizer method)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.get_lat_lon", false]], "get_lat_lon() (outputhandler class method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.get_lat_lon", false]], "get_lat_lon() (outputhandlerh5 class method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_lat_lon", false]], "get_lat_lon() (outputhandlernc class method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_lat_lon", false]], "get_lat_lon() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.get_lat_lon", false]], "get_lat_lon() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_lat_lon", false]], "get_level_masks() (interpolator class method)": [[294, "sup3r.utilities.interpolation.Interpolator.get_level_masks", false]], "get_linear_correction() (linearcorrection static method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_linear_correction", false]], "get_linear_correction() (monthlylinearcorrection static method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_linear_correction", false]], "get_linear_correction() (monthlyscalarcorrection static method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_linear_correction", false]], "get_linear_correction() (scalarcorrection static method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_linear_correction", false]], "get_linear_correction() (skillassessment static method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_linear_correction", false]], "get_loss_fun() (abstractsinglemodel class method)": [[41, "sup3r.models.abstract.AbstractSingleModel.get_loss_fun", false]], "get_loss_fun() (solarcc class method)": [[57, "sup3r.models.solar_cc.SolarCC.get_loss_fun", false]], "get_loss_fun() (sup3rcondmom class method)": [[45, "sup3r.models.conditional.Sup3rCondMom.get_loss_fun", false]], "get_loss_fun() (sup3rgan class method)": [[43, "sup3r.models.base.Sup3rGan.get_loss_fun", false]], "get_loss_fun() (sup3rgandc class method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_loss_fun", false]], "get_loss_fun() (sup3rganwithobs class method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_loss_fun", false]], "get_means() (statscollection method)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.get_means", false]], "get_meta_arr() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.get_meta_arr", false]], "get_middle_days() (dualsamplercc static method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.get_middle_days", false]], "get_model() (in module sup3r.pipeline.utilities)": [[81, "sup3r.pipeline.utilities.get_model", false]], "get_model_step_exo() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.get_model_step_exo", false]], "get_month() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_month", false]], "get_monthly_file() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.get_monthly_file", false]], "get_multi_level_data() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.get_multi_level_data", false]], "get_multi_level_data() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.get_multi_level_data", false]], "get_multi_level_data() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.get_multi_level_data", false]], "get_multi_level_data() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.get_multi_level_data", false]], "get_multi_level_data() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.get_multi_level_data", false]], "get_multi_level_data() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_multi_level_data", false]], "get_multi_level_data() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_multi_level_data", false]], "get_multi_level_data() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.get_multi_level_data", false]], "get_node_cmd() (basecollector class method)": [[85, "sup3r.postprocessing.collectors.base.BaseCollector.get_node_cmd", false]], "get_node_cmd() (collectorh5 class method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_node_cmd", false]], "get_node_cmd() (collectornc class method)": [[89, "sup3r.postprocessing.collectors.nc.CollectorNC.get_node_cmd", false]], "get_node_cmd() (dataretrievalbase class method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_node_cmd", false]], "get_node_cmd() (forwardpass class method)": [[69, "sup3r.pipeline.forward_pass.ForwardPass.get_node_cmd", false]], "get_node_cmd() (linearcorrection class method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_node_cmd", false]], "get_node_cmd() (monthlylinearcorrection class method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_node_cmd", false]], "get_node_cmd() (monthlyscalarcorrection class method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_node_cmd", false]], "get_node_cmd() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.get_node_cmd", false]], "get_node_cmd() (quantiledeltamappingcorrection class method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_node_cmd", false]], "get_node_cmd() (scalarcorrection class method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_node_cmd", false]], "get_node_cmd() (skillassessment class method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_node_cmd", false]], "get_node_cmd() (solar class method)": [[282, "sup3r.solar.solar.Solar.get_node_cmd", false]], "get_node_cmd() (sup3rqa class method)": [[269, "sup3r.qa.qa.Sup3rQa.get_node_cmd", false]], "get_nsrdb_data() (solar method)": [[282, "sup3r.solar.solar.Solar.get_nsrdb_data", false]], "get_obj_params() (in module sup3r.preprocessing.utilities)": [[253, "sup3r.preprocessing.utilities.get_obj_params", false]], "get_optimizer_class() (in module sup3r.models.utilities)": [[63, "sup3r.models.utilities.get_optimizer_class", false]], "get_optimizer_config() (abstractsinglemodel static method)": [[41, "sup3r.models.abstract.AbstractSingleModel.get_optimizer_config", false]], "get_optimizer_config() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.get_optimizer_config", false]], "get_optimizer_config() (sup3rcondmom static method)": [[45, "sup3r.models.conditional.Sup3rCondMom.get_optimizer_config", false]], "get_optimizer_config() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.get_optimizer_config", false]], "get_optimizer_config() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_optimizer_config", false]], "get_optimizer_config() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_optimizer_config", false]], "get_optimizer_state() (abstractsinglemodel class method)": [[41, "sup3r.models.abstract.AbstractSingleModel.get_optimizer_state", false]], "get_optimizer_state() (solarcc class method)": [[57, "sup3r.models.solar_cc.SolarCC.get_optimizer_state", false]], "get_optimizer_state() (sup3rcondmom class method)": [[45, "sup3r.models.conditional.Sup3rCondMom.get_optimizer_state", false]], "get_optimizer_state() (sup3rgan class method)": [[43, "sup3r.models.base.Sup3rGan.get_optimizer_state", false]], "get_optimizer_state() (sup3rgandc class method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_optimizer_state", false]], "get_optimizer_state() (sup3rganwithobs class method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_optimizer_state", false]], "get_output_file() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_output_file", false]], "get_pad_width() (forwardpassslicer method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.get_pad_width", false]], "get_padded_slices() (forwardpassslicer static method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.get_padded_slices", false]], "get_qdm_params() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.get_qdm_params", false]], "get_qdm_params() (quantiledeltamappingcorrection static method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_qdm_params", false]], "get_queue() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_queue", false]], "get_queue() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_queue", false]], "get_queue() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_queue", false]], "get_queue() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_queue", false]], "get_queue() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_queue", false]], "get_queue() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_queue", false]], "get_queue() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_queue", false]], "get_queue() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_queue", false]], "get_queue() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_queue", false]], "get_queue() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_queue", false]], "get_queue() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_queue", false]], "get_queue() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_queue", false]], "get_queue() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_queue", false]], "get_queue() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_queue", false]], "get_queue() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_queue", false]], "get_queue() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_queue", false]], "get_queue() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_queue", false]], "get_queue() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_queue", false]], "get_queue() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_queue", false]], "get_queue() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_queue", false]], "get_queue() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_queue", false]], "get_queue() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_queue", false]], "get_queue() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_queue", false]], "get_random_container() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_random_container", false]], "get_random_container() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_random_container", false]], "get_random_container() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_random_container", false]], "get_random_container() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_random_container", false]], "get_random_container() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_random_container", false]], "get_random_container() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_random_container", false]], "get_random_container() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_random_container", false]], "get_random_container() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_random_container", false]], "get_random_container() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_random_container", false]], "get_random_container() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_random_container", false]], "get_random_container() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_random_container", false]], "get_random_container() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_random_container", false]], "get_random_container() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_random_container", false]], "get_random_container() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_random_container", false]], "get_random_container() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_random_container", false]], "get_random_container() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_random_container", false]], "get_random_container() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_random_container", false]], "get_random_container() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_random_container", false]], "get_random_container() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_random_container", false]], "get_random_container() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_random_container", false]], "get_random_container() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_random_container", false]], "get_random_container() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_random_container", false]], "get_random_container() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_random_container", false]], "get_raster_index() (baserasterizer method)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.get_raster_index", false]], "get_raster_index() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.get_raster_index", false]], "get_regridder() (dualrasterizer method)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.get_regridder", false]], "get_renamed_features() (outputhandler class method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.get_renamed_features", false]], "get_renamed_features() (outputhandlerh5 class method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_renamed_features", false]], "get_renamed_features() (outputhandlernc class method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_renamed_features", false]], "get_s_enhance_from_layers() (abstractinterface method)": [[49, "sup3r.models.interface.AbstractInterface.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.get_s_enhance_from_layers", false]], "get_sam_df() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.get_SAM_df", false]], "get_sample_index() (dualsampler method)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.get_sample_index", false]], "get_sample_index() (dualsamplercc method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.get_sample_index", false]], "get_sample_index() (dummysampler method)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.get_sample_index", false]], "get_sample_index() (sampler method)": [[227, "sup3r.preprocessing.samplers.base.Sampler.get_sample_index", false]], "get_sample_index() (samplerdc method)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.get_sample_index", false]], "get_sample_index() (samplertester method)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.get_sample_index", false]], "get_scale_factor() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.get_scale_factor", false]], "get_single_grad() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.get_single_grad", false]], "get_single_grad() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_single_grad", false]], "get_single_grad() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.get_single_grad", false]], "get_single_grad() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.get_single_grad", false]], "get_single_grad() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_single_grad", false]], "get_single_grad() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_single_grad", false]], "get_single_level_data() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.get_single_level_data", false]], "get_single_level_data() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.get_single_level_data", false]], "get_single_level_data() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.get_single_level_data", false]], "get_single_level_data() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.get_single_level_data", false]], "get_single_level_data() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.get_single_level_data", false]], "get_single_level_data() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_single_level_data", false]], "get_single_level_data() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_single_level_data", false]], "get_single_level_data() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.get_single_level_data", false]], "get_single_step_data() (exodatahandler method)": [[163, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_single_step_data", false]], "get_slices() (collectorh5 class method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_slices", false]], "get_source_type() (in module sup3r.preprocessing.utilities)": [[254, "sup3r.preprocessing.utilities.get_source_type", false]], "get_spatial_slices() (forwardpassslicer method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.get_spatial_slices", false]], "get_stds() (statscollection method)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.get_stds", false]], "get_sup3r_fps() (solar static method)": [[282, "sup3r.solar.solar.Solar.get_sup3r_fps", false]], "get_t_enhance_from_layers() (abstractinterface method)": [[49, "sup3r.models.interface.AbstractInterface.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.get_t_enhance_from_layers", false]], "get_target_and_masked_meta() (collectorh5 method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_target_and_masked_meta", false]], "get_time_dim_name() (basecollector static method)": [[85, "sup3r.postprocessing.collectors.base.BaseCollector.get_time_dim_name", false]], "get_time_dim_name() (collectorh5 static method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_time_dim_name", false]], "get_time_dim_name() (collectornc static method)": [[89, "sup3r.postprocessing.collectors.nc.CollectorNC.get_time_dim_name", false]], "get_time_dim_name() (outputhandler static method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.get_time_dim_name", false]], "get_time_dim_name() (outputhandlerh5 static method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_time_dim_name", false]], "get_time_dim_name() (outputhandlernc static method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_time_dim_name", false]], "get_time_dim_name() (outputmixin static method)": [[96, "sup3r.postprocessing.writers.base.OutputMixin.get_time_dim_name", false]], "get_time_slice() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_time_slice", false]], "get_time_slice() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_time_slice", false]], "get_time_slices() (forwardpassslicer method)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.get_time_slices", false]], "get_time_slices() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.get_time_slices", false]], "get_times() (outputhandler static method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.get_times", false]], "get_times() (outputhandlerh5 static method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_times", false]], "get_times() (outputhandlernc static method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_times", false]], "get_tmp_file() (in module sup3r.utilities.utilities)": [[333, "sup3r.utilities.utilities.get_tmp_file", false]], "get_unique_chunk_files() (collectorh5 method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.get_unique_chunk_files", false]], "get_units() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.get_units", false]], "get_weight_update_fraction() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.get_weight_update_fraction", false]], "get_weight_update_fraction() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.get_weight_update_fraction", false]], "get_weight_update_fraction() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.get_weight_update_fraction", false]], "get_weight_update_fraction() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.get_weight_update_fraction", false]], "get_zenith() (solarzenith static method)": [[195, "sup3r.preprocessing.derivers.utilities.SolarZenith.get_zenith", false]], "ghi (solar property)": [[282, "sup3r.solar.solar.Solar.ghi", false]], "global_attrs (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.global_attrs", false]], "global_attrs (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.global_attrs", false]], "global_linear_bc() (in module sup3r.bias.bias_transforms)": [[21, "sup3r.bias.bias_transforms.global_linear_bc", false]], "gradient_dist() (in module sup3r.qa.utilities)": [[275, "sup3r.qa.utilities.gradient_dist", false]], "grid_shape (baserasterizer property)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.grid_shape", false]], "grid_shape (rasterizer property)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.grid_shape", false]], "grid_shape (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.grid_shape", false]], "group_spatial_chunks() (collectornc method)": [[89, "sup3r.postprocessing.collectors.nc.CollectorNC.group_spatial_chunks", false]], "groups (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.groups", false]], "h5 (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.h5", false]], "has_interp_variables() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.has_interp_variables", false]], "has_interp_variables() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.has_interp_variables", false]], "has_interp_variables() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.has_interp_variables", false]], "has_interp_variables() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.has_interp_variables", false]], "has_interp_variables() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.has_interp_variables", false]], "has_interp_variables() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.has_interp_variables", false]], "has_interp_variables() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.has_interp_variables", false]], "has_interp_variables() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.has_interp_variables", false]], "history (abstractsinglemodel property)": [[41, "sup3r.models.abstract.AbstractSingleModel.history", false]], "history (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.history", false]], "history (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.history", false]], "history (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.history", false]], "history (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.history", false]], "history (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.history", false]], "hold() (slurmmanager method)": [[290, "sup3r.utilities.cli.SlurmManager.hold", false]], "hr_crop_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.hr_crop_slices", false]], "hr_exo_features (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.hr_exo_features", false]], "hr_exo_features (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.hr_exo_features", false]], "hr_exo_features (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_exo_features", false]], "hr_exo_features (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.hr_exo_features", false]], "hr_exo_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.hr_exo_features", false]], "hr_exo_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.hr_exo_features", false]], "hr_exo_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.hr_exo_features", false]], "hr_exo_features (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.hr_exo_features", false]], "hr_exo_features (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_exo_features", false]], "hr_exo_features (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.hr_exo_features", false]], "hr_exo_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.hr_exo_features", false]], "hr_exo_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.hr_exo_features", false]], "hr_exo_features (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.hr_exo_features", false]], "hr_exo_features (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.hr_exo_features", false]], "hr_exo_features (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.hr_exo_features", false]], "hr_exo_features (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.hr_exo_features", false]], "hr_exo_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.hr_exo_features", false]], "hr_features (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.hr_features", false]], "hr_features (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.hr_features", false]], "hr_features (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_features", false]], "hr_features (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.hr_features", false]], "hr_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.hr_features", false]], "hr_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.hr_features", false]], "hr_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.hr_features", false]], "hr_features (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.hr_features", false]], "hr_features (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_features", false]], "hr_features (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.hr_features", false]], "hr_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.hr_features", false]], "hr_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.hr_features", false]], "hr_features (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.hr_features", false]], "hr_features (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.hr_features", false]], "hr_features (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.hr_features", false]], "hr_features (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.hr_features", false]], "hr_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.hr_features", false]], "hr_features_ind (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.hr_features_ind", false]], "hr_features_ind (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_features_ind", false]], "hr_features_ind (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.hr_features_ind", false]], "hr_features_ind (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.hr_features_ind", false]], "hr_features_ind (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_features_ind", false]], "hr_features_ind (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.hr_features_ind", false]], "hr_lat_lon (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.hr_lat_lon", false]], "hr_lat_lon (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.hr_lat_lon", false]], "hr_lat_lon (forwardpassstrategy property)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.hr_lat_lon", false]], "hr_lat_lon (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.hr_lat_lon", false]], "hr_lat_lon (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.hr_lat_lon", false]], "hr_out_features (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.hr_out_features", false]], "hr_out_features (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.hr_out_features", false]], "hr_out_features (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_out_features", false]], "hr_out_features (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.hr_out_features", false]], "hr_out_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.hr_out_features", false]], "hr_out_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.hr_out_features", false]], "hr_out_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.hr_out_features", false]], "hr_out_features (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.hr_out_features", false]], "hr_out_features (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_out_features", false]], "hr_out_features (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.hr_out_features", false]], "hr_out_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.hr_out_features", false]], "hr_out_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.hr_out_features", false]], "hr_out_features (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.hr_out_features", false]], "hr_out_features (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.hr_out_features", false]], "hr_out_features (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.hr_out_features", false]], "hr_out_features (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.hr_out_features", false]], "hr_out_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.hr_out_features", false]], "hr_sample_shape (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.hr_sample_shape", false]], "hr_sample_shape (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_sample_shape", false]], "hr_sample_shape (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.hr_sample_shape", false]], "hr_sample_shape (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.hr_sample_shape", false]], "hr_sample_shape (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_sample_shape", false]], "hr_sample_shape (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.hr_sample_shape", false]], "hr_shape (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.hr_shape", false]], "hr_shape (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.hr_shape", false]], "hr_shape (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.hr_shape", false]], "hr_shape (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.hr_shape", false]], "hr_shape (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.hr_shape", false]], "hr_shape (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.hr_shape", false]], "hr_shape (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.hr_shape", false]], "hr_shape (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.hr_shape", false]], "hr_shape (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.hr_shape", false]], "hr_shape (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.hr_shape", false]], "hr_shape (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.hr_shape", false]], "hr_shape (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.hr_shape", false]], "hr_shape (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.hr_shape", false]], "hr_shape (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.hr_shape", false]], "hr_shape (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.hr_shape", false]], "hr_shape (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.hr_shape", false]], "hr_shape (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.hr_shape", false]], "hr_shape (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.hr_shape", false]], "hr_shape (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.hr_shape", false]], "hr_shape (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.hr_shape", false]], "hr_shape (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.hr_shape", false]], "hr_shape (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.hr_shape", false]], "hr_shape (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.hr_shape", false]], "hr_shape (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.hr_shape", false]], "hr_shape (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.hr_shape", false]], "hr_shape (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.hr_shape", false]], "hr_shape (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.hr_shape", false]], "hr_time_index (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.hr_time_index", false]], "hr_time_index (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.hr_time_index", false]], "hr_time_index (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.hr_time_index", false]], "hr_time_index (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.hr_time_index", false]], "idf_solar (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.idf_solar", false]], "idf_wind (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.idf_wind", false]], "idf_wind_out (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.idf_wind_out", false]], "idnn (solar property)": [[282, "sup3r.solar.solar.Solar.idnn", false]], "in_features (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.in_features", false]], "index() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.index", false]], "index() (modulename method)": [[287, "sup3r.utilities.ModuleName.index", false]], "init_chunk() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.init_chunk", false]], "init_h5() (rexoutputs class method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.init_h5", false]], "init_input_handler() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.init_input_handler", false]], "init_optimizer() (abstractsinglemodel static method)": [[41, "sup3r.models.abstract.AbstractSingleModel.init_optimizer", false]], "init_optimizer() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.init_optimizer", false]], "init_optimizer() (sup3rcondmom static method)": [[45, "sup3r.models.conditional.Sup3rCondMom.init_optimizer", false]], "init_optimizer() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.init_optimizer", false]], "init_optimizer() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.init_optimizer", false]], "init_optimizer() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.init_optimizer", false]], "init_samplers() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.init_samplers", false]], "init_samplers() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.init_samplers", false]], "init_samplers() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.init_samplers", false]], "init_samplers() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.init_samplers", false]], "init_samplers() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.init_samplers", false]], "init_samplers() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.init_samplers", false]], "init_samplers() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.init_samplers", false]], "init_samplers() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.init_samplers", false]], "init_samplers() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.init_samplers", false]], "init_samplers() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.init_samplers", false]], "init_samplers() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.init_samplers", false]], "init_weights() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.init_weights", false]], "init_weights() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.init_weights", false]], "init_weights() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.init_weights", false]], "init_weights() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.init_weights", false]], "input_dims (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.input_dims", false]], "input_dims (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.input_dims", false]], "input_dims (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.input_dims", false]], "input_dims (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.input_dims", false]], "input_dims (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.input_dims", false]], "input_dims (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.input_dims", false]], "input_dims (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.input_dims", false]], "input_dims (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.input_dims", false]], "input_dims (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.input_dims", false]], "input_dims (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.input_dims", false]], "input_dims (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.input_dims", false]], "input_files (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.input_files", false]], "input_resolution (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.input_resolution", false]], "input_resolution (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.input_resolution", false]], "input_resolution (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.input_resolution", false]], "input_resolution (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.input_resolution", false]], "input_resolution (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.input_resolution", false]], "input_resolution (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.input_resolution", false]], "input_resolution (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.input_resolution", false]], "input_resolution (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.input_resolution", false]], "input_resolution (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.input_resolution", false]], "input_resolution (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.input_resolution", false]], "input_resolution (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.input_resolution", false]], "interp() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.interp", false]], "interp_to_level() (interpolator class method)": [[294, "sup3r.utilities.interpolation.Interpolator.interp_to_level", false]], "interpolate_na() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.interpolate_na", false]], "interpolator (class in sup3r.utilities.interpolation)": [[294, "sup3r.utilities.interpolation.Interpolator", false]], "invert_uv() (in module sup3r.preprocessing.derivers.utilities)": [[196, "sup3r.preprocessing.derivers.utilities.invert_uv", false]], "invert_uv_features() (outputhandler class method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.invert_uv_features", false]], "invert_uv_features() (outputhandlerh5 class method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.invert_uv_features", false]], "invert_uv_features() (outputhandlernc class method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.invert_uv_features", false]], "invert_uv_single_pair() (outputhandler static method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.invert_uv_single_pair", false]], "invert_uv_single_pair() (outputhandlerh5 static method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.invert_uv_single_pair", false]], "invert_uv_single_pair() (outputhandlernc static method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.invert_uv_single_pair", false]], "is_4d (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.is_4d", false]], "is_4d (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.is_4d", false]], "is_4d (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.is_4d", false]], "is_4d (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.is_4d", false]], "is_4d (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.is_4d", false]], "is_4d (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.is_4d", false]], "is_4d (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.is_4d", false]], "is_4d (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.is_4d", false]], "is_4d (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.is_4d", false]], "is_4d (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.is_4d", false]], "is_4d (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.is_4d", false]], "is_5d (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.is_5d", false]], "is_5d (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.is_5d", false]], "is_5d (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.is_5d", false]], "is_5d (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.is_5d", false]], "is_5d (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.is_5d", false]], "is_5d (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.is_5d", false]], "is_5d (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.is_5d", false]], "is_5d (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.is_5d", false]], "is_5d (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.is_5d", false]], "is_5d (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.is_5d", false]], "is_5d (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.is_5d", false]], "is_increasing_lons() (outputhandler static method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.is_increasing_lons", false]], "is_increasing_lons() (outputhandlerh5 static method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.is_increasing_lons", false]], "is_increasing_lons() (outputhandlernc static method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.is_increasing_lons", false]], "is_type_of() (in module sup3r.preprocessing.utilities)": [[255, "sup3r.preprocessing.utilities.is_type_of", false]], "isalnum() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isalnum", false]], "isalnum() (modulename method)": [[287, "sup3r.utilities.ModuleName.isalnum", false]], "isalpha() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isalpha", false]], "isalpha() (modulename method)": [[287, "sup3r.utilities.ModuleName.isalpha", false]], "isascii() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isascii", false]], "isascii() (modulename method)": [[287, "sup3r.utilities.ModuleName.isascii", false]], "isdecimal() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isdecimal", false]], "isdecimal() (modulename method)": [[287, "sup3r.utilities.ModuleName.isdecimal", false]], "isdigit() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isdigit", false]], "isdigit() (modulename method)": [[287, "sup3r.utilities.ModuleName.isdigit", false]], "isel() (sup3rdataset method)": [[108, "sup3r.preprocessing.base.Sup3rDataset.isel", false]], "isel() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.isel", false]], "isidentifier() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isidentifier", false]], "isidentifier() (modulename method)": [[287, "sup3r.utilities.ModuleName.isidentifier", false]], "islower() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.islower", false]], "islower() (modulename method)": [[287, "sup3r.utilities.ModuleName.islower", false]], "isnumeric() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isnumeric", false]], "isnumeric() (modulename method)": [[287, "sup3r.utilities.ModuleName.isnumeric", false]], "isprintable() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isprintable", false]], "isprintable() (modulename method)": [[287, "sup3r.utilities.ModuleName.isprintable", false]], "isspace() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isspace", false]], "isspace() (modulename method)": [[287, "sup3r.utilities.ModuleName.isspace", false]], "istitle() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.istitle", false]], "istitle() (modulename method)": [[287, "sup3r.utilities.ModuleName.istitle", false]], "isupper() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.isupper", false]], "isupper() (modulename method)": [[287, "sup3r.utilities.ModuleName.isupper", false]], "items() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.items", false]], "items() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.items", false]], "join() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.join", false]], "join() (modulename method)": [[287, "sup3r.utilities.ModuleName.join", false]], "keys() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.keys", false]], "keys() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.keys", false]], "kickoff_local_job() (basecli class method)": [[289, "sup3r.utilities.cli.BaseCLI.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.bias.bias_calc_cli)": [[15, "sup3r.bias.bias_calc_cli.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.pipeline.forward_pass_cli)": [[71, "sup3r.pipeline.forward_pass_cli.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.postprocessing.data_collect_cli)": [[91, "sup3r.postprocessing.data_collect_cli.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.solar.solar_cli)": [[284, "sup3r.solar.solar_cli.kickoff_local_job", false]], "kickoff_slurm_job() (basecli class method)": [[289, "sup3r.utilities.cli.BaseCLI.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.bias.bias_calc_cli)": [[16, "sup3r.bias.bias_calc_cli.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.pipeline.forward_pass_cli)": [[72, "sup3r.pipeline.forward_pass_cli.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.postprocessing.data_collect_cli)": [[92, "sup3r.postprocessing.data_collect_cli.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.solar.solar_cli)": [[285, "sup3r.solar.solar_cli.kickoff_slurm_job", false]], "lat_lon (baserasterizer property)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.lat_lon", false]], "lat_lon (rasterizer property)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.lat_lon", false]], "lat_lon (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.lat_lon", false]], "lat_lon (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.lat_lon", false]], "latitude (class in sup3r.preprocessing.derivers.methods)": [[177, "sup3r.preprocessing.derivers.methods.Latitude", false]], "level_file (eradownloader property)": [[292, "sup3r.utilities.era_downloader.EraDownloader.level_file", false]], "lin_bc() (in module sup3r.bias.utilities)": [[36, "sup3r.bias.utilities.lin_bc", false]], "linearcorrection (class in sup3r.bias.bias_calc)": [[9, "sup3r.bias.bias_calc.LinearCorrection", false]], "linearinterp (class in sup3r.models.linear)": [[51, "sup3r.models.linear.LinearInterp", false]], "ljust() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.ljust", false]], "ljust() (modulename method)": [[287, "sup3r.utilities.ModuleName.ljust", false]], "load() (abstractinterface class method)": [[49, "sup3r.models.interface.AbstractInterface.load", false]], "load() (linearinterp class method)": [[51, "sup3r.models.linear.LinearInterp.load", false]], "load() (multistepgan class method)": [[53, "sup3r.models.multi_step.MultiStepGan.load", false]], "load() (multistepsurfacemetgan class method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.load", false]], "load() (solarcc class method)": [[57, "sup3r.models.solar_cc.SolarCC.load", false]], "load() (solarmultistepgan class method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.load", false]], "load() (sup3rcondmom class method)": [[45, "sup3r.models.conditional.Sup3rCondMom.load", false]], "load() (sup3rgan class method)": [[43, "sup3r.models.base.Sup3rGan.load", false]], "load() (sup3rgandc class method)": [[47, "sup3r.models.dc.Sup3rGanDC.load", false]], "load() (sup3rganwithobs class method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.load", false]], "load() (surfacespatialmetmodel class method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.load", false]], "load_exo_data() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.load_exo_data", false]], "load_network() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.load_network", false]], "load_network() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.load_network", false]], "load_network() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.load_network", false]], "load_network() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.load_network", false]], "load_network() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.load_network", false]], "load_network() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.load_network", false]], "load_saved_params() (abstractsinglemodel static method)": [[41, "sup3r.models.abstract.AbstractSingleModel.load_saved_params", false]], "load_saved_params() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.load_saved_params", false]], "load_saved_params() (sup3rcondmom static method)": [[45, "sup3r.models.conditional.Sup3rCondMom.load_saved_params", false]], "load_saved_params() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.load_saved_params", false]], "load_saved_params() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.load_saved_params", false]], "load_saved_params() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.load_saved_params", false]], "loaded (sup3rdataset property)": [[108, "sup3r.preprocessing.base.Sup3rDataset.loaded", false]], "loaded (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.loaded", false]], "loader (class in sup3r.preprocessing.loaders)": [[201, "sup3r.preprocessing.loaders.Loader", false]], "loaderh5 (class in sup3r.preprocessing.loaders.h5)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5", false]], "loadernc (class in sup3r.preprocessing.loaders.nc)": [[207, "sup3r.preprocessing.loaders.nc.LoaderNC", false]], "local_linear_bc() (in module sup3r.bias.bias_transforms)": [[22, "sup3r.bias.bias_transforms.local_linear_bc", false]], "local_presrat_bc() (in module sup3r.bias.bias_transforms)": [[23, "sup3r.bias.bias_transforms.local_presrat_bc", false]], "local_qdm_bc() (in module sup3r.bias.bias_transforms)": [[24, "sup3r.bias.bias_transforms.local_qdm_bc", false]], "log_args() (in module sup3r.preprocessing.utilities)": [[256, "sup3r.preprocessing.utilities.log_args", false]], "log_loss_details() (abstractsinglemodel static method)": [[41, "sup3r.models.abstract.AbstractSingleModel.log_loss_details", false]], "log_loss_details() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.log_loss_details", false]], "log_loss_details() (sup3rcondmom static method)": [[45, "sup3r.models.conditional.Sup3rCondMom.log_loss_details", false]], "log_loss_details() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.log_loss_details", false]], "log_loss_details() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.log_loss_details", false]], "log_loss_details() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.log_loss_details", false]], "log_queue_info() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.log_queue_info", false]], "log_queue_info() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.log_queue_info", false]], "log_queue_info() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.log_queue_info", false]], "log_queue_info() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.log_queue_info", false]], "log_queue_info() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.log_queue_info", false]], "log_queue_info() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.log_queue_info", false]], "log_queue_info() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.log_queue_info", false]], "log_queue_info() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.log_queue_info", false]], "log_queue_info() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.log_queue_info", false]], "log_queue_info() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.log_queue_info", false]], "log_queue_info() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.log_queue_info", false]], "log_queue_info() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.log_queue_info", false]], "log_queue_info() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.log_queue_info", false]], "log_queue_info() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.log_queue_info", false]], "log_queue_info() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.log_queue_info", false]], "log_queue_info() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.log_queue_info", false]], "log_queue_info() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.log_queue_info", false]], "log_queue_info() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.log_queue_info", false]], "log_queue_info() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.log_queue_info", false]], "log_queue_info() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.log_queue_info", false]], "log_queue_info() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.log_queue_info", false]], "log_queue_info() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.log_queue_info", false]], "log_queue_info() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.log_queue_info", false]], "longitude (class in sup3r.preprocessing.derivers.methods)": [[178, "sup3r.preprocessing.derivers.methods.Longitude", false]], "lower() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.lower", false]], "lower() (modulename method)": [[287, "sup3r.utilities.ModuleName.lower", false]], "lower_names() (in module sup3r.preprocessing.utilities)": [[257, "sup3r.preprocessing.utilities.lower_names", false]], "lowered() (in module sup3r.preprocessing.utilities)": [[258, "sup3r.preprocessing.utilities.lowered", false]], "lowresloss (class in sup3r.utilities.loss_metrics)": [[298, "sup3r.utilities.loss_metrics.LowResLoss", false]], "lr_features (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.lr_features", false]], "lr_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.lr_features", false]], "lr_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.lr_features", false]], "lr_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.lr_features", false]], "lr_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.lr_features", false]], "lr_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.lr_features", false]], "lr_features (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.lr_features", false]], "lr_features (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.lr_features", false]], "lr_features (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.lr_features", false]], "lr_features (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.lr_features", false]], "lr_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.lr_features", false]], "lr_only_features (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.lr_only_features", false]], "lr_only_features (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.lr_only_features", false]], "lr_only_features (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.lr_only_features", false]], "lr_only_features (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.lr_only_features", false]], "lr_only_features (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.lr_only_features", false]], "lr_only_features (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.lr_only_features", false]], "lr_shape (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.lr_shape", false]], "lr_shape (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.lr_shape", false]], "lr_shape (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.lr_shape", false]], "lr_shape (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.lr_shape", false]], "lr_shape (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.lr_shape", false]], "lr_shape (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.lr_shape", false]], "lr_shape (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.lr_shape", false]], "lr_shape (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.lr_shape", false]], "lr_shape (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.lr_shape", false]], "lr_shape (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.lr_shape", false]], "lr_shape (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.lr_shape", false]], "lr_shape (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.lr_shape", false]], "lr_shape (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.lr_shape", false]], "lr_shape (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.lr_shape", false]], "lr_shape (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.lr_shape", false]], "lr_shape (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.lr_shape", false]], "lr_shape (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.lr_shape", false]], "lr_shape (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.lr_shape", false]], "lr_shape (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.lr_shape", false]], "lr_shape (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.lr_shape", false]], "lr_shape (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.lr_shape", false]], "lr_shape (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.lr_shape", false]], "lr_shape (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.lr_shape", false]], "lr_shape (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.lr_shape", false]], "lr_shape (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.lr_shape", false]], "lr_shape (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.lr_shape", false]], "lr_shape (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.lr_shape", false]], "lstrip() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.lstrip", false]], "lstrip() (modulename method)": [[287, "sup3r.utilities.ModuleName.lstrip", false]], "make_collect_chunks() (in module sup3r.utilities.pytest.helpers)": [[319, "sup3r.utilities.pytest.helpers.make_collect_chunks", false]], "make_fake_cs_ratio_files() (in module sup3r.utilities.pytest.helpers)": [[320, "sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files", false]], "make_fake_dset() (in module sup3r.utilities.pytest.helpers)": [[321, "sup3r.utilities.pytest.helpers.make_fake_dset", false]], "make_fake_h5_chunks() (in module sup3r.utilities.pytest.helpers)": [[322, "sup3r.utilities.pytest.helpers.make_fake_h5_chunks", false]], "make_fake_nc_file() (in module sup3r.utilities.pytest.helpers)": [[323, "sup3r.utilities.pytest.helpers.make_fake_nc_file", false]], "make_fake_tif() (in module sup3r.utilities.pytest.helpers)": [[324, "sup3r.utilities.pytest.helpers.make_fake_tif", false]], "make_mask() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.make_mask", false]], "make_mask() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.make_mask", false]], "make_mask() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.make_mask", false]], "make_mask() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.make_mask", false]], "make_mask() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.make_mask", false]], "make_mask() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.make_mask", false]], "make_mask() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.make_mask", false]], "make_mask() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.make_mask", false]], "make_mask() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.make_mask", false]], "make_mask() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.make_mask", false]], "make_mask() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.make_mask", false]], "make_mask() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.make_mask", false]], "make_output() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.make_output", false]], "make_output() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.make_output", false]], "make_output() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.make_output", false]], "make_output() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.make_output", false]], "make_output() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.make_output", false]], "make_output() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.make_output", false]], "make_output() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.make_output", false]], "make_output() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.make_output", false]], "make_output() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.make_output", false]], "make_output() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.make_output", false]], "make_output() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.make_output", false]], "make_output() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.make_output", false]], "make_path() (slurmmanager static method)": [[290, "sup3r.utilities.cli.SlurmManager.make_path", false]], "make_sh() (slurmmanager static method)": [[290, "sup3r.utilities.cli.SlurmManager.make_sh", false]], "make_time_index_from_kws() (in module sup3r.preprocessing.utilities)": [[259, "sup3r.preprocessing.utilities.make_time_index_from_kws", false]], "make_yearly_file() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.make_yearly_file", false]], "make_yearly_var_file() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.make_yearly_var_file", false]], "maketrans() (dimension static method)": [[212, "sup3r.preprocessing.names.Dimension.maketrans", false]], "maketrans() (modulename static method)": [[287, "sup3r.utilities.ModuleName.maketrans", false]], "map_new_name() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.map_new_name", false]], "map_new_name() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.map_new_name", false]], "map_new_name() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.map_new_name", false]], "map_new_name() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.map_new_name", false]], "map_new_name() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.map_new_name", false]], "map_new_name() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.map_new_name", false]], "map_new_name() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.map_new_name", false]], "map_new_name() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.map_new_name", false]], "mask (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.mask", false]], "materialderivativeloss (class in sup3r.utilities.loss_metrics)": [[299, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss", false]], "mean() (sup3rdataset method)": [[108, "sup3r.preprocessing.base.Sup3rDataset.mean", false]], "mean() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.mean", false]], "means (abstractsinglemodel property)": [[41, "sup3r.models.abstract.AbstractSingleModel.means", false]], "means (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.means", false]], "means (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.means", false]], "means (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.means", false]], "means (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.means", false]], "means (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.means", false]], "means (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.means", false]], "means (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.means", false]], "means (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.means", false]], "meta (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.meta", false]], "meta (dataretrievalbase property)": [[7, "sup3r.bias.base.DataRetrievalBase.meta", false]], "meta (forwardpass property)": [[69, "sup3r.pipeline.forward_pass.ForwardPass.meta", false]], "meta (forwardpassstrategy property)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.meta", false]], "meta (linearcorrection property)": [[9, "sup3r.bias.bias_calc.LinearCorrection.meta", false]], "meta (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.meta", false]], "meta (monthlylinearcorrection property)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.meta", false]], "meta (monthlyscalarcorrection property)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.meta", false]], "meta (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.meta", false]], "meta (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.meta", false]], "meta (presrat property)": [[30, "sup3r.bias.presrat.PresRat.meta", false]], "meta (quantiledeltamappingcorrection property)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.meta", false]], "meta (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.meta", false]], "meta (scalarcorrection property)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.meta", false]], "meta (skillassessment property)": [[13, "sup3r.bias.bias_calc.SkillAssessment.meta", false]], "meta (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.meta", false]], "meta (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.meta", false]], "meta (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.meta", false]], "meta (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.meta", false]], "meta (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.meta", false]], "meta (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.meta", false]], "meta (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.meta", false]], "meta (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.meta", false]], "meta (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.meta", false]], "mmdloss (class in sup3r.utilities.loss_metrics)": [[300, "sup3r.utilities.loss_metrics.MmdLoss", false]], "model_params (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.model_params", false]], "model_params (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.model_params", false]], "model_params (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.model_params", false]], "model_params (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.model_params", false]], "model_params (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.model_params", false]], "model_params (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.model_params", false]], "model_params (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.model_params", false]], "model_params (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.model_params", false]], "model_params (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.model_params", false]], "model_params (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.model_params", false]], "model_params (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.model_params", false]], "models (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.models", false]], "models (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.models", false]], "models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.models", false]], "module": [[0, "module-sup3r", false], [1, "module-sup3r.batch", false], [2, "module-sup3r.batch.batch_cli", false], [3, "module-sup3r.bias", false], [4, "module-sup3r.bias.abstract", false], [6, "module-sup3r.bias.base", false], [8, "module-sup3r.bias.bias_calc", false], [14, "module-sup3r.bias.bias_calc_cli", false], [17, "module-sup3r.bias.bias_calc_vortex", false], [20, "module-sup3r.bias.bias_transforms", false], [26, "module-sup3r.bias.mixins", false], [29, "module-sup3r.bias.presrat", false], [31, "module-sup3r.bias.qdm", false], [33, "module-sup3r.bias.utilities", false], [38, "module-sup3r.cli", false], [39, "module-sup3r.models", false], [40, "module-sup3r.models.abstract", false], [42, "module-sup3r.models.base", false], [44, "module-sup3r.models.conditional", false], [46, "module-sup3r.models.dc", false], [48, "module-sup3r.models.interface", false], [50, "module-sup3r.models.linear", false], [52, "module-sup3r.models.multi_step", false], [56, "module-sup3r.models.solar_cc", false], [58, "module-sup3r.models.surface", false], [60, "module-sup3r.models.utilities", false], [65, "module-sup3r.models.with_obs", false], [67, "module-sup3r.pipeline", false], [68, "module-sup3r.pipeline.forward_pass", false], [70, "module-sup3r.pipeline.forward_pass_cli", false], [73, "module-sup3r.pipeline.pipeline_cli", false], [74, "module-sup3r.pipeline.slicer", false], [76, "module-sup3r.pipeline.strategy", false], [79, "module-sup3r.pipeline.utilities", false], [82, "module-sup3r.postprocessing", false], [83, "module-sup3r.postprocessing.collectors", false], [84, "module-sup3r.postprocessing.collectors.base", false], [86, "module-sup3r.postprocessing.collectors.h5", false], [88, "module-sup3r.postprocessing.collectors.nc", false], [90, "module-sup3r.postprocessing.data_collect_cli", false], [93, "module-sup3r.postprocessing.writers", false], [94, "module-sup3r.postprocessing.writers.base", false], [98, "module-sup3r.postprocessing.writers.h5", false], [100, "module-sup3r.postprocessing.writers.nc", false], [102, "module-sup3r.preprocessing", false], [103, "module-sup3r.preprocessing.accessor", false], [105, "module-sup3r.preprocessing.base", false], [110, "module-sup3r.preprocessing.batch_handlers", false], [111, "module-sup3r.preprocessing.batch_handlers.dc", false], [113, "module-sup3r.preprocessing.batch_handlers.factory", false], [124, "module-sup3r.preprocessing.batch_queues", false], [125, "module-sup3r.preprocessing.batch_queues.abstract", false], [127, "module-sup3r.preprocessing.batch_queues.base", false], [129, "module-sup3r.preprocessing.batch_queues.conditional", false], [137, "module-sup3r.preprocessing.batch_queues.dc", false], [140, "module-sup3r.preprocessing.batch_queues.dual", false], [142, "module-sup3r.preprocessing.batch_queues.utilities", false], [146, "module-sup3r.preprocessing.cachers", false], [147, "module-sup3r.preprocessing.cachers.base", false], [149, "module-sup3r.preprocessing.cachers.utilities", false], [150, "module-sup3r.preprocessing.collections", false], [151, "module-sup3r.preprocessing.collections.base", false], [153, "module-sup3r.preprocessing.collections.stats", false], [155, "module-sup3r.preprocessing.data_handlers", false], [156, "module-sup3r.preprocessing.data_handlers.base", false], [161, "module-sup3r.preprocessing.data_handlers.exo", false], [165, "module-sup3r.preprocessing.data_handlers.nc_cc", false], [168, "module-sup3r.preprocessing.derivers", false], [169, "module-sup3r.preprocessing.derivers.base", false], [172, "module-sup3r.preprocessing.derivers.methods", false], [194, "module-sup3r.preprocessing.derivers.utilities", false], [200, "module-sup3r.preprocessing.loaders", false], [202, "module-sup3r.preprocessing.loaders.base", false], [204, "module-sup3r.preprocessing.loaders.h5", false], [206, "module-sup3r.preprocessing.loaders.nc", false], [208, "module-sup3r.preprocessing.loaders.utilities", false], [211, "module-sup3r.preprocessing.names", false], [213, "module-sup3r.preprocessing.rasterizers", false], [214, "module-sup3r.preprocessing.rasterizers.base", false], [216, "module-sup3r.preprocessing.rasterizers.dual", false], [218, "module-sup3r.preprocessing.rasterizers.exo", false], [223, "module-sup3r.preprocessing.rasterizers.extended", false], [225, "module-sup3r.preprocessing.samplers", false], [226, "module-sup3r.preprocessing.samplers.base", false], [228, "module-sup3r.preprocessing.samplers.cc", false], [230, "module-sup3r.preprocessing.samplers.dc", false], [232, "module-sup3r.preprocessing.samplers.dual", false], [234, "module-sup3r.preprocessing.samplers.utilities", false], [242, "module-sup3r.preprocessing.utilities", false], [267, "module-sup3r.qa", false], [268, "module-sup3r.qa.qa", false], [270, "module-sup3r.qa.qa_cli", false], [271, "module-sup3r.qa.utilities", false], [280, "module-sup3r.solar", false], [281, "module-sup3r.solar.solar", false], [283, "module-sup3r.solar.solar_cli", false], [286, "module-sup3r.utilities", false], [288, "module-sup3r.utilities.cli", false], [291, "module-sup3r.utilities.era_downloader", false], [293, "module-sup3r.utilities.interpolation", false], [295, "module-sup3r.utilities.loss_metrics", false], [309, "module-sup3r.utilities.pytest", false], [310, "module-sup3r.utilities.pytest.helpers", false], [326, "module-sup3r.utilities.utilities", false]], "modulename (class in sup3r.utilities)": [[287, "sup3r.utilities.ModuleName", false]], "monthly_file (eradownloader property)": [[292, "sup3r.utilities.era_downloader.EraDownloader.monthly_file", false]], "monthly_local_linear_bc() (in module sup3r.bias.bias_transforms)": [[25, "sup3r.bias.bias_transforms.monthly_local_linear_bc", false]], "monthlylinearcorrection (class in sup3r.bias.bias_calc)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection", false]], "monthlyscalarcorrection (class in sup3r.bias.bias_calc)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection", false]], "mro() (sup3rmeta method)": [[109, "sup3r.preprocessing.base.Sup3rMeta.mro", false]], "multistepgan (class in sup3r.models.multi_step)": [[53, "sup3r.models.multi_step.MultiStepGan", false]], "multistepsurfacemetgan (class in sup3r.models.multi_step)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan", false]], "n_chunks (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.n_chunks", false]], "n_spatial_chunks (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.n_spatial_chunks", false]], "n_time_chunks (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.n_time_chunks", false]], "name (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.name", false]], "nn (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.nn", false]], "nn (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.nn", false]], "nn (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.nn", false]], "nn (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.nn", false]], "nn_fill_array() (in module sup3r.utilities.utilities)": [[334, "sup3r.utilities.utilities.nn_fill_array", false]], "no_overlap() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.no_overlap", false]], "no_overlap() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.no_overlap", false]], "no_overlap() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.no_overlap", false]], "no_overlap() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.no_overlap", false]], "no_overlap() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.no_overlap", false]], "no_overlap() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.no_overlap", false]], "no_overlap() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.no_overlap", false]], "no_overlap() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.no_overlap", false]], "node_chunks (forwardpassstrategy property)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.node_chunks", false]], "node_finished() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.node_finished", false]], "norm_input() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.norm_input", false]], "norm_input() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.norm_input", false]], "norm_input() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.norm_input", false]], "norm_input() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.norm_input", false]], "norm_input() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.norm_input", false]], "norm_input() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.norm_input", false]], "normalize() (statscollection method)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.normalize", false]], "normalize() (sup3rdataset method)": [[108, "sup3r.preprocessing.base.Sup3rDataset.normalize", false]], "normalize() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.normalize", false]], "nsrdb_reduce_daily_data() (in module sup3r.preprocessing.samplers.utilities)": [[236, "sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data", false]], "nsrdb_sub_daily_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[237, "sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler", false]], "nsrdb_tslice (solar property)": [[282, "sup3r.solar.solar.Solar.nsrdb_tslice", false]], "nt (linearcorrection attribute)": [[9, "sup3r.bias.bias_calc.LinearCorrection.NT", false]], "nt (monthlylinearcorrection attribute)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.NT", false]], "nt (monthlyscalarcorrection attribute)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.NT", false]], "nt (scalarcorrection attribute)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.NT", false]], "nt (skillassessment attribute)": [[13, "sup3r.bias.bias_calc.SkillAssessment.NT", false]], "numpy_if_tensor() (in module sup3r.preprocessing.utilities)": [[260, "sup3r.preprocessing.utilities.numpy_if_tensor", false]], "obs_features (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.obs_features", false]], "obs_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.obs_features", false]], "obs_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.obs_features", false]], "obs_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.obs_features", false]], "obs_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.obs_features", false]], "obs_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.obs_features", false]], "obs_features (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.obs_features", false]], "obs_features (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.obs_features", false]], "obs_features (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.obs_features", false]], "obs_features (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.obs_features", false]], "obs_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.obs_features", false]], "obs_training_inds (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.obs_training_inds", false]], "obsrasterizer (class in sup3r.preprocessing.rasterizers.exo)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer", false]], "open_dataset() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.open_dataset", false]], "open_file() (rexoutputs class method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.open_file", false]], "optimizer (abstractsinglemodel property)": [[41, "sup3r.models.abstract.AbstractSingleModel.optimizer", false]], "optimizer (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.optimizer", false]], "optimizer (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.optimizer", false]], "optimizer (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.optimizer", false]], "optimizer (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.optimizer", false]], "optimizer (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.optimizer", false]], "optimizer_disc (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.optimizer_disc", false]], "optimizer_disc (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.optimizer_disc", false]], "optimizer_disc (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.optimizer_disc", false]], "optimizer_disc (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.optimizer_disc", false]], "order() (dimension class method)": [[212, "sup3r.preprocessing.names.Dimension.order", false]], "ordered() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.ordered", false]], "ordered_array() (in module sup3r.preprocessing.utilities)": [[261, "sup3r.preprocessing.utilities.ordered_array", false]], "ordered_dims() (in module sup3r.preprocessing.utilities)": [[262, "sup3r.preprocessing.utilities.ordered_dims", false]], "out_features (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.out_features", false]], "out_files (forwardpassstrategy property)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.out_files", false]], "out_of_bounds (solar property)": [[282, "sup3r.solar.solar.Solar.out_of_bounds", false]], "output_files (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.output_files", false]], "output_names (sup3rqa property)": [[269, "sup3r.qa.qa.Sup3rQa.output_names", false]], "output_resolution (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.output_resolution", false]], "output_resolution (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.output_resolution", false]], "output_resolution (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.output_resolution", false]], "output_resolution (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.output_resolution", false]], "output_resolution (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.output_resolution", false]], "output_resolution (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.output_resolution", false]], "output_resolution (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.output_resolution", false]], "output_resolution (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.output_resolution", false]], "output_resolution (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.output_resolution", false]], "output_resolution (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.output_resolution", false]], "output_resolution (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.output_resolution", false]], "output_type (sup3rqa property)": [[269, "sup3r.qa.qa.Sup3rQa.output_type", false]], "outputhandler (class in sup3r.postprocessing.writers.base)": [[95, "sup3r.postprocessing.writers.base.OutputHandler", false]], "outputhandlerh5 (class in sup3r.postprocessing.writers.h5)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5", false]], "outputhandlernc (class in sup3r.postprocessing.writers.nc)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC", false]], "outputmixin (class in sup3r.postprocessing.writers.base)": [[96, "sup3r.postprocessing.writers.base.OutputMixin", false]], "package (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.package", false]], "pad_lat_lon() (outputhandler static method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.pad_lat_lon", false]], "pad_lat_lon() (outputhandlerh5 static method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.pad_lat_lon", false]], "pad_lat_lon() (outputhandlernc static method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.pad_lat_lon", false]], "pad_source_data() (forwardpass method)": [[69, "sup3r.pipeline.forward_pass.ForwardPass.pad_source_data", false]], "parse_chunks() (cacher static method)": [[148, "sup3r.preprocessing.cachers.base.Cacher.parse_chunks", false]], "parse_ellipsis() (in module sup3r.preprocessing.utilities)": [[263, "sup3r.preprocessing.utilities.parse_ellipsis", false]], "parse_feature() (in module sup3r.preprocessing.derivers.utilities)": [[197, "sup3r.preprocessing.derivers.utilities.parse_feature", false]], "parse_features() (in module sup3r.preprocessing.utilities)": [[264, "sup3r.preprocessing.utilities.parse_features", false]], "parse_keys() (in module sup3r.preprocessing.utilities)": [[265, "sup3r.preprocessing.utilities.parse_keys", false]], "parse_queue_str() (slurmmanager class method)": [[290, "sup3r.utilities.cli.SlurmManager.parse_queue_str", false]], "parse_to_list() (in module sup3r.preprocessing.utilities)": [[266, "sup3r.preprocessing.utilities.parse_to_list", false]], "partition() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.partition", false]], "partition() (modulename method)": [[287, "sup3r.utilities.ModuleName.partition", false]], "pd_date_range() (in module sup3r.utilities.utilities)": [[335, "sup3r.utilities.utilities.pd_date_range", false]], "percentiles (skillassessment attribute)": [[13, "sup3r.bias.bias_calc.SkillAssessment.PERCENTILES", false]], "perceptualloss (class in sup3r.utilities.loss_metrics)": [[301, "sup3r.utilities.loss_metrics.PerceptualLoss", false]], "point_loss_hours (solarcc attribute)": [[57, "sup3r.models.solar_cc.SolarCC.POINT_LOSS_HOURS", false]], "pop() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.pop", false]], "pop() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.pop", false]], "popitem() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.popitem", false]], "popitem() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.popitem", false]], "post_init_log() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.post_init_log", false]], "post_init_log() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.post_init_log", false]], "post_init_log() (baseloader method)": [[203, "sup3r.preprocessing.loaders.base.BaseLoader.post_init_log", false]], "post_init_log() (baserasterizer method)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.post_init_log", false]], "post_init_log() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.post_init_log", false]], "post_init_log() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.post_init_log", false]], "post_init_log() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.post_init_log", false]], "post_init_log() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.post_init_log", false]], "post_init_log() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.post_init_log", false]], "post_init_log() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.post_init_log", false]], "post_init_log() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.post_init_log", false]], "post_init_log() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.post_init_log", false]], "post_init_log() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.post_init_log", false]], "post_init_log() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.post_init_log", false]], "post_init_log() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.post_init_log", false]], "post_init_log() (cacher method)": [[148, "sup3r.preprocessing.cachers.base.Cacher.post_init_log", false]], "post_init_log() (collection method)": [[152, "sup3r.preprocessing.collections.base.Collection.post_init_log", false]], "post_init_log() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.post_init_log", false]], "post_init_log() (container method)": [[106, "sup3r.preprocessing.base.Container.post_init_log", false]], "post_init_log() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.post_init_log", false]], "post_init_log() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.post_init_log", false]], "post_init_log() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.post_init_log", false]], "post_init_log() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.post_init_log", false]], "post_init_log() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.post_init_log", false]], "post_init_log() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.post_init_log", false]], "post_init_log() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.post_init_log", false]], "post_init_log() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.post_init_log", false]], "post_init_log() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.post_init_log", false]], "post_init_log() (dualrasterizer method)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.post_init_log", false]], "post_init_log() (dualsampler method)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.post_init_log", false]], "post_init_log() (dualsamplercc method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.post_init_log", false]], "post_init_log() (dummydata method)": [[315, "sup3r.utilities.pytest.helpers.DummyData.post_init_log", false]], "post_init_log() (dummysampler method)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.post_init_log", false]], "post_init_log() (loader method)": [[201, "sup3r.preprocessing.loaders.Loader.post_init_log", false]], "post_init_log() (loaderh5 method)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5.post_init_log", false]], "post_init_log() (loadernc method)": [[207, "sup3r.preprocessing.loaders.nc.LoaderNC.post_init_log", false]], "post_init_log() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.post_init_log", false]], "post_init_log() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.post_init_log", false]], "post_init_log() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.post_init_log", false]], "post_init_log() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.post_init_log", false]], "post_init_log() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.post_init_log", false]], "post_init_log() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.post_init_log", false]], "post_init_log() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.post_init_log", false]], "post_init_log() (sampler method)": [[227, "sup3r.preprocessing.samplers.base.Sampler.post_init_log", false]], "post_init_log() (samplerdc method)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.post_init_log", false]], "post_init_log() (samplertester method)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.post_init_log", false]], "post_init_log() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.post_init_log", false]], "post_init_log() (statscollection method)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.post_init_log", false]], "post_init_log() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.post_init_log", false]], "post_proc() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.post_proc", false]], "post_proc() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.post_proc", false]], "post_proc() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.post_proc", false]], "post_proc() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.post_proc", false]], "post_proc() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.post_proc", false]], "post_proc() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.post_proc", false]], "post_proc() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.post_proc", false]], "post_proc() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.post_proc", false]], "post_proc() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.post_proc", false]], "post_proc() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.post_proc", false]], "post_proc() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.post_proc", false]], "post_proc() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.post_proc", false]], "post_proc() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.post_proc", false]], "post_proc() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.post_proc", false]], "post_proc() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.post_proc", false]], "post_proc() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.post_proc", false]], "post_proc() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.post_proc", false]], "post_proc() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.post_proc", false]], "post_proc() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.post_proc", false]], "post_proc() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.post_proc", false]], "post_proc() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.post_proc", false]], "post_proc() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.post_proc", false]], "post_proc() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.post_proc", false]], "pre_load() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.pre_load", false]], "pre_load() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.pre_load", false]], "pre_load() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.pre_load", false]], "pre_load() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.pre_load", false]], "pre_load() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.pre_load", false]], "pre_load() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.pre_load", false]], "pre_load() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.pre_load", false]], "pre_load() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.pre_load", false]], "preflight() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.preflight", false]], "preflight() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.preflight", false]], "preflight() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.preflight", false]], "preflight() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.preflight", false]], "preflight() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.preflight", false]], "preflight() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.preflight", false]], "preflight() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.preflight", false]], "preflight() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.preflight", false]], "preflight() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.preflight", false]], "preflight() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.preflight", false]], "preflight() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.preflight", false]], "preflight() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.preflight", false]], "preflight() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.preflight", false]], "preflight() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.preflight", false]], "preflight() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.preflight", false]], "preflight() (dualsampler method)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.preflight", false]], "preflight() (dualsamplercc method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.preflight", false]], "preflight() (dummysampler method)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.preflight", false]], "preflight() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.preflight", false]], "preflight() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.preflight", false]], "preflight() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.preflight", false]], "preflight() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.preflight", false]], "preflight() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.preflight", false]], "preflight() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.preflight", false]], "preflight() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.preflight", false]], "preflight() (sampler method)": [[227, "sup3r.preprocessing.samplers.base.Sampler.preflight", false]], "preflight() (samplerdc method)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.preflight", false]], "preflight() (samplertester method)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.preflight", false]], "preflight() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.preflight", false]], "preflight() (solar method)": [[282, "sup3r.solar.solar.Solar.preflight", false]], "preflight() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.preflight", false]], "preflight() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.preflight", false]], "preload_sam() (rexoutputs class method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.preload_SAM", false]], "prep_chunk_data() (forwardpassstrategy method)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.prep_chunk_data", false]], "prep_var_lists() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.prep_var_lists", false]], "preprocess_datasets() (in module sup3r.utilities.utilities)": [[336, "sup3r.utilities.utilities.preprocess_datasets", false]], "pres_div (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.PRES_DIV", false]], "pres_exp (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.PRES_EXP", false]], "presrat (class in sup3r.bias.presrat)": [[30, "sup3r.bias.presrat.PresRat", false]], "pressurewrf (class in sup3r.preprocessing.derivers.methods)": [[179, "sup3r.preprocessing.derivers.methods.PressureWRF", false]], "process_and_combine() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.process_and_combine", false]], "process_level_file() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.process_level_file", false]], "process_surface_file() (eradownloader method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.process_surface_file", false]], "profile_to_tensorboard() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.profile_to_tensorboard", false]], "profile_to_tensorboard() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.profile_to_tensorboard", false]], "profile_to_tensorboard() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.profile_to_tensorboard", false]], "profile_to_tensorboard() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.profile_to_tensorboard", false]], "profile_to_tensorboard() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.profile_to_tensorboard", false]], "profile_to_tensorboard() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.profile_to_tensorboard", false]], "profile_to_tensorboard() (tensorboardmixin method)": [[61, "sup3r.models.utilities.TensorboardMixIn.profile_to_tensorboard", false]], "qa() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.qa", false]], "qdm_bc() (in module sup3r.bias.utilities)": [[37, "sup3r.bias.utilities.qdm_bc", false]], "quantiledeltamappingcorrection (class in sup3r.bias.qdm)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection", false]], "query_queue() (slurmmanager class method)": [[290, "sup3r.utilities.cli.SlurmManager.query_queue", false]], "query_tree() (baseexorasterizer method)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.query_tree", false]], "query_tree() (exorasterizer method)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.query_tree", false]], "query_tree() (obsrasterizer method)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.query_tree", false]], "query_tree() (szarasterizer method)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.query_tree", false]], "queue (slurmmanager property)": [[290, "sup3r.utilities.cli.SlurmManager.queue", false]], "queue_futures (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.queue_futures", false]], "queue_futures (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.queue_futures", false]], "queue_futures (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.queue_futures", false]], "queue_futures (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.queue_futures", false]], "queue_futures (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.queue_futures", false]], "queue_futures (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.queue_futures", false]], "queue_futures (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.queue_futures", false]], "queue_futures (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.queue_futures", false]], "queue_futures (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.queue_futures", false]], "queue_futures (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.queue_futures", false]], "queue_futures (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.queue_futures", false]], "queue_futures (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.queue_futures", false]], "queue_futures (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.queue_futures", false]], "queue_futures (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.queue_futures", false]], "queue_futures (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.queue_futures", false]], "queue_futures (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.queue_futures", false]], "queue_futures (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.queue_futures", false]], "queue_futures (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.queue_futures", false]], "queue_futures (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.queue_futures", false]], "queue_futures (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.queue_futures", false]], "queue_futures (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.queue_futures", false]], "queue_futures (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.queue_futures", false]], "queue_futures (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.queue_futures", false]], "queue_job_ids (slurmmanager property)": [[290, "sup3r.utilities.cli.SlurmManager.queue_job_ids", false]], "queue_job_names (slurmmanager property)": [[290, "sup3r.utilities.cli.SlurmManager.queue_job_names", false]], "queue_len (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.queue_len", false]], "queue_len (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.queue_len", false]], "queue_len (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.queue_len", false]], "queue_len (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.queue_len", false]], "queue_len (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.queue_len", false]], "queue_len (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.queue_len", false]], "queue_len (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.queue_len", false]], "queue_len (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.queue_len", false]], "queue_len (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.queue_len", false]], "queue_len (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.queue_len", false]], "queue_len (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.queue_len", false]], "queue_len (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.queue_len", false]], "queue_len (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.queue_len", false]], "queue_len (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.queue_len", false]], "queue_len (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.queue_len", false]], "queue_len (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.queue_len", false]], "queue_len (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.queue_len", false]], "queue_len (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.queue_len", false]], "queue_len (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.queue_len", false]], "queue_len (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.queue_len", false]], "queue_len (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.queue_len", false]], "queue_len (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.queue_len", false]], "queue_len (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.queue_len", false]], "queue_shape (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.queue_shape", false]], "queue_shape (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.queue_shape", false]], "queue_shape (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.queue_shape", false]], "queue_shape (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.queue_shape", false]], "queue_shape (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.queue_shape", false]], "queue_shape (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.queue_shape", false]], "queue_shape (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.queue_shape", false]], "queue_shape (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.queue_shape", false]], "queue_shape (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.queue_shape", false]], "queue_shape (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.queue_shape", false]], "queue_shape (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.queue_shape", false]], "queue_shape (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.queue_shape", false]], "queue_shape (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.queue_shape", false]], "queue_shape (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.queue_shape", false]], "queue_shape (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.queue_shape", false]], "queue_shape (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.queue_shape", false]], "queue_shape (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.queue_shape", false]], "queue_shape (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.queue_shape", false]], "queue_shape (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.queue_shape", false]], "queue_shape (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.queue_shape", false]], "queue_shape (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.queue_shape", false]], "queue_shape (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.queue_shape", false]], "queue_shape (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.queue_shape", false]], "queue_thread (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.queue_thread", false]], "queue_thread (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.queue_thread", false]], "queue_thread (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.queue_thread", false]], "queue_thread (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.queue_thread", false]], "queue_thread (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.queue_thread", false]], "queue_thread (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.queue_thread", false]], "queue_thread (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.queue_thread", false]], "queue_thread (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.queue_thread", false]], "queue_thread (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.queue_thread", false]], "queue_thread (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.queue_thread", false]], "queue_thread (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.queue_thread", false]], "queue_thread (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.queue_thread", false]], "queue_thread (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.queue_thread", false]], "queue_thread (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.queue_thread", false]], "queue_thread (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.queue_thread", false]], "queue_thread (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.queue_thread", false]], "queue_thread (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.queue_thread", false]], "queue_thread (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.queue_thread", false]], "queue_thread (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.queue_thread", false]], "queue_thread (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.queue_thread", false]], "queue_thread (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.queue_thread", false]], "queue_thread (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.queue_thread", false]], "queue_thread (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.queue_thread", false]], "queuemom1 (class in sup3r.preprocessing.batch_queues.conditional)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1", false]], "queuemom1sf (class in sup3r.preprocessing.batch_queues.conditional)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF", false]], "queuemom2 (class in sup3r.preprocessing.batch_queues.conditional)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2", false]], "queuemom2sep (class in sup3r.preprocessing.batch_queues.conditional)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep", false]], "queuemom2sepsf (class in sup3r.preprocessing.batch_queues.conditional)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF", false]], "queuemom2sf (class in sup3r.preprocessing.batch_queues.conditional)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF", false]], "rasterize_data() (baserasterizer method)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.rasterize_data", false]], "rasterize_data() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.rasterize_data", false]], "rasterizer (class in sup3r.preprocessing.rasterizers.extended)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer", false]], "reduce_high_res_sub_daily() (dualsamplercc method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.reduce_high_res_sub_daily", false]], "register() (sup3rmeta method)": [[109, "sup3r.preprocessing.base.Sup3rMeta.register", false]], "release() (slurmmanager method)": [[290, "sup3r.utilities.cli.SlurmManager.release", false]], "removeprefix() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.removeprefix", false]], "removeprefix() (modulename method)": [[287, "sup3r.utilities.ModuleName.removeprefix", false]], "removesuffix() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.removesuffix", false]], "removesuffix() (modulename method)": [[287, "sup3r.utilities.ModuleName.removesuffix", false]], "replace() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.replace", false]], "replace() (modulename method)": [[287, "sup3r.utilities.ModuleName.replace", false]], "res_dsets (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.res_dsets", false]], "resource_datasets (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.resource_datasets", false]], "rewrap() (sup3rdataset method)": [[108, "sup3r.preprocessing.base.Sup3rDataset.rewrap", false]], "rexoutputs (class in sup3r.postprocessing.writers.base)": [[97, "sup3r.postprocessing.writers.base.RexOutputs", false]], "rfind() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.rfind", false]], "rfind() (modulename method)": [[287, "sup3r.utilities.ModuleName.rfind", false]], "rindex() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.rindex", false]], "rindex() (modulename method)": [[287, "sup3r.utilities.ModuleName.rindex", false]], "rjust() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.rjust", false]], "rjust() (modulename method)": [[287, "sup3r.utilities.ModuleName.rjust", false]], "rm() (slurmmanager static method)": [[290, "sup3r.utilities.cli.SlurmManager.rm", false]], "rpartition() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.rpartition", false]], "rpartition() (modulename method)": [[287, "sup3r.utilities.ModuleName.rpartition", false]], "rsplit() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.rsplit", false]], "rsplit() (modulename method)": [[287, "sup3r.utilities.ModuleName.rsplit", false]], "rstrip() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.rstrip", false]], "rstrip() (modulename method)": [[287, "sup3r.utilities.ModuleName.rstrip", false]], "run() (abstractbiascorrection method)": [[5, "sup3r.bias.abstract.AbstractBiasCorrection.run", false]], "run() (biascorrectupdate class method)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.run", false]], "run() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.run", false]], "run() (forwardpass class method)": [[69, "sup3r.pipeline.forward_pass.ForwardPass.run", false]], "run() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.run", false]], "run() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.run", false]], "run() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.run", false]], "run() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.run", false]], "run() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.run", false]], "run() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.run", false]], "run() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.run", false]], "run() (sup3rqa method)": [[269, "sup3r.qa.qa.Sup3rQa.run", false]], "run() (trainingsession method)": [[62, "sup3r.models.utilities.TrainingSession.run", false]], "run() (vortexmeanprepper class method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.run", false]], "run_attrs (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.run_attrs", false]], "run_chunk() (forwardpass class method)": [[69, "sup3r.pipeline.forward_pass.ForwardPass.run_chunk", false]], "run_exo_layer() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.run_exo_layer", false]], "run_exo_layer() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.run_exo_layer", false]], "run_exo_layer() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.run_exo_layer", false]], "run_exo_layer() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.run_exo_layer", false]], "run_exo_layer() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.run_exo_layer", false]], "run_exo_layer() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.run_exo_layer", false]], "run_for_var() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.run_for_var", false]], "run_generator() (forwardpass class method)": [[69, "sup3r.pipeline.forward_pass.ForwardPass.run_generator", false]], "run_gradient_descent() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.run_gradient_descent", false]], "run_gradient_descent() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.run_gradient_descent", false]], "run_gradient_descent() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.run_gradient_descent", false]], "run_gradient_descent() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.run_gradient_descent", false]], "run_gradient_descent() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.run_gradient_descent", false]], "run_gradient_descent() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.run_gradient_descent", false]], "run_input_checks() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.run_input_checks", false]], "run_input_checks() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.run_input_checks", false]], "run_month() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.run_month", false]], "run_qa() (eradownloader class method)": [[292, "sup3r.utilities.era_downloader.EraDownloader.run_qa", false]], "run_temporal_chunks() (solar class method)": [[282, "sup3r.solar.solar.Solar.run_temporal_chunks", false]], "run_wrap_checks() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.run_wrap_checks", false]], "run_wrap_checks() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.run_wrap_checks", false]], "running (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.running", false]], "running (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.running", false]], "running (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.running", false]], "running (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.running", false]], "running (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.running", false]], "running (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.running", false]], "running (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.running", false]], "running (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.running", false]], "running (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.running", false]], "running (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.running", false]], "running (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.running", false]], "running (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.running", false]], "running (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.running", false]], "running (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.running", false]], "running (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.running", false]], "running (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.running", false]], "running (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.running", false]], "running (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.running", false]], "running (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.running", false]], "running (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.running", false]], "running (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.running", false]], "running (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.running", false]], "running (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.running", false]], "s() (slurmmanager static method)": [[290, "sup3r.utilities.cli.SlurmManager.s", false]], "s1_hr_crop_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_hr_crop_slices", false]], "s1_hr_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_hr_slices", false]], "s1_lr_pad_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_lr_pad_slices", false]], "s1_lr_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_lr_slices", false]], "s2_hr_crop_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_hr_crop_slices", false]], "s2_hr_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_hr_slices", false]], "s2_lr_pad_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_lr_pad_slices", false]], "s2_lr_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_lr_slices", false]], "s_enhance (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.s_enhance", false]], "s_enhance (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.s_enhance", false]], "s_enhance (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.s_enhance", false]], "s_enhance (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.s_enhance", false]], "s_enhance (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.s_enhance", false]], "s_enhance (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.s_enhance", false]], "s_enhance (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.s_enhance", false]], "s_enhance (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.s_enhance", false]], "s_enhance (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.s_enhance", false]], "s_enhance (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.s_enhance", false]], "s_enhance (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.s_enhance", false]], "s_enhancements (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.s_enhancements", false]], "s_enhancements (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.s_enhancements", false]], "s_enhancements (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.s_enhancements", false]], "s_enhancements (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.s_enhancements", false]], "s_enhancements (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.s_enhancements", false]], "s_enhancements (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.s_enhancements", false]], "s_enhancements (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.s_enhancements", false]], "s_enhancements (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.s_enhancements", false]], "s_enhancements (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.s_enhancements", false]], "s_enhancements (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.s_enhancements", false]], "s_enhancements (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.s_enhancements", false]], "s_hr_crop_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s_hr_crop_slices", false]], "s_hr_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s_hr_slices", false]], "s_lr_crop_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s_lr_crop_slices", false]], "s_lr_pad_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s_lr_pad_slices", false]], "s_lr_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.s_lr_slices", false]], "safe_cast() (in module sup3r.utilities.utilities)": [[337, "sup3r.utilities.utilities.safe_cast", false]], "safe_serialize() (in module sup3r.utilities.utilities)": [[338, "sup3r.utilities.utilities.safe_serialize", false]], "sam_configs (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.SAM_configs", false]], "sample() (sup3rdataset method)": [[108, "sup3r.preprocessing.base.Sup3rDataset.sample", false]], "sample() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.sample", false]], "sample_batch() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.sample_batch", false]], "sample_batch() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.sample_batch", false]], "sample_batch() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.sample_batch", false]], "sample_batch() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.sample_batch", false]], "sample_batch() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.sample_batch", false]], "sample_batch() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.sample_batch", false]], "sample_batch() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.sample_batch", false]], "sample_batch() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.sample_batch", false]], "sample_batch() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.sample_batch", false]], "sample_batch() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.sample_batch", false]], "sample_batch() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.sample_batch", false]], "sample_batch() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.sample_batch", false]], "sample_batch() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.sample_batch", false]], "sample_batch() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.sample_batch", false]], "sample_batch() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.sample_batch", false]], "sample_batch() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.sample_batch", false]], "sample_batch() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.sample_batch", false]], "sample_batch() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.sample_batch", false]], "sample_batch() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.sample_batch", false]], "sample_batch() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.sample_batch", false]], "sample_batch() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.sample_batch", false]], "sample_batch() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.sample_batch", false]], "sample_batch() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.sample_batch", false]], "sample_batches() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.sample_batches", false]], "sample_batches() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.sample_batches", false]], "sample_batches() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.sample_batches", false]], "sample_batches() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.sample_batches", false]], "sample_batches() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.sample_batches", false]], "sample_batches() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.sample_batches", false]], "sample_batches() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.sample_batches", false]], "sample_batches() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.sample_batches", false]], "sample_batches() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.sample_batches", false]], "sample_batches() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.sample_batches", false]], "sample_batches() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.sample_batches", false]], "sample_batches() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.sample_batches", false]], "sample_batches() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.sample_batches", false]], "sample_batches() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.sample_batches", false]], "sample_batches() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.sample_batches", false]], "sample_batches() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.sample_batches", false]], "sample_batches() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.sample_batches", false]], "sample_batches() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.sample_batches", false]], "sample_batches() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.sample_batches", false]], "sample_batches() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.sample_batches", false]], "sample_batches() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.sample_batches", false]], "sample_batches() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.sample_batches", false]], "sample_batches() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.sample_batches", false]], "sample_shape (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.sample_shape", false]], "sample_shape (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.sample_shape", false]], "sample_shape (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.sample_shape", false]], "sample_shape (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.sample_shape", false]], "sample_shape (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.sample_shape", false]], "sample_shape (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.sample_shape", false]], "sampler (batchhandler attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.SAMPLER", false]], "sampler (batchhandlercc attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.SAMPLER", false]], "sampler (batchhandlerdc attribute)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.SAMPLER", false]], "sampler (batchhandlermom1 attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.SAMPLER", false]], "sampler (batchhandlermom1sf attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.SAMPLER", false]], "sampler (batchhandlermom2 attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.SAMPLER", false]], "sampler (batchhandlermom2sep attribute)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.SAMPLER", false]], "sampler (batchhandlermom2sepsf attribute)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.SAMPLER", false]], "sampler (batchhandlertestercc attribute)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.SAMPLER", false]], "sampler (batchhandlertesterdc attribute)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.SAMPLER", false]], "sampler (class in sup3r.preprocessing.samplers.base)": [[227, "sup3r.preprocessing.samplers.base.Sampler", false]], "sampler (dualbatchhandler attribute)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.SAMPLER", false]], "samplerdc (class in sup3r.preprocessing.samplers.dc)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC", false]], "samplertester (class in sup3r.utilities.pytest.helpers)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester", false]], "samplertesterdc (in module sup3r.utilities.pytest.helpers)": [[318, "sup3r.utilities.pytest.helpers.SamplerTesterDC", false]], "save() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.save", false]], "save() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.save", false]], "save() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.save", false]], "save() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.save", false]], "save() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.save", false]], "save() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.save", false]], "save() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.save", false]], "save() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.save", false]], "save_params() (abstractinterface method)": [[49, "sup3r.models.interface.AbstractInterface.save_params", false]], "save_params() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.save_params", false]], "save_params() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.save_params", false]], "save_params() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.save_params", false]], "save_params() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.save_params", false]], "save_params() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.save_params", false]], "save_params() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.save_params", false]], "save_params() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.save_params", false]], "save_params() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.save_params", false]], "save_params() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.save_params", false]], "save_params() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.save_params", false]], "save_raster_index() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.save_raster_index", false]], "save_stats() (statscollection method)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.save_stats", false]], "sbatch() (slurmmanager method)": [[290, "sup3r.utilities.cli.SlurmManager.sbatch", false]], "scalarcorrection (class in sup3r.bias.bias_calc)": [[12, "sup3r.bias.bias_calc.ScalarCorrection", false]], "scale_clearsky_ghi() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.scale_clearsky_ghi", false]], "scale_clearsky_ghi() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.scale_clearsky_ghi", false]], "scale_factor() (loaderh5 method)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5.scale_factor", false]], "scale_factors (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.scale_factors", false]], "scancel() (slurmmanager method)": [[290, "sup3r.utilities.cli.SlurmManager.scancel", false]], "scontrol() (slurmmanager static method)": [[290, "sup3r.utilities.cli.SlurmManager.scontrol", false]], "seed() (abstractinterface static method)": [[49, "sup3r.models.interface.AbstractInterface.seed", false]], "seed() (linearinterp static method)": [[51, "sup3r.models.linear.LinearInterp.seed", false]], "seed() (multistepgan static method)": [[53, "sup3r.models.multi_step.MultiStepGan.seed", false]], "seed() (multistepsurfacemetgan static method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.seed", false]], "seed() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.seed", false]], "seed() (solarmultistepgan static method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.seed", false]], "seed() (sup3rcondmom static method)": [[45, "sup3r.models.conditional.Sup3rCondMom.seed", false]], "seed() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.seed", false]], "seed() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.seed", false]], "seed() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.seed", false]], "seed() (surfacespatialmetmodel static method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.seed", false]], "set_configs() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.set_configs", false]], "set_model_params() (abstractinterface method)": [[49, "sup3r.models.interface.AbstractInterface.set_model_params", false]], "set_model_params() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.set_model_params", false]], "set_model_params() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.set_model_params", false]], "set_model_params() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.set_model_params", false]], "set_model_params() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.set_model_params", false]], "set_model_params() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.set_model_params", false]], "set_model_params() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.set_model_params", false]], "set_model_params() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.set_model_params", false]], "set_model_params() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.set_model_params", false]], "set_model_params() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.set_model_params", false]], "set_model_params() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.set_model_params", false]], "set_norm_stats() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.set_norm_stats", false]], "set_norm_stats() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.set_norm_stats", false]], "set_norm_stats() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.set_norm_stats", false]], "set_norm_stats() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.set_norm_stats", false]], "set_norm_stats() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.set_norm_stats", false]], "set_norm_stats() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.set_norm_stats", false]], "set_regular_grid() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.set_regular_grid", false]], "set_version_attr() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.set_version_attr", false]], "setdefault() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.setdefault", false]], "setdefault() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.setdefault", false]], "shape (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.shape", false]], "shape (basederiver property)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.shape", false]], "shape (baseloader property)": [[203, "sup3r.preprocessing.loaders.base.BaseLoader.shape", false]], "shape (baserasterizer property)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.shape", false]], "shape (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.shape", false]], "shape (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.shape", false]], "shape (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.shape", false]], "shape (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.shape", false]], "shape (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.shape", false]], "shape (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.shape", false]], "shape (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.shape", false]], "shape (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.shape", false]], "shape (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.shape", false]], "shape (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.shape", false]], "shape (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.shape", false]], "shape (cacher property)": [[148, "sup3r.preprocessing.cachers.base.Cacher.shape", false]], "shape (collection property)": [[152, "sup3r.preprocessing.collections.base.Collection.shape", false]], "shape (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.shape", false]], "shape (container property)": [[106, "sup3r.preprocessing.base.Container.shape", false]], "shape (dailydatahandler property)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.shape", false]], "shape (datahandler property)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.shape", false]], "shape (datahandlerh5solarcc property)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.shape", false]], "shape (datahandlerh5windcc property)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.shape", false]], "shape (datahandlerncforcc property)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.shape", false]], "shape (datahandlerncforccwithpowerlaw property)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.shape", false]], "shape (deriver property)": [[171, "sup3r.preprocessing.derivers.base.Deriver.shape", false]], "shape (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.shape", false]], "shape (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.shape", false]], "shape (dualrasterizer property)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.shape", false]], "shape (dualsampler property)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.shape", false]], "shape (dualsamplercc property)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.shape", false]], "shape (dummydata property)": [[315, "sup3r.utilities.pytest.helpers.DummyData.shape", false]], "shape (dummysampler property)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.shape", false]], "shape (loader property)": [[201, "sup3r.preprocessing.loaders.Loader.shape", false]], "shape (loaderh5 property)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5.shape", false]], "shape (loadernc property)": [[207, "sup3r.preprocessing.loaders.nc.LoaderNC.shape", false]], "shape (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.shape", false]], "shape (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.shape", false]], "shape (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.shape", false]], "shape (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.shape", false]], "shape (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.shape", false]], "shape (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.shape", false]], "shape (rasterizer property)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.shape", false]], "shape (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.shape", false]], "shape (sampler property)": [[227, "sup3r.preprocessing.samplers.base.Sampler.shape", false]], "shape (samplerdc property)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.shape", false]], "shape (samplertester property)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.shape", false]], "shape (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.shape", false]], "shape (singleexodatastep property)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.shape", false]], "shape (statscollection property)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.shape", false]], "shape (sup3rdataset property)": [[108, "sup3r.preprocessing.base.Sup3rDataset.shape", false]], "shape (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.shape", false]], "shape (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.shape", false]], "shapes (abstractbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.shapes", false]], "shapes (batchhandler property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.shapes", false]], "shapes (batchhandlercc property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.shapes", false]], "shapes (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.shapes", false]], "shapes (batchhandlermom1 property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.shapes", false]], "shapes (batchhandlermom1sf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.shapes", false]], "shapes (batchhandlermom2 property)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.shapes", false]], "shapes (batchhandlermom2sep property)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.shapes", false]], "shapes (batchhandlermom2sepsf property)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.shapes", false]], "shapes (batchhandlertestercc property)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.shapes", false]], "shapes (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.shapes", false]], "shapes (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.shapes", false]], "shapes (conditionalbatchqueue property)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.shapes", false]], "shapes (dualbatchhandler property)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.shapes", false]], "shapes (dualbatchqueue property)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.shapes", false]], "shapes (queuemom1 property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.shapes", false]], "shapes (queuemom1sf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.shapes", false]], "shapes (queuemom2 property)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.shapes", false]], "shapes (queuemom2sep property)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.shapes", false]], "shapes (queuemom2sepsf property)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.shapes", false]], "shapes (queuemom2sf property)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.shapes", false]], "shapes (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.shapes", false]], "shapes (singlebatchqueue property)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.shapes", false]], "shapes (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.shapes", false]], "singlebatchqueue (class in sup3r.preprocessing.batch_queues.base)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue", false]], "singleexodatastep (class in sup3r.preprocessing.data_handlers.exo)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep", false]], "size (sup3rdataset property)": [[108, "sup3r.preprocessing.base.Sup3rDataset.size", false]], "size (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.size", false]], "skillassessment (class in sup3r.bias.bias_calc)": [[13, "sup3r.bias.bias_calc.SkillAssessment", false]], "slurmmanager (class in sup3r.utilities.cli)": [[290, "sup3r.utilities.cli.SlurmManager", false]], "smooth_data() (in module sup3r.preprocessing.batch_queues.utilities)": [[143, "sup3r.preprocessing.batch_queues.utilities.smooth_data", false]], "smoothed_features (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.smoothed_features", false]], "smoothed_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.smoothed_features", false]], "smoothed_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.smoothed_features", false]], "smoothed_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.smoothed_features", false]], "smoothed_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.smoothed_features", false]], "smoothed_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.smoothed_features", false]], "smoothed_features (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.smoothed_features", false]], "smoothed_features (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.smoothed_features", false]], "smoothed_features (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.smoothed_features", false]], "smoothed_features (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.smoothed_features", false]], "smoothed_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.smoothed_features", false]], "smoothing (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.smoothing", false]], "smoothing (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.smoothing", false]], "smoothing (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.smoothing", false]], "smoothing (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.smoothing", false]], "smoothing (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.smoothing", false]], "smoothing (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.smoothing", false]], "smoothing (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.smoothing", false]], "smoothing (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.smoothing", false]], "smoothing (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.smoothing", false]], "smoothing (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.smoothing", false]], "smoothing (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.smoothing", false]], "solar (class in sup3r.solar.solar)": [[282, "sup3r.solar.solar.Solar", false]], "solar_zenith_angle (solar property)": [[282, "sup3r.solar.solar.Solar.solar_zenith_angle", false]], "solarcc (class in sup3r.models.solar_cc)": [[57, "sup3r.models.solar_cc.SolarCC", false]], "solarmultistepgan (class in sup3r.models.multi_step)": [[55, "sup3r.models.multi_step.SolarMultiStepGan", false]], "solarzenith (class in sup3r.preprocessing.derivers.utilities)": [[195, "sup3r.preprocessing.derivers.utilities.SolarZenith", false]], "source (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.source", false]], "source_data (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.source_data", false]], "source_data (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.source_data", false]], "source_data (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.source_data", false]], "source_data (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.source_data", false]], "source_features (sup3rqa property)": [[269, "sup3r.qa.qa.Sup3rQa.source_features", false]], "source_handler (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.source_handler", false]], "source_handler (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.source_handler", false]], "source_handler (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.source_handler", false]], "source_handler (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.source_handler", false]], "source_lat_lon (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.source_lat_lon", false]], "source_lat_lon (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.source_lat_lon", false]], "source_lat_lon (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.source_lat_lon", false]], "source_lat_lon (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.source_lat_lon", false]], "spatial_chunk_lookup (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.spatial_chunk_lookup", false]], "spatial_coarsening() (in module sup3r.utilities.utilities)": [[339, "sup3r.utilities.utilities.spatial_coarsening", false]], "spatial_simple_enhancing() (in module sup3r.preprocessing.batch_queues.utilities)": [[144, "sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing", false]], "spatial_solar_models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.spatial_solar_models", false]], "spatial_weights (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.spatial_weights", false]], "spatial_weights (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.spatial_weights", false]], "spatial_weights (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.spatial_weights", false]], "spatial_weights (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.spatial_weights", false]], "spatial_wind_models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.spatial_wind_models", false]], "spatialderivativeloss (class in sup3r.utilities.loss_metrics)": [[302, "sup3r.utilities.loss_metrics.SpatialDerivativeLoss", false]], "spatialextremesloss (class in sup3r.utilities.loss_metrics)": [[303, "sup3r.utilities.loss_metrics.SpatialExtremesLoss", false]], "spatialfftloss (class in sup3r.utilities.loss_metrics)": [[304, "sup3r.utilities.loss_metrics.SpatialFftLoss", false]], "spatiotemporalfftloss (class in sup3r.utilities.loss_metrics)": [[305, "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss", false]], "split() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.split", false]], "split() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.split", false]], "split() (modulename method)": [[287, "sup3r.utilities.ModuleName.split", false]], "splitlines() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.splitlines", false]], "splitlines() (modulename method)": [[287, "sup3r.utilities.ModuleName.splitlines", false]], "st_interp() (in module sup3r.models.utilities)": [[64, "sup3r.models.utilities.st_interp", false]], "standardize_names() (in module sup3r.preprocessing.loaders.utilities)": [[209, "sup3r.preprocessing.loaders.utilities.standardize_names", false]], "standardize_values() (in module sup3r.preprocessing.loaders.utilities)": [[210, "sup3r.preprocessing.loaders.utilities.standardize_values", false]], "start() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.start", false]], "start() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.start", false]], "start() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.start", false]], "start() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.start", false]], "start() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.start", false]], "start() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.start", false]], "start() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.start", false]], "start() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.start", false]], "start() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.start", false]], "start() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.start", false]], "start() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.start", false]], "start() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.start", false]], "start() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.start", false]], "start() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.start", false]], "start() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.start", false]], "start() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.start", false]], "start() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.start", false]], "start() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.start", false]], "start() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.start", false]], "start() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.start", false]], "start() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.start", false]], "start() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.start", false]], "start() (timer method)": [[327, "sup3r.utilities.utilities.Timer.start", false]], "start() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.start", false]], "starting_hour (solarcc attribute)": [[57, "sup3r.models.solar_cc.SolarCC.STARTING_HOUR", false]], "startswith() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.startswith", false]], "startswith() (modulename method)": [[287, "sup3r.utilities.ModuleName.startswith", false]], "statscollection (class in sup3r.preprocessing.collections.stats)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection", false]], "std() (sup3rdataset method)": [[108, "sup3r.preprocessing.base.Sup3rDataset.std", false]], "std() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.std", false]], "stdevs (abstractsinglemodel property)": [[41, "sup3r.models.abstract.AbstractSingleModel.stdevs", false]], "stdevs (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.stdevs", false]], "stdevs (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.stdevs", false]], "stdevs (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.stdevs", false]], "stdevs (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.stdevs", false]], "stdevs (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.stdevs", false]], "stdevs (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.stdevs", false]], "stdevs (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.stdevs", false]], "stdevs (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.stdevs", false]], "stop() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.stop", false]], "stop() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.stop", false]], "stop() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.stop", false]], "stop() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.stop", false]], "stop() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.stop", false]], "stop() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.stop", false]], "stop() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.stop", false]], "stop() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.stop", false]], "stop() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.stop", false]], "stop() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.stop", false]], "stop() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.stop", false]], "stop() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.stop", false]], "stop() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.stop", false]], "stop() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.stop", false]], "stop() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.stop", false]], "stop() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.stop", false]], "stop() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.stop", false]], "stop() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.stop", false]], "stop() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.stop", false]], "stop() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.stop", false]], "stop() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.stop", false]], "stop() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.stop", false]], "stop() (timer method)": [[327, "sup3r.utilities.utilities.Timer.stop", false]], "stop() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.stop", false]], "strip() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.strip", false]], "strip() (modulename method)": [[287, "sup3r.utilities.ModuleName.strip", false]], "submit() (slurmmanager static method)": [[290, "sup3r.utilities.cli.SlurmManager.submit", false]], "sup3r": [[0, "module-sup3r", false]], "sup3r command line option": [[343, "cmdoption-sup3r-c", false], [343, "cmdoption-sup3r-v", false], [343, "cmdoption-sup3r-version", false]], "sup3r-batch command line option": [[343, "cmdoption-sup3r-batch-cancel", false], [343, "cmdoption-sup3r-batch-delete", false], [343, "cmdoption-sup3r-batch-dry-run", false], [343, "cmdoption-sup3r-batch-monitor-background", false], [343, "cmdoption-sup3r-batch-v", false]], "sup3r-bias-calc command line option": [[343, "cmdoption-sup3r-bias-calc-v", false]], "sup3r-data-collect command line option": [[343, "cmdoption-sup3r-data-collect-v", false]], "sup3r-forward-pass command line option": [[343, "cmdoption-sup3r-forward-pass-v", false]], "sup3r-pipeline command line option": [[343, "cmdoption-sup3r-pipeline-background", false], [343, "cmdoption-sup3r-pipeline-cancel", false], [343, "cmdoption-sup3r-pipeline-monitor", false], [343, "cmdoption-sup3r-pipeline-v", false]], "sup3r-qa command line option": [[343, "cmdoption-sup3r-qa-v", false]], "sup3r-solar command line option": [[343, "cmdoption-sup3r-solar-v", false]], "sup3r.batch": [[1, "module-sup3r.batch", false]], "sup3r.batch.batch_cli": [[2, "module-sup3r.batch.batch_cli", false]], "sup3r.bias": [[3, "module-sup3r.bias", false]], "sup3r.bias.abstract": [[4, "module-sup3r.bias.abstract", false]], "sup3r.bias.base": [[6, "module-sup3r.bias.base", false]], "sup3r.bias.bias_calc": [[8, "module-sup3r.bias.bias_calc", false]], "sup3r.bias.bias_calc_cli": [[14, "module-sup3r.bias.bias_calc_cli", false]], "sup3r.bias.bias_calc_vortex": [[17, "module-sup3r.bias.bias_calc_vortex", false]], "sup3r.bias.bias_transforms": [[20, "module-sup3r.bias.bias_transforms", false]], "sup3r.bias.mixins": [[26, "module-sup3r.bias.mixins", false]], "sup3r.bias.presrat": [[29, "module-sup3r.bias.presrat", false]], "sup3r.bias.qdm": [[31, "module-sup3r.bias.qdm", false]], "sup3r.bias.utilities": [[33, "module-sup3r.bias.utilities", false]], "sup3r.cli": [[38, "module-sup3r.cli", false]], "sup3r.models": [[39, "module-sup3r.models", false]], "sup3r.models.abstract": [[40, "module-sup3r.models.abstract", false]], "sup3r.models.base": [[42, "module-sup3r.models.base", false]], "sup3r.models.conditional": [[44, "module-sup3r.models.conditional", false]], "sup3r.models.dc": [[46, "module-sup3r.models.dc", false]], "sup3r.models.interface": [[48, "module-sup3r.models.interface", false]], "sup3r.models.linear": [[50, "module-sup3r.models.linear", false]], "sup3r.models.multi_step": [[52, "module-sup3r.models.multi_step", false]], "sup3r.models.solar_cc": [[56, "module-sup3r.models.solar_cc", false]], "sup3r.models.surface": [[58, "module-sup3r.models.surface", false]], "sup3r.models.utilities": [[60, "module-sup3r.models.utilities", false]], "sup3r.models.with_obs": [[65, "module-sup3r.models.with_obs", false]], "sup3r.pipeline": [[67, "module-sup3r.pipeline", false]], "sup3r.pipeline.forward_pass": [[68, "module-sup3r.pipeline.forward_pass", false]], "sup3r.pipeline.forward_pass_cli": [[70, "module-sup3r.pipeline.forward_pass_cli", false]], "sup3r.pipeline.pipeline_cli": [[73, "module-sup3r.pipeline.pipeline_cli", false]], "sup3r.pipeline.slicer": [[74, "module-sup3r.pipeline.slicer", false]], "sup3r.pipeline.strategy": [[76, "module-sup3r.pipeline.strategy", false]], "sup3r.pipeline.utilities": [[79, "module-sup3r.pipeline.utilities", false]], "sup3r.postprocessing": [[82, "module-sup3r.postprocessing", false]], "sup3r.postprocessing.collectors": [[83, "module-sup3r.postprocessing.collectors", false]], "sup3r.postprocessing.collectors.base": [[84, "module-sup3r.postprocessing.collectors.base", false]], "sup3r.postprocessing.collectors.h5": [[86, "module-sup3r.postprocessing.collectors.h5", false]], "sup3r.postprocessing.collectors.nc": [[88, "module-sup3r.postprocessing.collectors.nc", false]], "sup3r.postprocessing.data_collect_cli": [[90, "module-sup3r.postprocessing.data_collect_cli", false]], "sup3r.postprocessing.writers": [[93, "module-sup3r.postprocessing.writers", false]], "sup3r.postprocessing.writers.base": [[94, "module-sup3r.postprocessing.writers.base", false]], "sup3r.postprocessing.writers.h5": [[98, "module-sup3r.postprocessing.writers.h5", false]], "sup3r.postprocessing.writers.nc": [[100, "module-sup3r.postprocessing.writers.nc", false]], "sup3r.preprocessing": [[102, "module-sup3r.preprocessing", false]], "sup3r.preprocessing.accessor": [[103, "module-sup3r.preprocessing.accessor", false]], "sup3r.preprocessing.base": [[105, "module-sup3r.preprocessing.base", false]], "sup3r.preprocessing.batch_handlers": [[110, "module-sup3r.preprocessing.batch_handlers", false]], "sup3r.preprocessing.batch_handlers.dc": [[111, "module-sup3r.preprocessing.batch_handlers.dc", false]], "sup3r.preprocessing.batch_handlers.factory": [[113, "module-sup3r.preprocessing.batch_handlers.factory", false]], "sup3r.preprocessing.batch_queues": [[124, "module-sup3r.preprocessing.batch_queues", false]], "sup3r.preprocessing.batch_queues.abstract": [[125, "module-sup3r.preprocessing.batch_queues.abstract", false]], "sup3r.preprocessing.batch_queues.base": [[127, "module-sup3r.preprocessing.batch_queues.base", false]], "sup3r.preprocessing.batch_queues.conditional": [[129, "module-sup3r.preprocessing.batch_queues.conditional", false]], "sup3r.preprocessing.batch_queues.dc": [[137, "module-sup3r.preprocessing.batch_queues.dc", false]], "sup3r.preprocessing.batch_queues.dual": [[140, "module-sup3r.preprocessing.batch_queues.dual", false]], "sup3r.preprocessing.batch_queues.utilities": [[142, "module-sup3r.preprocessing.batch_queues.utilities", false]], "sup3r.preprocessing.cachers": [[146, "module-sup3r.preprocessing.cachers", false]], "sup3r.preprocessing.cachers.base": [[147, "module-sup3r.preprocessing.cachers.base", false]], "sup3r.preprocessing.cachers.utilities": [[149, "module-sup3r.preprocessing.cachers.utilities", false]], "sup3r.preprocessing.collections": [[150, "module-sup3r.preprocessing.collections", false]], "sup3r.preprocessing.collections.base": [[151, "module-sup3r.preprocessing.collections.base", false]], "sup3r.preprocessing.collections.stats": [[153, "module-sup3r.preprocessing.collections.stats", false]], "sup3r.preprocessing.data_handlers": [[155, "module-sup3r.preprocessing.data_handlers", false]], "sup3r.preprocessing.data_handlers.base": [[156, "module-sup3r.preprocessing.data_handlers.base", false]], "sup3r.preprocessing.data_handlers.exo": [[161, "module-sup3r.preprocessing.data_handlers.exo", false]], "sup3r.preprocessing.data_handlers.nc_cc": [[165, "module-sup3r.preprocessing.data_handlers.nc_cc", false]], "sup3r.preprocessing.derivers": [[168, "module-sup3r.preprocessing.derivers", false]], "sup3r.preprocessing.derivers.base": [[169, "module-sup3r.preprocessing.derivers.base", false]], "sup3r.preprocessing.derivers.methods": [[172, "module-sup3r.preprocessing.derivers.methods", false]], "sup3r.preprocessing.derivers.utilities": [[194, "module-sup3r.preprocessing.derivers.utilities", false]], "sup3r.preprocessing.loaders": [[200, "module-sup3r.preprocessing.loaders", false]], "sup3r.preprocessing.loaders.base": [[202, "module-sup3r.preprocessing.loaders.base", false]], "sup3r.preprocessing.loaders.h5": [[204, "module-sup3r.preprocessing.loaders.h5", false]], "sup3r.preprocessing.loaders.nc": [[206, "module-sup3r.preprocessing.loaders.nc", false]], "sup3r.preprocessing.loaders.utilities": [[208, "module-sup3r.preprocessing.loaders.utilities", false]], "sup3r.preprocessing.names": [[211, "module-sup3r.preprocessing.names", false]], "sup3r.preprocessing.rasterizers": [[213, "module-sup3r.preprocessing.rasterizers", false]], "sup3r.preprocessing.rasterizers.base": [[214, "module-sup3r.preprocessing.rasterizers.base", false]], "sup3r.preprocessing.rasterizers.dual": [[216, "module-sup3r.preprocessing.rasterizers.dual", false]], "sup3r.preprocessing.rasterizers.exo": [[218, "module-sup3r.preprocessing.rasterizers.exo", false]], "sup3r.preprocessing.rasterizers.extended": [[223, "module-sup3r.preprocessing.rasterizers.extended", false]], "sup3r.preprocessing.samplers": [[225, "module-sup3r.preprocessing.samplers", false]], "sup3r.preprocessing.samplers.base": [[226, "module-sup3r.preprocessing.samplers.base", false]], "sup3r.preprocessing.samplers.cc": [[228, "module-sup3r.preprocessing.samplers.cc", false]], "sup3r.preprocessing.samplers.dc": [[230, "module-sup3r.preprocessing.samplers.dc", false]], "sup3r.preprocessing.samplers.dual": [[232, "module-sup3r.preprocessing.samplers.dual", false]], "sup3r.preprocessing.samplers.utilities": [[234, "module-sup3r.preprocessing.samplers.utilities", false]], "sup3r.preprocessing.utilities": [[242, "module-sup3r.preprocessing.utilities", false]], "sup3r.qa": [[267, "module-sup3r.qa", false]], "sup3r.qa.qa": [[268, "module-sup3r.qa.qa", false]], "sup3r.qa.qa_cli": [[270, "module-sup3r.qa.qa_cli", false]], "sup3r.qa.utilities": [[271, "module-sup3r.qa.utilities", false]], "sup3r.solar": [[280, "module-sup3r.solar", false]], "sup3r.solar.solar": [[281, "module-sup3r.solar.solar", false]], "sup3r.solar.solar_cli": [[283, "module-sup3r.solar.solar_cli", false]], "sup3r.utilities": [[286, "module-sup3r.utilities", false]], "sup3r.utilities.cli": [[288, "module-sup3r.utilities.cli", false]], "sup3r.utilities.era_downloader": [[291, "module-sup3r.utilities.era_downloader", false]], "sup3r.utilities.interpolation": [[293, "module-sup3r.utilities.interpolation", false]], "sup3r.utilities.loss_metrics": [[295, "module-sup3r.utilities.loss_metrics", false]], "sup3r.utilities.pytest": [[309, "module-sup3r.utilities.pytest", false]], "sup3r.utilities.pytest.helpers": [[310, "module-sup3r.utilities.pytest.helpers", false]], "sup3r.utilities.utilities": [[326, "module-sup3r.utilities.utilities", false]], "sup3rcondmom (class in sup3r.models.conditional)": [[45, "sup3r.models.conditional.Sup3rCondMom", false]], "sup3rdataset (class in sup3r.preprocessing.base)": [[108, "sup3r.preprocessing.base.Sup3rDataset", false]], "sup3rgan (class in sup3r.models.base)": [[43, "sup3r.models.base.Sup3rGan", false]], "sup3rgandc (class in sup3r.models.dc)": [[47, "sup3r.models.dc.Sup3rGanDC", false]], "sup3rganwithobs (class in sup3r.models.with_obs)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs", false]], "sup3rmeta (class in sup3r.preprocessing.base)": [[109, "sup3r.preprocessing.base.Sup3rMeta", false]], "sup3rqa (class in sup3r.qa.qa)": [[269, "sup3r.qa.qa.Sup3rQa", false]], "sup3rx (class in sup3r.preprocessing.accessor)": [[104, "sup3r.preprocessing.accessor.Sup3rX", false]], "surface_file (eradownloader property)": [[292, "sup3r.utilities.era_downloader.EraDownloader.surface_file", false]], "surfacerh (class in sup3r.preprocessing.derivers.methods)": [[180, "sup3r.preprocessing.derivers.methods.SurfaceRH", false]], "surfacespatialmetmodel (class in sup3r.models.surface)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel", false]], "swapcase() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.swapcase", false]], "swapcase() (modulename method)": [[287, "sup3r.utilities.ModuleName.swapcase", false]], "sza (class in sup3r.preprocessing.derivers.methods)": [[181, "sup3r.preprocessing.derivers.methods.Sza", false]], "szarasterizer (class in sup3r.preprocessing.rasterizers.exo)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer", false]], "t_enhance (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.t_enhance", false]], "t_enhance (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.t_enhance", false]], "t_enhance (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.t_enhance", false]], "t_enhance (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.t_enhance", false]], "t_enhance (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.t_enhance", false]], "t_enhance (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.t_enhance", false]], "t_enhance (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.t_enhance", false]], "t_enhance (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.t_enhance", false]], "t_enhance (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.t_enhance", false]], "t_enhance (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.t_enhance", false]], "t_enhance (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.t_enhance", false]], "t_enhancements (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.t_enhancements", false]], "t_enhancements (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.t_enhancements", false]], "t_enhancements (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.t_enhancements", false]], "t_enhancements (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.t_enhancements", false]], "t_enhancements (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.t_enhancements", false]], "t_enhancements (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.t_enhancements", false]], "t_enhancements (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.t_enhancements", false]], "t_enhancements (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.t_enhancements", false]], "t_enhancements (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.t_enhancements", false]], "t_enhancements (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.t_enhancements", false]], "t_enhancements (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.t_enhancements", false]], "t_hr_crop_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.t_hr_crop_slices", false]], "t_lr_crop_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.t_lr_crop_slices", false]], "t_lr_pad_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.t_lr_pad_slices", false]], "t_lr_slices (forwardpassslicer property)": [[75, "sup3r.pipeline.slicer.ForwardPassSlicer.t_lr_slices", false]], "target (baserasterizer property)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.target", false]], "target (rasterizer property)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.target", false]], "target (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.target", false]], "tas (class in sup3r.preprocessing.derivers.methods)": [[182, "sup3r.preprocessing.derivers.methods.Tas", false]], "tasmax (class in sup3r.preprocessing.derivers.methods)": [[183, "sup3r.preprocessing.derivers.methods.TasMax", false]], "tasmin (class in sup3r.preprocessing.derivers.methods)": [[184, "sup3r.preprocessing.derivers.methods.TasMin", false]], "temp_lapse (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.TEMP_LAPSE", false]], "tempncforcc (class in sup3r.preprocessing.derivers.methods)": [[185, "sup3r.preprocessing.derivers.methods.TempNCforCC", false]], "temporal_coarsening() (in module sup3r.utilities.utilities)": [[340, "sup3r.utilities.utilities.temporal_coarsening", false]], "temporal_pad() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.temporal_pad", false]], "temporal_pad() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.temporal_pad", false]], "temporal_simple_enhancing() (in module sup3r.preprocessing.batch_queues.utilities)": [[145, "sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing", false]], "temporal_solar_models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.temporal_solar_models", false]], "temporal_weights (batchhandlerdc property)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.temporal_weights", false]], "temporal_weights (batchhandlertesterdc property)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.temporal_weights", false]], "temporal_weights (batchqueuedc property)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.temporal_weights", false]], "temporal_weights (valbatchqueuedc property)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.temporal_weights", false]], "temporalderivativeloss (class in sup3r.utilities.loss_metrics)": [[306, "sup3r.utilities.loss_metrics.TemporalDerivativeLoss", false]], "temporalextremesloss (class in sup3r.utilities.loss_metrics)": [[307, "sup3r.utilities.loss_metrics.TemporalExtremesLoss", false]], "tensorboardmixin (class in sup3r.models.utilities)": [[61, "sup3r.models.utilities.TensorboardMixIn", false]], "test_sampler_factory() (in module sup3r.utilities.pytest.helpers)": [[325, "sup3r.utilities.pytest.helpers.test_sampler_factory", false]], "time_derivative_dist() (in module sup3r.qa.utilities)": [[276, "sup3r.qa.utilities.time_derivative_dist", false]], "time_independent (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.time_independent", false]], "time_index (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.time_index", false]], "time_index (solar property)": [[282, "sup3r.solar.solar.Solar.time_index", false]], "time_index (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.time_index", false]], "time_index (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.time_index", false]], "time_slice (baserasterizer property)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.time_slice", false]], "time_slice (rasterizer property)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.time_slice", false]], "time_step (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.time_step", false]], "timer (class in sup3r.utilities.utilities)": [[327, "sup3r.utilities.utilities.Timer", false]], "title() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.title", false]], "title() (modulename method)": [[287, "sup3r.utilities.ModuleName.title", false]], "tke_frequency_spectrum() (in module sup3r.qa.utilities)": [[277, "sup3r.qa.utilities.tke_frequency_spectrum", false]], "tke_wavenumber_spectrum() (in module sup3r.qa.utilities)": [[278, "sup3r.qa.utilities.tke_wavenumber_spectrum", false]], "to_dataarray() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.to_dataarray", false]], "total_batches (abstractsinglemodel property)": [[41, "sup3r.models.abstract.AbstractSingleModel.total_batches", false]], "total_batches (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.total_batches", false]], "total_batches (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.total_batches", false]], "total_batches (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.total_batches", false]], "total_batches (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.total_batches", false]], "total_batches (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.total_batches", false]], "total_batches (tensorboardmixin property)": [[61, "sup3r.models.utilities.TensorboardMixIn.total_batches", false]], "train() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.train", false]], "train() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.train", false]], "train() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.train", false]], "train() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.train", false]], "train() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.train", false]], "train() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.train", false]], "train_queue (batchhandler attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.TRAIN_QUEUE", false]], "train_queue (batchhandlercc attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.TRAIN_QUEUE", false]], "train_queue (batchhandlerdc attribute)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.TRAIN_QUEUE", false]], "train_queue (batchhandlermom1 attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.TRAIN_QUEUE", false]], "train_queue (batchhandlermom1sf attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.TRAIN_QUEUE", false]], "train_queue (batchhandlermom2 attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.TRAIN_QUEUE", false]], "train_queue (batchhandlermom2sep attribute)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.TRAIN_QUEUE", false]], "train_queue (batchhandlermom2sepsf attribute)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.TRAIN_QUEUE", false]], "train_queue (batchhandlertestercc attribute)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.TRAIN_QUEUE", false]], "train_queue (batchhandlertesterdc attribute)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.TRAIN_QUEUE", false]], "train_queue (dualbatchhandler attribute)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.TRAIN_QUEUE", false]], "trainingsession (class in sup3r.models.utilities)": [[62, "sup3r.models.utilities.TrainingSession", false]], "transform() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.transform", false]], "transform() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.transform", false]], "transform() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.transform", false]], "transform() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.transform", false]], "transform() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.transform", false]], "transform() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.transform", false]], "transform() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.transform", false]], "transform() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.transform", false]], "transform() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.transform", false]], "transform() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.transform", false]], "transform() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.transform", false]], "transform() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.transform", false]], "transform() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.transform", false]], "transform() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.transform", false]], "transform() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.transform", false]], "transform() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.transform", false]], "transform() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.transform", false]], "transform() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.transform", false]], "transform() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.transform", false]], "transform() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.transform", false]], "transform() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.transform", false]], "transform() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.transform", false]], "transform() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.transform", false]], "transform_rotate_wind() (in module sup3r.preprocessing.derivers.utilities)": [[198, "sup3r.preprocessing.derivers.utilities.transform_rotate_wind", false]], "translate() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.translate", false]], "translate() (modulename method)": [[287, "sup3r.utilities.ModuleName.translate", false]], "tree (baseexorasterizer property)": [[219, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.tree", false]], "tree (exorasterizer property)": [[220, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.tree", false]], "tree (obsrasterizer property)": [[221, "sup3r.preprocessing.rasterizers.exo.ObsRasterizer.tree", false]], "tree (szarasterizer property)": [[222, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.tree", false]], "un_norm_output() (abstractsinglemodel method)": [[41, "sup3r.models.abstract.AbstractSingleModel.un_norm_output", false]], "un_norm_output() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.un_norm_output", false]], "un_norm_output() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.un_norm_output", false]], "un_norm_output() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.un_norm_output", false]], "un_norm_output() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.un_norm_output", false]], "un_norm_output() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.un_norm_output", false]], "unflatten() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.unflatten", false]], "uniform_box_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[238, "sup3r.preprocessing.samplers.utilities.uniform_box_sampler", false]], "uniform_time_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[239, "sup3r.preprocessing.samplers.utilities.uniform_time_sampler", false]], "units (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.units", false]], "unmasked_chunks (forwardpassstrategy property)": [[78, "sup3r.pipeline.strategy.ForwardPassStrategy.unmasked_chunks", false]], "update() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.update", false]], "update() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.update", false]], "update_adversarial_weights() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.update_adversarial_weights", false]], "update_adversarial_weights() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.update_adversarial_weights", false]], "update_adversarial_weights() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.update_adversarial_weights", false]], "update_adversarial_weights() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.update_adversarial_weights", false]], "update_ds() (sup3rx method)": [[104, "sup3r.preprocessing.accessor.Sup3rX.update_ds", false]], "update_dset() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.update_dset", false]], "update_file() (biascorrectupdate class method)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.update_file", false]], "update_hr_data() (dualrasterizer method)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.update_hr_data", false]], "update_loss_details() (abstractsinglemodel static method)": [[41, "sup3r.models.abstract.AbstractSingleModel.update_loss_details", false]], "update_loss_details() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.update_loss_details", false]], "update_loss_details() (sup3rcondmom static method)": [[45, "sup3r.models.conditional.Sup3rCondMom.update_loss_details", false]], "update_loss_details() (sup3rgan static method)": [[43, "sup3r.models.base.Sup3rGan.update_loss_details", false]], "update_loss_details() (sup3rgandc static method)": [[47, "sup3r.models.dc.Sup3rGanDC.update_loss_details", false]], "update_loss_details() (sup3rganwithobs static method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.update_loss_details", false]], "update_lr_data() (dualrasterizer method)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.update_lr_data", false]], "update_optimizer() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.update_optimizer", false]], "update_optimizer() (sup3rcondmom method)": [[45, "sup3r.models.conditional.Sup3rCondMom.update_optimizer", false]], "update_optimizer() (sup3rgan method)": [[43, "sup3r.models.base.Sup3rGan.update_optimizer", false]], "update_optimizer() (sup3rgandc method)": [[47, "sup3r.models.dc.Sup3rGanDC.update_optimizer", false]], "update_optimizer() (sup3rganwithobs method)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.update_optimizer", false]], "update_record() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.update_record", false]], "update_weights() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.update_weights", false]], "update_weights() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.update_weights", false]], "update_weights() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.update_weights", false]], "update_weights() (samplerdc method)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.update_weights", false]], "update_weights() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.update_weights", false]], "upper() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.upper", false]], "upper() (modulename method)": [[287, "sup3r.utilities.ModuleName.upper", false]], "usolar (class in sup3r.preprocessing.derivers.methods)": [[186, "sup3r.preprocessing.derivers.methods.USolar", false]], "uwind (class in sup3r.preprocessing.derivers.methods)": [[187, "sup3r.preprocessing.derivers.methods.UWind", false]], "uwindpowerlaw (class in sup3r.preprocessing.derivers.methods)": [[188, "sup3r.preprocessing.derivers.methods.UWindPowerLaw", false]], "val_queue (batchhandler attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.VAL_QUEUE", false]], "val_queue (batchhandlercc attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.VAL_QUEUE", false]], "val_queue (batchhandlerdc attribute)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.VAL_QUEUE", false]], "val_queue (batchhandlermom1 attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.VAL_QUEUE", false]], "val_queue (batchhandlermom1sf attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.VAL_QUEUE", false]], "val_queue (batchhandlermom2 attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.VAL_QUEUE", false]], "val_queue (batchhandlermom2sep attribute)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.VAL_QUEUE", false]], "val_queue (batchhandlermom2sepsf attribute)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.VAL_QUEUE", false]], "val_queue (batchhandlertestercc attribute)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.VAL_QUEUE", false]], "val_queue (batchhandlertesterdc attribute)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.VAL_QUEUE", false]], "val_queue (dualbatchhandler attribute)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.VAL_QUEUE", false]], "valbatchqueuedc (class in sup3r.preprocessing.batch_queues.dc)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC", false]], "values (sup3rx property)": [[104, "sup3r.preprocessing.accessor.Sup3rX.values", false]], "values() (exodata method)": [[162, "sup3r.preprocessing.data_handlers.exo.ExoData.values", false]], "values() (singleexodatastep method)": [[164, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.values", false]], "variables (eradownloader property)": [[292, "sup3r.utilities.era_downloader.EraDownloader.variables", false]], "version (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.version", false]], "version_record (abstractinterface property)": [[49, "sup3r.models.interface.AbstractInterface.version_record", false]], "version_record (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.version_record", false]], "version_record (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.version_record", false]], "version_record (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.version_record", false]], "version_record (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.version_record", false]], "version_record (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.version_record", false]], "version_record (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.version_record", false]], "version_record (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.version_record", false]], "version_record (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.version_record", false]], "version_record (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.version_record", false]], "version_record (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.version_record", false]], "vortexmeanprepper (class in sup3r.bias.bias_calc_vortex)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper", false]], "vsolar (class in sup3r.preprocessing.derivers.methods)": [[189, "sup3r.preprocessing.derivers.methods.VSolar", false]], "vwind (class in sup3r.preprocessing.derivers.methods)": [[190, "sup3r.preprocessing.derivers.methods.VWind", false]], "vwindpowerlaw (class in sup3r.preprocessing.derivers.methods)": [[191, "sup3r.preprocessing.derivers.methods.VWindPowerLaw", false]], "w_delta_temp (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.W_DELTA_TEMP", false]], "w_delta_topo (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.W_DELTA_TOPO", false]], "wavenumber_spectrum() (in module sup3r.qa.utilities)": [[279, "sup3r.qa.utilities.wavenumber_spectrum", false]], "weighted_box_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[240, "sup3r.preprocessing.samplers.utilities.weighted_box_sampler", false]], "weighted_time_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[241, "sup3r.preprocessing.samplers.utilities.weighted_time_sampler", false]], "weights (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.weights", false]], "weights (sup3rcondmom property)": [[45, "sup3r.models.conditional.Sup3rCondMom.weights", false]], "weights (sup3rgan property)": [[43, "sup3r.models.base.Sup3rGan.weights", false]], "weights (sup3rgandc property)": [[47, "sup3r.models.dc.Sup3rGanDC.weights", false]], "weights (sup3rganwithobs property)": [[66, "sup3r.models.with_obs.Sup3rGanWithObs.weights", false]], "winddirection (class in sup3r.preprocessing.derivers.methods)": [[192, "sup3r.preprocessing.derivers.methods.Winddirection", false]], "window_mask() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.window_mask", false]], "window_mask() (quantiledeltamappingcorrection static method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.window_mask", false]], "windspeed (class in sup3r.preprocessing.derivers.methods)": [[193, "sup3r.preprocessing.derivers.methods.Windspeed", false]], "windspeed_log_law() (in module sup3r.preprocessing.derivers.utilities)": [[199, "sup3r.preprocessing.derivers.utilities.windspeed_log_law", false]], "wrap() (abstractbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.wrap", false]], "wrap() (basederiver method)": [[170, "sup3r.preprocessing.derivers.base.BaseDeriver.wrap", false]], "wrap() (baseloader method)": [[203, "sup3r.preprocessing.loaders.base.BaseLoader.wrap", false]], "wrap() (baserasterizer method)": [[215, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.wrap", false]], "wrap() (batchhandler method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.wrap", false]], "wrap() (batchhandlercc method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.wrap", false]], "wrap() (batchhandlerdc method)": [[112, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.wrap", false]], "wrap() (batchhandlermom1 method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.wrap", false]], "wrap() (batchhandlermom1sf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.wrap", false]], "wrap() (batchhandlermom2 method)": [[119, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.wrap", false]], "wrap() (batchhandlermom2sep method)": [[121, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.wrap", false]], "wrap() (batchhandlermom2sepsf method)": [[122, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.wrap", false]], "wrap() (batchhandlertestercc method)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.wrap", false]], "wrap() (batchhandlertesterdc method)": [[312, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.wrap", false]], "wrap() (batchqueuedc method)": [[138, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.wrap", false]], "wrap() (cacher method)": [[148, "sup3r.preprocessing.cachers.base.Cacher.wrap", false]], "wrap() (collection method)": [[152, "sup3r.preprocessing.collections.base.Collection.wrap", false]], "wrap() (conditionalbatchqueue method)": [[130, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.wrap", false]], "wrap() (container method)": [[106, "sup3r.preprocessing.base.Container.wrap", false]], "wrap() (dailydatahandler method)": [[157, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.wrap", false]], "wrap() (datahandler method)": [[158, "sup3r.preprocessing.data_handlers.base.DataHandler.wrap", false]], "wrap() (datahandlerh5solarcc method)": [[159, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.wrap", false]], "wrap() (datahandlerh5windcc method)": [[160, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.wrap", false]], "wrap() (datahandlerncforcc method)": [[166, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.wrap", false]], "wrap() (datahandlerncforccwithpowerlaw method)": [[167, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.wrap", false]], "wrap() (deriver method)": [[171, "sup3r.preprocessing.derivers.base.Deriver.wrap", false]], "wrap() (dualbatchhandler method)": [[123, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.wrap", false]], "wrap() (dualbatchqueue method)": [[141, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.wrap", false]], "wrap() (dualrasterizer method)": [[217, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.wrap", false]], "wrap() (dualsampler method)": [[233, "sup3r.preprocessing.samplers.dual.DualSampler.wrap", false]], "wrap() (dualsamplercc method)": [[229, "sup3r.preprocessing.samplers.cc.DualSamplerCC.wrap", false]], "wrap() (dummydata method)": [[315, "sup3r.utilities.pytest.helpers.DummyData.wrap", false]], "wrap() (dummysampler method)": [[316, "sup3r.utilities.pytest.helpers.DummySampler.wrap", false]], "wrap() (loader method)": [[201, "sup3r.preprocessing.loaders.Loader.wrap", false]], "wrap() (loaderh5 method)": [[205, "sup3r.preprocessing.loaders.h5.LoaderH5.wrap", false]], "wrap() (loadernc method)": [[207, "sup3r.preprocessing.loaders.nc.LoaderNC.wrap", false]], "wrap() (queuemom1 method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.wrap", false]], "wrap() (queuemom1sf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.wrap", false]], "wrap() (queuemom2 method)": [[133, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.wrap", false]], "wrap() (queuemom2sep method)": [[135, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.wrap", false]], "wrap() (queuemom2sepsf method)": [[136, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.wrap", false]], "wrap() (queuemom2sf method)": [[134, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.wrap", false]], "wrap() (rasterizer method)": [[224, "sup3r.preprocessing.rasterizers.extended.Rasterizer.wrap", false]], "wrap() (sampler method)": [[227, "sup3r.preprocessing.samplers.base.Sampler.wrap", false]], "wrap() (samplerdc method)": [[231, "sup3r.preprocessing.samplers.dc.SamplerDC.wrap", false]], "wrap() (samplertester method)": [[317, "sup3r.utilities.pytest.helpers.SamplerTester.wrap", false]], "wrap() (singlebatchqueue method)": [[128, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.wrap", false]], "wrap() (statscollection method)": [[154, "sup3r.preprocessing.collections.stats.StatsCollection.wrap", false]], "wrap() (valbatchqueuedc method)": [[139, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.wrap", false]], "writable (rexoutputs property)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.writable", false]], "write() (solar method)": [[282, "sup3r.solar.solar.Solar.write", false]], "write_data() (basecollector class method)": [[85, "sup3r.postprocessing.collectors.base.BaseCollector.write_data", false]], "write_data() (collectorh5 class method)": [[87, "sup3r.postprocessing.collectors.h5.CollectorH5.write_data", false]], "write_data() (collectornc class method)": [[89, "sup3r.postprocessing.collectors.nc.CollectorNC.write_data", false]], "write_data() (outputhandler class method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.write_data", false]], "write_data() (outputhandlerh5 class method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.write_data", false]], "write_data() (outputhandlernc class method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.write_data", false]], "write_data() (outputmixin class method)": [[96, "sup3r.postprocessing.writers.base.OutputMixin.write_data", false]], "write_data() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.write_data", false]], "write_dataset() (rexoutputs method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.write_dataset", false]], "write_h5() (cacher class method)": [[148, "sup3r.preprocessing.cachers.base.Cacher.write_h5", false]], "write_means() (rexoutputs class method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.write_means", false]], "write_netcdf() (cacher class method)": [[148, "sup3r.preprocessing.cachers.base.Cacher.write_netcdf", false]], "write_output() (outputhandler class method)": [[95, "sup3r.postprocessing.writers.base.OutputHandler.write_output", false]], "write_output() (outputhandlerh5 class method)": [[99, "sup3r.postprocessing.writers.h5.OutputHandlerH5.write_output", false]], "write_output() (outputhandlernc class method)": [[101, "sup3r.postprocessing.writers.nc.OutputHandlerNC.write_output", false]], "write_outputs() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.write_outputs", false]], "write_outputs() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.write_outputs", false]], "write_outputs() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.write_outputs", false]], "write_outputs() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.write_outputs", false]], "write_outputs() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.write_outputs", false]], "write_outputs() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.write_outputs", false]], "write_outputs() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.write_outputs", false]], "write_profiles() (rexoutputs class method)": [[97, "sup3r.postprocessing.writers.base.RexOutputs.write_profiles", false]], "xr_open_mfdataset() (in module sup3r.utilities.utilities)": [[341, "sup3r.utilities.utilities.xr_open_mfdataset", false]], "zero_precipitation_rate() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.zero_precipitation_rate", false]], "zero_precipitation_rate() (zeroratemixin static method)": [[28, "sup3r.bias.mixins.ZeroRateMixin.zero_precipitation_rate", false]], "zeroratemixin (class in sup3r.bias.mixins)": [[28, "sup3r.bias.mixins.ZeroRateMixin", false]], "zfill() (dimension method)": [[212, "sup3r.preprocessing.names.Dimension.zfill", false]], "zfill() (modulename method)": [[287, "sup3r.utilities.ModuleName.zfill", false]]}, "objects": {"": [[0, 0, 0, "-", "sup3r"]], "sup3r": [[1, 0, 0, "-", "batch"], [3, 0, 0, "-", "bias"], [38, 0, 0, "-", "cli"], [39, 0, 0, "-", "models"], [67, 0, 0, "-", "pipeline"], [82, 0, 0, "-", "postprocessing"], [102, 0, 0, "-", "preprocessing"], [267, 0, 0, "-", "qa"], [280, 0, 0, "-", "solar"], [286, 0, 0, "-", "utilities"], [343, 6, 1, "cmdoption-sup3r-c", "--config_file"], [343, 6, 1, "cmdoption-sup3r-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-version", "--version"], [343, 6, 1, "cmdoption-sup3r-c", "-c"], [343, 6, 1, "cmdoption-sup3r-v", "-v"]], "sup3r-batch": [[343, 6, 1, "cmdoption-sup3r-batch-cancel", "--cancel"], [343, 6, 1, "cmdoption-sup3r-batch-delete", "--delete"], [343, 6, 1, "cmdoption-sup3r-batch-dry-run", "--dry-run"], [343, 6, 1, "cmdoption-sup3r-batch-monitor-background", "--monitor-background"], [343, 6, 1, "cmdoption-sup3r-batch-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-batch-v", "-v"]], "sup3r-bias-calc": [[343, 6, 1, "cmdoption-sup3r-bias-calc-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-bias-calc-v", "-v"]], "sup3r-data-collect": [[343, 6, 1, "cmdoption-sup3r-data-collect-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-data-collect-v", "-v"]], "sup3r-forward-pass": [[343, 6, 1, "cmdoption-sup3r-forward-pass-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-forward-pass-v", "-v"]], "sup3r-pipeline": [[343, 6, 1, "cmdoption-sup3r-pipeline-background", "--background"], [343, 6, 1, "cmdoption-sup3r-pipeline-cancel", "--cancel"], [343, 6, 1, "cmdoption-sup3r-pipeline-monitor", "--monitor"], [343, 6, 1, "cmdoption-sup3r-pipeline-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-pipeline-v", "-v"]], "sup3r-qa": [[343, 6, 1, "cmdoption-sup3r-qa-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-qa-v", "-v"]], "sup3r-solar": [[343, 6, 1, "cmdoption-sup3r-solar-v", "--verbose"], [343, 6, 1, "cmdoption-sup3r-solar-v", "-v"]], "sup3r.batch": [[2, 0, 0, "-", "batch_cli"]], "sup3r.bias": [[4, 0, 0, "-", "abstract"], [6, 0, 0, "-", "base"], [8, 0, 0, "-", "bias_calc"], [14, 0, 0, "-", "bias_calc_cli"], [17, 0, 0, "-", "bias_calc_vortex"], [20, 0, 0, "-", "bias_transforms"], [26, 0, 0, "-", "mixins"], [29, 0, 0, "-", "presrat"], [31, 0, 0, "-", "qdm"], [33, 0, 0, "-", "utilities"]], "sup3r.bias.abstract": [[5, 1, 1, "", "AbstractBiasCorrection"]], "sup3r.bias.abstract.AbstractBiasCorrection": [[5, 2, 1, "", "run"]], "sup3r.bias.base": [[7, 1, 1, "", "DataRetrievalBase"]], "sup3r.bias.base.DataRetrievalBase": [[7, 2, 1, "", "compare_dists"], [7, 3, 1, "", "distance_upper_bound"], [7, 2, 1, "", "get_base_data"], [7, 2, 1, "", "get_base_gid"], [7, 2, 1, "", "get_bias_data"], [7, 2, 1, "", "get_bias_gid"], [7, 2, 1, "", "get_data_pair"], [7, 2, 1, "", "get_node_cmd"], [7, 3, 1, "", "meta"], [7, 2, 1, "", "pre_load"]], "sup3r.bias.bias_calc": [[9, 1, 1, "", "LinearCorrection"], [10, 1, 1, "", "MonthlyLinearCorrection"], [11, 1, 1, "", "MonthlyScalarCorrection"], [12, 1, 1, "", "ScalarCorrection"], [13, 1, 1, "", "SkillAssessment"]], "sup3r.bias.bias_calc.LinearCorrection": [[9, 4, 1, "", "NT"], [9, 2, 1, "", "compare_dists"], [9, 3, 1, "", "distance_upper_bound"], [9, 2, 1, "", "fill_and_smooth"], [9, 2, 1, "", "get_base_data"], [9, 2, 1, "", "get_base_gid"], [9, 2, 1, "", "get_bias_data"], [9, 2, 1, "", "get_bias_gid"], [9, 2, 1, "", "get_data_pair"], [9, 2, 1, "", "get_linear_correction"], [9, 2, 1, "", "get_node_cmd"], [9, 3, 1, "", "meta"], [9, 2, 1, "", "pre_load"], [9, 2, 1, "", "run"], [9, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.MonthlyLinearCorrection": [[10, 4, 1, "", "NT"], [10, 2, 1, "", "compare_dists"], [10, 3, 1, "", "distance_upper_bound"], [10, 2, 1, "", "fill_and_smooth"], [10, 2, 1, "", "get_base_data"], [10, 2, 1, "", "get_base_gid"], [10, 2, 1, "", "get_bias_data"], [10, 2, 1, "", "get_bias_gid"], [10, 2, 1, "", "get_data_pair"], [10, 2, 1, "", "get_linear_correction"], [10, 2, 1, "", "get_node_cmd"], [10, 3, 1, "", "meta"], [10, 2, 1, "", "pre_load"], [10, 2, 1, "", "run"], [10, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.MonthlyScalarCorrection": [[11, 4, 1, "", "NT"], [11, 2, 1, "", "compare_dists"], [11, 3, 1, "", "distance_upper_bound"], [11, 2, 1, "", "fill_and_smooth"], [11, 2, 1, "", "get_base_data"], [11, 2, 1, "", "get_base_gid"], [11, 2, 1, "", "get_bias_data"], [11, 2, 1, "", "get_bias_gid"], [11, 2, 1, "", "get_data_pair"], [11, 2, 1, "", "get_linear_correction"], [11, 2, 1, "", "get_node_cmd"], [11, 3, 1, "", "meta"], [11, 2, 1, "", "pre_load"], [11, 2, 1, "", "run"], [11, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.ScalarCorrection": [[12, 4, 1, "", "NT"], [12, 2, 1, "", "compare_dists"], [12, 3, 1, "", "distance_upper_bound"], [12, 2, 1, "", "fill_and_smooth"], [12, 2, 1, "", "get_base_data"], [12, 2, 1, "", "get_base_gid"], [12, 2, 1, "", "get_bias_data"], [12, 2, 1, "", "get_bias_gid"], [12, 2, 1, "", "get_data_pair"], [12, 2, 1, "", "get_linear_correction"], [12, 2, 1, "", "get_node_cmd"], [12, 3, 1, "", "meta"], [12, 2, 1, "", "pre_load"], [12, 2, 1, "", "run"], [12, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.SkillAssessment": [[13, 4, 1, "", "NT"], [13, 4, 1, "", "PERCENTILES"], [13, 2, 1, "", "compare_dists"], [13, 3, 1, "", "distance_upper_bound"], [13, 2, 1, "", "fill_and_smooth"], [13, 2, 1, "", "get_base_data"], [13, 2, 1, "", "get_base_gid"], [13, 2, 1, "", "get_bias_data"], [13, 2, 1, "", "get_bias_gid"], [13, 2, 1, "", "get_data_pair"], [13, 2, 1, "", "get_linear_correction"], [13, 2, 1, "", "get_node_cmd"], [13, 3, 1, "", "meta"], [13, 2, 1, "", "pre_load"], [13, 2, 1, "", "run"], [13, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc_cli": [[15, 5, 1, "", "kickoff_local_job"], [16, 5, 1, "", "kickoff_slurm_job"]], "sup3r.bias.bias_calc_vortex": [[18, 1, 1, "", "BiasCorrectUpdate"], [19, 1, 1, "", "VortexMeanPrepper"]], "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate": [[18, 2, 1, "", "get_bc_factors"], [18, 2, 1, "", "run"], [18, 2, 1, "", "update_file"]], "sup3r.bias.bias_calc_vortex.VortexMeanPrepper": [[19, 2, 1, "", "convert_all_tifs"], [19, 2, 1, "", "convert_month_height_tif"], [19, 2, 1, "", "convert_month_tif"], [19, 2, 1, "", "get_all_data"], [19, 2, 1, "", "get_height_files"], [19, 2, 1, "", "get_input_file"], [19, 2, 1, "", "get_lat_lon"], [19, 2, 1, "", "get_month"], [19, 2, 1, "", "get_output_file"], [19, 3, 1, "", "global_attrs"], [19, 3, 1, "", "in_features"], [19, 3, 1, "", "input_files"], [19, 2, 1, "", "interp"], [19, 3, 1, "", "mask"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "out_features"], [19, 3, 1, "", "output_files"], [19, 2, 1, "", "run"], [19, 3, 1, "", "time_index"], [19, 2, 1, "", "write_data"]], "sup3r.bias.bias_transforms": [[21, 5, 1, "", "global_linear_bc"], [22, 5, 1, "", "local_linear_bc"], [23, 5, 1, "", "local_presrat_bc"], [24, 5, 1, "", "local_qdm_bc"], [25, 5, 1, "", "monthly_local_linear_bc"]], "sup3r.bias.mixins": [[27, 1, 1, "", "FillAndSmoothMixin"], [28, 1, 1, "", "ZeroRateMixin"]], "sup3r.bias.mixins.FillAndSmoothMixin": [[27, 2, 1, "", "fill_and_smooth"]], "sup3r.bias.mixins.ZeroRateMixin": [[28, 2, 1, "", "zero_precipitation_rate"]], "sup3r.bias.presrat": [[30, 1, 1, "", "PresRat"]], "sup3r.bias.presrat.PresRat": [[30, 2, 1, "", "calc_k_factor"], [30, 2, 1, "", "calc_tau_fut"], [30, 2, 1, "", "compare_dists"], [30, 3, 1, "", "distance_upper_bound"], [30, 2, 1, "", "fill_and_smooth"], [30, 2, 1, "", "get_base_data"], [30, 2, 1, "", "get_base_gid"], [30, 2, 1, "", "get_bias_data"], [30, 2, 1, "", "get_bias_gid"], [30, 2, 1, "", "get_data_pair"], [30, 2, 1, "", "get_node_cmd"], [30, 2, 1, "", "get_qdm_params"], [30, 3, 1, "", "meta"], [30, 2, 1, "", "pre_load"], [30, 2, 1, "", "run"], [30, 2, 1, "", "window_mask"], [30, 2, 1, "", "write_outputs"], [30, 2, 1, "", "zero_precipitation_rate"]], "sup3r.bias.qdm": [[32, 1, 1, "", "QuantileDeltaMappingCorrection"]], "sup3r.bias.qdm.QuantileDeltaMappingCorrection": [[32, 2, 1, "", "compare_dists"], [32, 3, 1, "", "distance_upper_bound"], [32, 2, 1, "", "fill_and_smooth"], [32, 2, 1, "", "get_base_data"], [32, 2, 1, "", "get_base_gid"], [32, 2, 1, "", "get_bias_data"], [32, 2, 1, "", "get_bias_gid"], [32, 2, 1, "", "get_data_pair"], [32, 2, 1, "", "get_node_cmd"], [32, 2, 1, "", "get_qdm_params"], [32, 3, 1, "", "meta"], [32, 2, 1, "", "pre_load"], [32, 2, 1, "", "run"], [32, 2, 1, "", "window_mask"], [32, 2, 1, "", "write_outputs"]], "sup3r.bias.utilities": [[34, 5, 1, "", "bias_correct_feature"], [35, 5, 1, "", "bias_correct_features"], [36, 5, 1, "", "lin_bc"], [37, 5, 1, "", "qdm_bc"]], "sup3r.models": [[40, 0, 0, "-", "abstract"], [42, 0, 0, "-", "base"], [44, 0, 0, "-", "conditional"], [46, 0, 0, "-", "dc"], [48, 0, 0, "-", "interface"], [50, 0, 0, "-", "linear"], [52, 0, 0, "-", "multi_step"], [56, 0, 0, "-", "solar_cc"], [58, 0, 0, "-", "surface"], [60, 0, 0, "-", "utilities"], [65, 0, 0, "-", "with_obs"]], "sup3r.models.abstract": [[41, 1, 1, "", "AbstractSingleModel"]], "sup3r.models.abstract.AbstractSingleModel": [[41, 2, 1, "", "calc_loss"], [41, 2, 1, "", "dict_to_tensorboard"], [41, 2, 1, "", "early_stop"], [41, 2, 1, "", "finish_epoch"], [41, 2, 1, "", "generate"], [41, 3, 1, "", "generator"], [41, 3, 1, "", "generator_weights"], [41, 2, 1, "", "get_hr_exo_input"], [41, 2, 1, "", "get_loss_fun"], [41, 2, 1, "", "get_optimizer_config"], [41, 2, 1, "", "get_optimizer_state"], [41, 2, 1, "", "get_single_grad"], [41, 3, 1, "", "history"], [41, 2, 1, "", "init_optimizer"], [41, 2, 1, "", "load_network"], [41, 2, 1, "", "load_saved_params"], [41, 2, 1, "", "log_loss_details"], [41, 3, 1, "", "means"], [41, 2, 1, "", "norm_input"], [41, 3, 1, "", "optimizer"], [41, 2, 1, "", "profile_to_tensorboard"], [41, 2, 1, "", "run_exo_layer"], [41, 2, 1, "", "run_gradient_descent"], [41, 2, 1, "", "save"], [41, 2, 1, "", "set_norm_stats"], [41, 3, 1, "", "stdevs"], [41, 3, 1, "", "total_batches"], [41, 2, 1, "", "un_norm_output"], [41, 2, 1, "", "update_loss_details"]], "sup3r.models.base": [[43, 1, 1, "", "Sup3rGan"]], "sup3r.models.base.Sup3rGan": [[43, 2, 1, "", "calc_loss"], [43, 2, 1, "", "calc_loss_disc"], [43, 2, 1, "", "calc_loss_gen_content"], [43, 2, 1, "", "calc_val_loss"], [43, 2, 1, "", "check_batch_handler_attrs"], [43, 2, 1, "", "dict_to_tensorboard"], [43, 2, 1, "", "discriminate"], [43, 3, 1, "", "discriminator"], [43, 3, 1, "", "discriminator_weights"], [43, 2, 1, "", "early_stop"], [43, 2, 1, "", "finish_epoch"], [43, 2, 1, "", "generate"], [43, 3, 1, "", "generator"], [43, 3, 1, "", "generator_weights"], [43, 2, 1, "", "get_hr_exo_input"], [43, 2, 1, "", "get_loss_fun"], [43, 2, 1, "", "get_optimizer_config"], [43, 2, 1, "", "get_optimizer_state"], [43, 2, 1, "", "get_s_enhance_from_layers"], [43, 2, 1, "", "get_single_grad"], [43, 2, 1, "", "get_t_enhance_from_layers"], [43, 2, 1, "", "get_weight_update_fraction"], [43, 3, 1, "", "history"], [43, 3, 1, "", "hr_exo_features"], [43, 3, 1, "", "hr_features"], [43, 3, 1, "", "hr_out_features"], [43, 2, 1, "", "init_optimizer"], [43, 2, 1, "", "init_weights"], [43, 3, 1, "", "input_dims"], [43, 3, 1, "", "input_resolution"], [43, 3, 1, "", "is_4d"], [43, 3, 1, "", "is_5d"], [43, 2, 1, "", "load"], [43, 2, 1, "", "load_network"], [43, 2, 1, "", "load_saved_params"], [43, 2, 1, "", "log_loss_details"], [43, 3, 1, "", "lr_features"], [43, 3, 1, "", "means"], [43, 3, 1, "", "meta"], [43, 3, 1, "", "model_params"], [43, 2, 1, "", "norm_input"], [43, 3, 1, "", "obs_features"], [43, 3, 1, "", "optimizer"], [43, 3, 1, "", "optimizer_disc"], [43, 3, 1, "", "output_resolution"], [43, 2, 1, "", "profile_to_tensorboard"], [43, 2, 1, "", "run_exo_layer"], [43, 2, 1, "", "run_gradient_descent"], [43, 3, 1, "", "s_enhance"], [43, 3, 1, "", "s_enhancements"], [43, 2, 1, "", "save"], [43, 2, 1, "", "save_params"], [43, 2, 1, "", "seed"], [43, 2, 1, "", "set_model_params"], [43, 2, 1, "", "set_norm_stats"], [43, 3, 1, "", "smoothed_features"], [43, 3, 1, "", "smoothing"], [43, 3, 1, "", "stdevs"], [43, 3, 1, "", "t_enhance"], [43, 3, 1, "", "t_enhancements"], [43, 3, 1, "", "total_batches"], [43, 2, 1, "", "train"], [43, 2, 1, "", "un_norm_output"], [43, 2, 1, "", "update_adversarial_weights"], [43, 2, 1, "", "update_loss_details"], [43, 2, 1, "", "update_optimizer"], [43, 3, 1, "", "version_record"], [43, 3, 1, "", "weights"]], "sup3r.models.conditional": [[45, 1, 1, "", "Sup3rCondMom"]], "sup3r.models.conditional.Sup3rCondMom": [[45, 2, 1, "", "calc_loss"], [45, 2, 1, "", "calc_loss_cond_mom"], [45, 2, 1, "", "calc_val_loss"], [45, 2, 1, "", "dict_to_tensorboard"], [45, 2, 1, "", "early_stop"], [45, 2, 1, "", "finish_epoch"], [45, 2, 1, "", "generate"], [45, 3, 1, "", "generator"], [45, 3, 1, "", "generator_weights"], [45, 2, 1, "", "get_hr_exo_input"], [45, 2, 1, "", "get_loss_fun"], [45, 2, 1, "", "get_optimizer_config"], [45, 2, 1, "", "get_optimizer_state"], [45, 2, 1, "", "get_s_enhance_from_layers"], [45, 2, 1, "", "get_single_grad"], [45, 2, 1, "", "get_t_enhance_from_layers"], [45, 3, 1, "", "history"], [45, 3, 1, "", "hr_exo_features"], [45, 3, 1, "", "hr_features"], [45, 3, 1, "", "hr_out_features"], [45, 2, 1, "", "init_optimizer"], [45, 3, 1, "", "input_dims"], [45, 3, 1, "", "input_resolution"], [45, 3, 1, "", "is_4d"], [45, 3, 1, "", "is_5d"], [45, 2, 1, "", "load"], [45, 2, 1, "", "load_network"], [45, 2, 1, "", "load_saved_params"], [45, 2, 1, "", "log_loss_details"], [45, 3, 1, "", "lr_features"], [45, 3, 1, "", "means"], [45, 3, 1, "", "meta"], [45, 3, 1, "", "model_params"], [45, 2, 1, "", "norm_input"], [45, 3, 1, "", "obs_features"], [45, 3, 1, "", "optimizer"], [45, 3, 1, "", "output_resolution"], [45, 2, 1, "", "profile_to_tensorboard"], [45, 2, 1, "", "run_exo_layer"], [45, 2, 1, "", "run_gradient_descent"], [45, 3, 1, "", "s_enhance"], [45, 3, 1, "", "s_enhancements"], [45, 2, 1, "", "save"], [45, 2, 1, "", "save_params"], [45, 2, 1, "", "seed"], [45, 2, 1, "", "set_model_params"], [45, 2, 1, "", "set_norm_stats"], [45, 3, 1, "", "smoothed_features"], [45, 3, 1, "", "smoothing"], [45, 3, 1, "", "stdevs"], [45, 3, 1, "", "t_enhance"], [45, 3, 1, "", "t_enhancements"], [45, 3, 1, "", "total_batches"], [45, 2, 1, "", "train"], [45, 2, 1, "", "un_norm_output"], [45, 2, 1, "", "update_loss_details"], [45, 2, 1, "", "update_optimizer"], [45, 3, 1, "", "version_record"], [45, 3, 1, "", "weights"]], "sup3r.models.dc": [[47, 1, 1, "", "Sup3rGanDC"]], "sup3r.models.dc.Sup3rGanDC": [[47, 2, 1, "", "calc_loss"], [47, 2, 1, "", "calc_loss_disc"], [47, 2, 1, "", "calc_loss_gen_content"], [47, 2, 1, "", "calc_val_loss"], [47, 2, 1, "", "calc_val_loss_gen"], [47, 2, 1, "", "check_batch_handler_attrs"], [47, 2, 1, "", "dict_to_tensorboard"], [47, 2, 1, "", "discriminate"], [47, 3, 1, "", "discriminator"], [47, 3, 1, "", "discriminator_weights"], [47, 2, 1, "", "early_stop"], [47, 2, 1, "", "finish_epoch"], [47, 2, 1, "", "generate"], [47, 3, 1, "", "generator"], [47, 3, 1, "", "generator_weights"], [47, 2, 1, "", "get_hr_exo_input"], [47, 2, 1, "", "get_loss_fun"], [47, 2, 1, "", "get_optimizer_config"], [47, 2, 1, "", "get_optimizer_state"], [47, 2, 1, "", "get_s_enhance_from_layers"], [47, 2, 1, "", "get_single_grad"], [47, 2, 1, "", "get_t_enhance_from_layers"], [47, 2, 1, "", "get_weight_update_fraction"], [47, 3, 1, "", "history"], [47, 3, 1, "", "hr_exo_features"], [47, 3, 1, "", "hr_features"], [47, 3, 1, "", "hr_out_features"], [47, 2, 1, "", "init_optimizer"], [47, 2, 1, "", "init_weights"], [47, 3, 1, "", "input_dims"], [47, 3, 1, "", "input_resolution"], [47, 3, 1, "", "is_4d"], [47, 3, 1, "", "is_5d"], [47, 2, 1, "", "load"], [47, 2, 1, "", "load_network"], [47, 2, 1, "", "load_saved_params"], [47, 2, 1, "", "log_loss_details"], [47, 3, 1, "", "lr_features"], [47, 3, 1, "", "means"], [47, 3, 1, "", "meta"], [47, 3, 1, "", "model_params"], [47, 2, 1, "", "norm_input"], [47, 3, 1, "", "obs_features"], [47, 3, 1, "", "optimizer"], [47, 3, 1, "", "optimizer_disc"], [47, 3, 1, "", "output_resolution"], [47, 2, 1, "", "profile_to_tensorboard"], [47, 2, 1, "", "run_exo_layer"], [47, 2, 1, "", "run_gradient_descent"], [47, 3, 1, "", "s_enhance"], [47, 3, 1, "", "s_enhancements"], [47, 2, 1, "", "save"], [47, 2, 1, "", "save_params"], [47, 2, 1, "", "seed"], [47, 2, 1, "", "set_model_params"], [47, 2, 1, "", "set_norm_stats"], [47, 3, 1, "", "smoothed_features"], [47, 3, 1, "", "smoothing"], [47, 3, 1, "", "stdevs"], [47, 3, 1, "", "t_enhance"], [47, 3, 1, "", "t_enhancements"], [47, 3, 1, "", "total_batches"], [47, 2, 1, "", "train"], [47, 2, 1, "", "un_norm_output"], [47, 2, 1, "", "update_adversarial_weights"], [47, 2, 1, "", "update_loss_details"], [47, 2, 1, "", "update_optimizer"], [47, 3, 1, "", "version_record"], [47, 3, 1, "", "weights"]], "sup3r.models.interface": [[49, 1, 1, "", "AbstractInterface"]], "sup3r.models.interface.AbstractInterface": [[49, 2, 1, "", "generate"], [49, 2, 1, "", "get_s_enhance_from_layers"], [49, 2, 1, "", "get_t_enhance_from_layers"], [49, 3, 1, "", "hr_exo_features"], [49, 3, 1, "", "hr_features"], [49, 3, 1, "", "hr_out_features"], [49, 3, 1, "", "input_dims"], [49, 3, 1, "", "input_resolution"], [49, 3, 1, "", "is_4d"], [49, 3, 1, "", "is_5d"], [49, 2, 1, "", "load"], [49, 3, 1, "", "lr_features"], [49, 3, 1, "", "meta"], [49, 3, 1, "", "model_params"], [49, 3, 1, "", "obs_features"], [49, 3, 1, "", "output_resolution"], [49, 3, 1, "", "s_enhance"], [49, 3, 1, "", "s_enhancements"], [49, 2, 1, "", "save_params"], [49, 2, 1, "", "seed"], [49, 2, 1, "", "set_model_params"], [49, 3, 1, "", "smoothed_features"], [49, 3, 1, "", "smoothing"], [49, 3, 1, "", "t_enhance"], [49, 3, 1, "", "t_enhancements"], [49, 3, 1, "", "version_record"]], "sup3r.models.linear": [[51, 1, 1, "", "LinearInterp"]], "sup3r.models.linear.LinearInterp": [[51, 2, 1, "", "generate"], [51, 2, 1, "", "get_s_enhance_from_layers"], [51, 2, 1, "", "get_t_enhance_from_layers"], [51, 3, 1, "", "hr_exo_features"], [51, 3, 1, "", "hr_features"], [51, 3, 1, "", "hr_out_features"], [51, 3, 1, "", "input_dims"], [51, 3, 1, "", "input_resolution"], [51, 3, 1, "", "is_4d"], [51, 3, 1, "", "is_5d"], [51, 2, 1, "", "load"], [51, 3, 1, "", "lr_features"], [51, 3, 1, "", "meta"], [51, 3, 1, "", "model_params"], [51, 3, 1, "", "obs_features"], [51, 3, 1, "", "output_resolution"], [51, 3, 1, "", "s_enhance"], [51, 3, 1, "", "s_enhancements"], [51, 2, 1, "", "save"], [51, 2, 1, "", "save_params"], [51, 2, 1, "", "seed"], [51, 2, 1, "", "set_model_params"], [51, 3, 1, "", "smoothed_features"], [51, 3, 1, "", "smoothing"], [51, 3, 1, "", "t_enhance"], [51, 3, 1, "", "t_enhancements"], [51, 3, 1, "", "version_record"]], "sup3r.models.multi_step": [[53, 1, 1, "", "MultiStepGan"], [54, 1, 1, "", "MultiStepSurfaceMetGan"], [55, 1, 1, "", "SolarMultiStepGan"]], "sup3r.models.multi_step.MultiStepGan": [[53, 2, 1, "", "generate"], [53, 2, 1, "", "get_s_enhance_from_layers"], [53, 2, 1, "", "get_t_enhance_from_layers"], [53, 3, 1, "", "hr_exo_features"], [53, 3, 1, "", "hr_features"], [53, 3, 1, "", "hr_out_features"], [53, 3, 1, "", "input_dims"], [53, 3, 1, "", "input_resolution"], [53, 3, 1, "", "is_4d"], [53, 3, 1, "", "is_5d"], [53, 2, 1, "", "load"], [53, 3, 1, "", "lr_features"], [53, 3, 1, "", "means"], [53, 3, 1, "", "meta"], [53, 3, 1, "", "model_params"], [53, 3, 1, "", "models"], [53, 3, 1, "", "obs_features"], [53, 3, 1, "", "output_resolution"], [53, 3, 1, "", "s_enhance"], [53, 3, 1, "", "s_enhancements"], [53, 2, 1, "", "save_params"], [53, 2, 1, "", "seed"], [53, 2, 1, "", "set_model_params"], [53, 3, 1, "", "smoothed_features"], [53, 3, 1, "", "smoothing"], [53, 3, 1, "", "stdevs"], [53, 3, 1, "", "t_enhance"], [53, 3, 1, "", "t_enhancements"], [53, 3, 1, "", "version_record"]], "sup3r.models.multi_step.MultiStepSurfaceMetGan": [[54, 2, 1, "", "generate"], [54, 2, 1, "", "get_s_enhance_from_layers"], [54, 2, 1, "", "get_t_enhance_from_layers"], [54, 3, 1, "", "hr_exo_features"], [54, 3, 1, "", "hr_features"], [54, 3, 1, "", "hr_out_features"], [54, 3, 1, "", "input_dims"], [54, 3, 1, "", "input_resolution"], [54, 3, 1, "", "is_4d"], [54, 3, 1, "", "is_5d"], [54, 2, 1, "", "load"], [54, 3, 1, "", "lr_features"], [54, 3, 1, "", "means"], [54, 3, 1, "", "meta"], [54, 3, 1, "", "model_params"], [54, 3, 1, "", "models"], [54, 3, 1, "", "obs_features"], [54, 3, 1, "", "output_resolution"], [54, 3, 1, "", "s_enhance"], [54, 3, 1, "", "s_enhancements"], [54, 2, 1, "", "save_params"], [54, 2, 1, "", "seed"], [54, 2, 1, "", "set_model_params"], [54, 3, 1, "", "smoothed_features"], [54, 3, 1, "", "smoothing"], [54, 3, 1, "", "stdevs"], [54, 3, 1, "", "t_enhance"], [54, 3, 1, "", "t_enhancements"], [54, 3, 1, "", "version_record"]], "sup3r.models.multi_step.SolarMultiStepGan": [[55, 2, 1, "", "generate"], [55, 2, 1, "", "get_s_enhance_from_layers"], [55, 2, 1, "", "get_t_enhance_from_layers"], [55, 3, 1, "", "hr_exo_features"], [55, 3, 1, "", "hr_features"], [55, 3, 1, "", "hr_out_features"], [55, 3, 1, "", "idf_solar"], [55, 3, 1, "", "idf_wind"], [55, 3, 1, "", "idf_wind_out"], [55, 3, 1, "", "input_dims"], [55, 3, 1, "", "input_resolution"], [55, 3, 1, "", "is_4d"], [55, 3, 1, "", "is_5d"], [55, 2, 1, "", "load"], [55, 3, 1, "", "lr_features"], [55, 3, 1, "", "means"], [55, 3, 1, "", "meta"], [55, 3, 1, "", "model_params"], [55, 3, 1, "", "models"], [55, 3, 1, "", "obs_features"], [55, 3, 1, "", "output_resolution"], [55, 2, 1, "", "preflight"], [55, 3, 1, "", "s_enhance"], [55, 3, 1, "", "s_enhancements"], [55, 2, 1, "", "save_params"], [55, 2, 1, "", "seed"], [55, 2, 1, "", "set_model_params"], [55, 3, 1, "", "smoothed_features"], [55, 3, 1, "", "smoothing"], [55, 3, 1, "", "spatial_solar_models"], [55, 3, 1, "", "spatial_wind_models"], [55, 3, 1, "", "stdevs"], [55, 3, 1, "", "t_enhance"], [55, 3, 1, "", "t_enhancements"], [55, 2, 1, "", "temporal_pad"], [55, 3, 1, "", "temporal_solar_models"], [55, 3, 1, "", "version_record"]], "sup3r.models.solar_cc": [[57, 1, 1, "", "SolarCC"]], "sup3r.models.solar_cc.SolarCC": [[57, 4, 1, "", "DAYLIGHT_HOURS"], [57, 4, 1, "", "POINT_LOSS_HOURS"], [57, 4, 1, "", "STARTING_HOUR"], [57, 2, 1, "", "calc_loss"], [57, 2, 1, "", "calc_loss_disc"], [57, 2, 1, "", "calc_loss_gen_content"], [57, 2, 1, "", "calc_val_loss"], [57, 2, 1, "", "check_batch_handler_attrs"], [57, 2, 1, "", "dict_to_tensorboard"], [57, 2, 1, "", "discriminate"], [57, 3, 1, "", "discriminator"], [57, 3, 1, "", "discriminator_weights"], [57, 2, 1, "", "early_stop"], [57, 2, 1, "", "finish_epoch"], [57, 2, 1, "", "generate"], [57, 3, 1, "", "generator"], [57, 3, 1, "", "generator_weights"], [57, 2, 1, "", "get_hr_exo_input"], [57, 2, 1, "", "get_loss_fun"], [57, 2, 1, "", "get_optimizer_config"], [57, 2, 1, "", "get_optimizer_state"], [57, 2, 1, "", "get_s_enhance_from_layers"], [57, 2, 1, "", "get_single_grad"], [57, 2, 1, "", "get_t_enhance_from_layers"], [57, 2, 1, "", "get_weight_update_fraction"], [57, 3, 1, "", "history"], [57, 3, 1, "", "hr_exo_features"], [57, 3, 1, "", "hr_features"], [57, 3, 1, "", "hr_out_features"], [57, 2, 1, "", "init_optimizer"], [57, 2, 1, "", "init_weights"], [57, 3, 1, "", "input_dims"], [57, 3, 1, "", "input_resolution"], [57, 3, 1, "", "is_4d"], [57, 3, 1, "", "is_5d"], [57, 2, 1, "", "load"], [57, 2, 1, "", "load_network"], [57, 2, 1, "", "load_saved_params"], [57, 2, 1, "", "log_loss_details"], [57, 3, 1, "", "lr_features"], [57, 3, 1, "", "means"], [57, 3, 1, "", "meta"], [57, 3, 1, "", "model_params"], [57, 2, 1, "", "norm_input"], [57, 3, 1, "", "obs_features"], [57, 3, 1, "", "optimizer"], [57, 3, 1, "", "optimizer_disc"], [57, 3, 1, "", "output_resolution"], [57, 2, 1, "", "profile_to_tensorboard"], [57, 2, 1, "", "run_exo_layer"], [57, 2, 1, "", "run_gradient_descent"], [57, 3, 1, "", "s_enhance"], [57, 3, 1, "", "s_enhancements"], [57, 2, 1, "", "save"], [57, 2, 1, "", "save_params"], [57, 2, 1, "", "seed"], [57, 2, 1, "", "set_model_params"], [57, 2, 1, "", "set_norm_stats"], [57, 3, 1, "", "smoothed_features"], [57, 3, 1, "", "smoothing"], [57, 3, 1, "", "stdevs"], [57, 3, 1, "", "t_enhance"], [57, 3, 1, "", "t_enhancements"], [57, 2, 1, "", "temporal_pad"], [57, 3, 1, "", "total_batches"], [57, 2, 1, "", "train"], [57, 2, 1, "", "un_norm_output"], [57, 2, 1, "", "update_adversarial_weights"], [57, 2, 1, "", "update_loss_details"], [57, 2, 1, "", "update_optimizer"], [57, 3, 1, "", "version_record"], [57, 3, 1, "", "weights"]], "sup3r.models.surface": [[59, 1, 1, "", "SurfaceSpatialMetModel"]], "sup3r.models.surface.SurfaceSpatialMetModel": [[59, 4, 1, "", "PRES_DIV"], [59, 4, 1, "", "PRES_EXP"], [59, 4, 1, "", "TEMP_LAPSE"], [59, 4, 1, "", "W_DELTA_TEMP"], [59, 4, 1, "", "W_DELTA_TOPO"], [59, 2, 1, "", "downscale_arr"], [59, 2, 1, "", "downscale_pres"], [59, 2, 1, "", "downscale_rh"], [59, 2, 1, "", "downscale_temp"], [59, 3, 1, "", "feature_inds_other"], [59, 3, 1, "", "feature_inds_pres"], [59, 3, 1, "", "feature_inds_rh"], [59, 3, 1, "", "feature_inds_temp"], [59, 2, 1, "", "fix_downscaled_bias"], [59, 2, 1, "", "generate"], [59, 2, 1, "", "get_s_enhance_from_layers"], [59, 2, 1, "", "get_t_enhance_from_layers"], [59, 3, 1, "", "hr_exo_features"], [59, 3, 1, "", "hr_features"], [59, 3, 1, "", "hr_out_features"], [59, 3, 1, "", "input_dims"], [59, 3, 1, "", "input_resolution"], [59, 3, 1, "", "is_4d"], [59, 3, 1, "", "is_5d"], [59, 2, 1, "", "load"], [59, 3, 1, "", "lr_features"], [59, 3, 1, "", "meta"], [59, 3, 1, "", "model_params"], [59, 3, 1, "", "obs_features"], [59, 3, 1, "", "output_resolution"], [59, 3, 1, "", "s_enhance"], [59, 3, 1, "", "s_enhancements"], [59, 2, 1, "", "save"], [59, 2, 1, "", "save_params"], [59, 2, 1, "", "seed"], [59, 2, 1, "", "set_model_params"], [59, 3, 1, "", "smoothed_features"], [59, 3, 1, "", "smoothing"], [59, 3, 1, "", "t_enhance"], [59, 3, 1, "", "t_enhancements"], [59, 2, 1, "", "train"], [59, 3, 1, "", "version_record"]], "sup3r.models.utilities": [[61, 1, 1, "", "TensorboardMixIn"], [62, 1, 1, "", "TrainingSession"], [63, 5, 1, "", "get_optimizer_class"], [64, 5, 1, "", "st_interp"]], "sup3r.models.utilities.TensorboardMixIn": [[61, 2, 1, "", "dict_to_tensorboard"], [61, 2, 1, "", "profile_to_tensorboard"], [61, 3, 1, "", "total_batches"]], "sup3r.models.utilities.TrainingSession": [[62, 2, 1, "", "run"]], "sup3r.models.with_obs": [[66, 1, 1, "", "Sup3rGanWithObs"]], "sup3r.models.with_obs.Sup3rGanWithObs": [[66, 2, 1, "", "calc_loss"], [66, 2, 1, "", "calc_loss_disc"], [66, 2, 1, "", "calc_loss_gen_content"], [66, 2, 1, "", "calc_val_loss"], [66, 2, 1, "", "check_batch_handler_attrs"], [66, 2, 1, "", "dict_to_tensorboard"], [66, 2, 1, "", "discriminate"], [66, 3, 1, "", "discriminator"], [66, 3, 1, "", "discriminator_weights"], [66, 2, 1, "", "early_stop"], [66, 2, 1, "", "finish_epoch"], [66, 2, 1, "", "generate"], [66, 3, 1, "", "generator"], [66, 3, 1, "", "generator_weights"], [66, 2, 1, "", "get_hr_exo_input"], [66, 2, 1, "", "get_loss_fun"], [66, 2, 1, "", "get_optimizer_config"], [66, 2, 1, "", "get_optimizer_state"], [66, 2, 1, "", "get_s_enhance_from_layers"], [66, 2, 1, "", "get_single_grad"], [66, 2, 1, "", "get_t_enhance_from_layers"], [66, 2, 1, "", "get_weight_update_fraction"], [66, 3, 1, "", "history"], [66, 3, 1, "", "hr_exo_features"], [66, 3, 1, "", "hr_features"], [66, 3, 1, "", "hr_out_features"], [66, 2, 1, "", "init_optimizer"], [66, 2, 1, "", "init_weights"], [66, 3, 1, "", "input_dims"], [66, 3, 1, "", "input_resolution"], [66, 3, 1, "", "is_4d"], [66, 3, 1, "", "is_5d"], [66, 2, 1, "", "load"], [66, 2, 1, "", "load_network"], [66, 2, 1, "", "load_saved_params"], [66, 2, 1, "", "log_loss_details"], [66, 3, 1, "", "lr_features"], [66, 3, 1, "", "means"], [66, 3, 1, "", "meta"], [66, 3, 1, "", "model_params"], [66, 2, 1, "", "norm_input"], [66, 3, 1, "", "obs_features"], [66, 3, 1, "", "obs_training_inds"], [66, 3, 1, "", "optimizer"], [66, 3, 1, "", "optimizer_disc"], [66, 3, 1, "", "output_resolution"], [66, 2, 1, "", "profile_to_tensorboard"], [66, 2, 1, "", "run_exo_layer"], [66, 2, 1, "", "run_gradient_descent"], [66, 3, 1, "", "s_enhance"], [66, 3, 1, "", "s_enhancements"], [66, 2, 1, "", "save"], [66, 2, 1, "", "save_params"], [66, 2, 1, "", "seed"], [66, 2, 1, "", "set_model_params"], [66, 2, 1, "", "set_norm_stats"], [66, 3, 1, "", "smoothed_features"], [66, 3, 1, "", "smoothing"], [66, 3, 1, "", "stdevs"], [66, 3, 1, "", "t_enhance"], [66, 3, 1, "", "t_enhancements"], [66, 3, 1, "", "total_batches"], [66, 2, 1, "", "train"], [66, 2, 1, "", "un_norm_output"], [66, 2, 1, "", "update_adversarial_weights"], [66, 2, 1, "", "update_loss_details"], [66, 2, 1, "", "update_optimizer"], [66, 3, 1, "", "version_record"], [66, 3, 1, "", "weights"]], "sup3r.pipeline": [[68, 0, 0, "-", "forward_pass"], [70, 0, 0, "-", "forward_pass_cli"], [73, 0, 0, "-", "pipeline_cli"], [74, 0, 0, "-", "slicer"], [76, 0, 0, "-", "strategy"], [79, 0, 0, "-", "utilities"]], "sup3r.pipeline.forward_pass": [[69, 1, 1, "", "ForwardPass"]], "sup3r.pipeline.forward_pass.ForwardPass": [[69, 2, 1, "", "get_input_chunk"], [69, 2, 1, "", "get_node_cmd"], [69, 3, 1, "", "meta"], [69, 2, 1, "", "pad_source_data"], [69, 2, 1, "", "run"], [69, 2, 1, "", "run_chunk"], [69, 2, 1, "", "run_generator"]], "sup3r.pipeline.forward_pass_cli": [[71, 5, 1, "", "kickoff_local_job"], [72, 5, 1, "", "kickoff_slurm_job"]], "sup3r.pipeline.slicer": [[75, 1, 1, "", "ForwardPassSlicer"]], "sup3r.pipeline.slicer.ForwardPassSlicer": [[75, 2, 1, "", "check_boundary_slice"], [75, 3, 1, "", "chunk_lookup"], [75, 3, 1, "", "extra_padding"], [75, 2, 1, "", "get_chunk_indices"], [75, 2, 1, "", "get_cropped_slices"], [75, 2, 1, "", "get_hr_slices"], [75, 2, 1, "", "get_pad_width"], [75, 2, 1, "", "get_padded_slices"], [75, 2, 1, "", "get_spatial_slices"], [75, 2, 1, "", "get_time_slices"], [75, 3, 1, "", "hr_crop_slices"], [75, 3, 1, "", "n_chunks"], [75, 3, 1, "", "n_spatial_chunks"], [75, 3, 1, "", "n_time_chunks"], [75, 3, 1, "", "s1_hr_crop_slices"], [75, 3, 1, "", "s1_hr_slices"], [75, 3, 1, "", "s1_lr_pad_slices"], [75, 3, 1, "", "s1_lr_slices"], [75, 3, 1, "", "s2_hr_crop_slices"], [75, 3, 1, "", "s2_hr_slices"], [75, 3, 1, "", "s2_lr_pad_slices"], [75, 3, 1, "", "s2_lr_slices"], [75, 3, 1, "", "s_hr_crop_slices"], [75, 3, 1, "", "s_hr_slices"], [75, 3, 1, "", "s_lr_crop_slices"], [75, 3, 1, "", "s_lr_pad_slices"], [75, 3, 1, "", "s_lr_slices"], [75, 3, 1, "", "spatial_chunk_lookup"], [75, 3, 1, "", "t_hr_crop_slices"], [75, 3, 1, "", "t_lr_crop_slices"], [75, 3, 1, "", "t_lr_pad_slices"], [75, 3, 1, "", "t_lr_slices"]], "sup3r.pipeline.strategy": [[77, 1, 1, "", "ForwardPassChunk"], [78, 1, 1, "", "ForwardPassStrategy"]], "sup3r.pipeline.strategy.ForwardPassStrategy": [[78, 2, 1, "", "chunk_finished"], [78, 2, 1, "", "chunk_masked"], [78, 3, 1, "", "fwp_mask"], [78, 2, 1, "", "get_chunk_indices"], [78, 2, 1, "", "get_exo_cache_files"], [78, 2, 1, "", "get_exo_kwargs"], [78, 2, 1, "", "get_time_slices"], [78, 3, 1, "", "hr_lat_lon"], [78, 2, 1, "", "init_chunk"], [78, 2, 1, "", "init_input_handler"], [78, 2, 1, "", "load_exo_data"], [78, 3, 1, "", "meta"], [78, 3, 1, "", "node_chunks"], [78, 2, 1, "", "node_finished"], [78, 3, 1, "", "out_files"], [78, 2, 1, "", "preflight"], [78, 2, 1, "", "prep_chunk_data"], [78, 3, 1, "", "unmasked_chunks"]], "sup3r.pipeline.utilities": [[80, 5, 1, "", "get_chunk_slices"], [81, 5, 1, "", "get_model"]], "sup3r.postprocessing": [[83, 0, 0, "-", "collectors"], [90, 0, 0, "-", "data_collect_cli"], [93, 0, 0, "-", "writers"]], "sup3r.postprocessing.collectors": [[84, 0, 0, "-", "base"], [86, 0, 0, "-", "h5"], [88, 0, 0, "-", "nc"]], "sup3r.postprocessing.collectors.base": [[85, 1, 1, "", "BaseCollector"]], "sup3r.postprocessing.collectors.base.BaseCollector": [[85, 2, 1, "", "collect"], [85, 2, 1, "", "get_chunk_indices"], [85, 2, 1, "", "get_node_cmd"], [85, 2, 1, "", "get_time_dim_name"], [85, 2, 1, "", "write_data"]], "sup3r.postprocessing.collectors.h5": [[87, 1, 1, "", "CollectorH5"]], "sup3r.postprocessing.collectors.h5.CollectorH5": [[87, 2, 1, "", "collect"], [87, 2, 1, "", "collect_feature"], [87, 2, 1, "", "get_chunk_indices"], [87, 2, 1, "", "get_collection_attrs"], [87, 2, 1, "", "get_coordinate_indices"], [87, 2, 1, "", "get_data"], [87, 2, 1, "", "get_flist_chunks"], [87, 2, 1, "", "get_node_cmd"], [87, 2, 1, "", "get_slices"], [87, 2, 1, "", "get_target_and_masked_meta"], [87, 2, 1, "", "get_time_dim_name"], [87, 2, 1, "", "get_unique_chunk_files"], [87, 2, 1, "", "write_data"]], "sup3r.postprocessing.collectors.nc": [[89, 1, 1, "", "CollectorNC"]], "sup3r.postprocessing.collectors.nc.CollectorNC": [[89, 2, 1, "", "collect"], [89, 2, 1, "", "get_chunk_indices"], [89, 2, 1, "", "get_node_cmd"], [89, 2, 1, "", "get_time_dim_name"], [89, 2, 1, "", "group_spatial_chunks"], [89, 2, 1, "", "write_data"]], "sup3r.postprocessing.data_collect_cli": [[91, 5, 1, "", "kickoff_local_job"], [92, 5, 1, "", "kickoff_slurm_job"]], "sup3r.postprocessing.writers": [[94, 0, 0, "-", "base"], [98, 0, 0, "-", "h5"], [100, 0, 0, "-", "nc"]], "sup3r.postprocessing.writers.base": [[95, 1, 1, "", "OutputHandler"], [96, 1, 1, "", "OutputMixin"], [97, 1, 1, "", "RexOutputs"]], "sup3r.postprocessing.writers.base.OutputHandler": [[95, 2, 1, "", "get_lat_lon"], [95, 2, 1, "", "get_renamed_features"], [95, 2, 1, "", "get_time_dim_name"], [95, 2, 1, "", "get_times"], [95, 2, 1, "", "invert_uv_features"], [95, 2, 1, "", "invert_uv_single_pair"], [95, 2, 1, "", "is_increasing_lons"], [95, 2, 1, "", "pad_lat_lon"], [95, 2, 1, "", "write_data"], [95, 2, 1, "", "write_output"]], "sup3r.postprocessing.writers.base.OutputMixin": [[96, 2, 1, "", "get_time_dim_name"], [96, 2, 1, "", "write_data"]], "sup3r.postprocessing.writers.base.RexOutputs": [[97, 3, 1, "", "SAM_configs"], [97, 2, 1, "", "add_dataset"], [97, 3, 1, "", "adders"], [97, 3, 1, "", "attrs"], [97, 3, 1, "", "chunks"], [97, 2, 1, "", "close"], [97, 3, 1, "", "coordinates"], [97, 3, 1, "", "data_version"], [97, 3, 1, "", "datasets"], [97, 2, 1, "", "df_str_decode"], [97, 3, 1, "", "dsets"], [97, 3, 1, "", "dtypes"], [97, 3, 1, "", "full_version_record"], [97, 2, 1, "", "get_SAM_df"], [97, 2, 1, "", "get_attrs"], [97, 2, 1, "", "get_config"], [97, 2, 1, "", "get_dset_properties"], [97, 2, 1, "", "get_meta_arr"], [97, 2, 1, "", "get_scale_factor"], [97, 2, 1, "", "get_units"], [97, 3, 1, "", "global_attrs"], [97, 3, 1, "", "groups"], [97, 3, 1, "", "h5"], [97, 2, 1, "", "init_h5"], [97, 3, 1, "", "lat_lon"], [97, 3, 1, "", "meta"], [97, 2, 1, "", "open_dataset"], [97, 2, 1, "", "open_file"], [97, 3, 1, "", "package"], [97, 2, 1, "", "preload_SAM"], [97, 3, 1, "", "res_dsets"], [97, 3, 1, "", "resource_datasets"], [97, 3, 1, "", "run_attrs"], [97, 3, 1, "", "scale_factors"], [97, 2, 1, "", "set_configs"], [97, 2, 1, "", "set_version_attr"], [97, 3, 1, "", "shape"], [97, 3, 1, "", "shapes"], [97, 3, 1, "", "source"], [97, 3, 1, "", "time_index"], [97, 3, 1, "", "units"], [97, 2, 1, "", "update_dset"], [97, 3, 1, "", "version"], [97, 3, 1, "", "writable"], [97, 2, 1, "", "write_dataset"], [97, 2, 1, "", "write_means"], [97, 2, 1, "", "write_profiles"]], "sup3r.postprocessing.writers.h5": [[99, 1, 1, "", "OutputHandlerH5"]], "sup3r.postprocessing.writers.h5.OutputHandlerH5": [[99, 2, 1, "", "get_lat_lon"], [99, 2, 1, "", "get_renamed_features"], [99, 2, 1, "", "get_time_dim_name"], [99, 2, 1, "", "get_times"], [99, 2, 1, "", "invert_uv_features"], [99, 2, 1, "", "invert_uv_single_pair"], [99, 2, 1, "", "is_increasing_lons"], [99, 2, 1, "", "pad_lat_lon"], [99, 2, 1, "", "write_data"], [99, 2, 1, "", "write_output"]], "sup3r.postprocessing.writers.nc": [[101, 1, 1, "", "OutputHandlerNC"]], "sup3r.postprocessing.writers.nc.OutputHandlerNC": [[101, 2, 1, "", "get_lat_lon"], [101, 2, 1, "", "get_renamed_features"], [101, 2, 1, "", "get_time_dim_name"], [101, 2, 1, "", "get_times"], [101, 2, 1, "", "invert_uv_features"], [101, 2, 1, "", "invert_uv_single_pair"], [101, 2, 1, "", "is_increasing_lons"], [101, 2, 1, "", "pad_lat_lon"], [101, 2, 1, "", "write_data"], [101, 2, 1, "", "write_output"]], "sup3r.preprocessing": [[103, 0, 0, "-", "accessor"], [105, 0, 0, "-", "base"], [110, 0, 0, "-", "batch_handlers"], [124, 0, 0, "-", "batch_queues"], [146, 0, 0, "-", "cachers"], [150, 0, 0, "-", "collections"], [155, 0, 0, "-", "data_handlers"], [168, 0, 0, "-", "derivers"], [200, 0, 0, "-", "loaders"], [211, 0, 0, "-", "names"], [213, 0, 0, "-", "rasterizers"], [225, 0, 0, "-", "samplers"], [242, 0, 0, "-", "utilities"]], "sup3r.preprocessing.accessor": [[104, 1, 1, "", "Sup3rX"]], "sup3r.preprocessing.accessor.Sup3rX": [[104, 2, 1, "", "__mul__"], [104, 2, 1, "", "add_dims_to_data_vars"], [104, 2, 1, "", "as_array"], [104, 2, 1, "", "assign"], [104, 2, 1, "", "coarsen"], [104, 2, 1, "", "compute"], [104, 3, 1, "", "dtype"], [104, 3, 1, "", "features"], [104, 2, 1, "", "flatten"], [104, 3, 1, "", "flattened"], [104, 3, 1, "", "grid_shape"], [104, 2, 1, "", "interpolate_na"], [104, 2, 1, "", "isel"], [104, 3, 1, "", "lat_lon"], [104, 3, 1, "", "loaded"], [104, 2, 1, "", "mean"], [104, 3, 1, "", "meta"], [104, 3, 1, "", "name"], [104, 2, 1, "", "normalize"], [104, 2, 1, "", "ordered"], [104, 2, 1, "", "qa"], [104, 2, 1, "", "sample"], [104, 2, 1, "", "set_regular_grid"], [104, 3, 1, "", "shape"], [104, 3, 1, "", "size"], [104, 2, 1, "", "std"], [104, 3, 1, "", "target"], [104, 3, 1, "", "time_independent"], [104, 3, 1, "", "time_index"], [104, 3, 1, "", "time_step"], [104, 2, 1, "", "to_dataarray"], [104, 2, 1, "", "unflatten"], [104, 2, 1, "", "update_ds"], [104, 3, 1, "", "values"]], "sup3r.preprocessing.base": [[106, 1, 1, "", "Container"], [107, 1, 1, "", "DsetTuple"], [108, 1, 1, "", "Sup3rDataset"], [109, 1, 1, "", "Sup3rMeta"]], "sup3r.preprocessing.base.Container": [[106, 3, 1, "", "data"], [106, 2, 1, "", "post_init_log"], [106, 3, 1, "", "shape"], [106, 2, 1, "", "wrap"]], "sup3r.preprocessing.base.DsetTuple": [[107, 3, 1, "", "dsets"]], "sup3r.preprocessing.base.Sup3rDataset": [[108, 2, 1, "", "compute"], [108, 3, 1, "", "dtype"], [108, 3, 1, "", "features"], [108, 2, 1, "", "isel"], [108, 3, 1, "", "loaded"], [108, 2, 1, "", "mean"], [108, 2, 1, "", "normalize"], [108, 2, 1, "", "rewrap"], [108, 2, 1, "", "sample"], [108, 3, 1, "", "shape"], [108, 3, 1, "", "size"], [108, 2, 1, "", "std"]], "sup3r.preprocessing.base.Sup3rMeta": [[109, 2, 1, "", "__call__"], [109, 2, 1, "", "mro"], [109, 2, 1, "", "register"]], "sup3r.preprocessing.batch_handlers": [[111, 0, 0, "-", "dc"], [113, 0, 0, "-", "factory"]], "sup3r.preprocessing.batch_handlers.dc": [[112, 1, 1, "", "BatchHandlerDC"]], "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC": [[112, 4, 1, "", "SAMPLER"], [112, 4, 1, "", "TRAIN_QUEUE"], [112, 4, 1, "", "VAL_QUEUE"], [112, 2, 1, "", "check_enhancement_factors"], [112, 2, 1, "", "check_features"], [112, 2, 1, "", "check_shared_attr"], [112, 3, 1, "", "container_weights"], [112, 3, 1, "", "data"], [112, 2, 1, "", "enqueue_batches"], [112, 3, 1, "", "features"], [112, 2, 1, "", "get_batch"], [112, 2, 1, "", "get_container_index"], [112, 2, 1, "", "get_queue"], [112, 2, 1, "", "get_random_container"], [112, 3, 1, "", "hr_shape"], [112, 2, 1, "", "init_samplers"], [112, 2, 1, "", "log_queue_info"], [112, 3, 1, "", "lr_shape"], [112, 2, 1, "", "post_init_log"], [112, 2, 1, "", "post_proc"], [112, 2, 1, "", "preflight"], [112, 3, 1, "", "queue_futures"], [112, 3, 1, "", "queue_len"], [112, 3, 1, "", "queue_shape"], [112, 3, 1, "", "queue_thread"], [112, 3, 1, "", "running"], [112, 2, 1, "", "sample_batch"], [112, 2, 1, "", "sample_batches"], [112, 3, 1, "", "shape"], [112, 3, 1, "", "shapes"], [112, 3, 1, "", "spatial_weights"], [112, 2, 1, "", "start"], [112, 2, 1, "", "stop"], [112, 3, 1, "", "temporal_weights"], [112, 2, 1, "", "transform"], [112, 2, 1, "", "update_weights"], [112, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory": [[114, 1, 1, "", "BatchHandler"], [115, 1, 1, "", "BatchHandlerCC"], [116, 5, 1, "", "BatchHandlerFactory"], [117, 1, 1, "", "BatchHandlerMom1"], [118, 1, 1, "", "BatchHandlerMom1SF"], [119, 1, 1, "", "BatchHandlerMom2"], [120, 4, 1, "", "BatchHandlerMom2SF"], [121, 1, 1, "", "BatchHandlerMom2Sep"], [122, 1, 1, "", "BatchHandlerMom2SepSF"], [123, 1, 1, "", "DualBatchHandler"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandler": [[114, 4, 1, "", "SAMPLER"], [114, 4, 1, "", "TRAIN_QUEUE"], [114, 4, 1, "", "VAL_QUEUE"], [114, 2, 1, "", "check_enhancement_factors"], [114, 2, 1, "", "check_features"], [114, 2, 1, "", "check_shared_attr"], [114, 3, 1, "", "container_weights"], [114, 3, 1, "", "data"], [114, 2, 1, "", "enqueue_batches"], [114, 3, 1, "", "features"], [114, 2, 1, "", "get_batch"], [114, 2, 1, "", "get_container_index"], [114, 2, 1, "", "get_queue"], [114, 2, 1, "", "get_random_container"], [114, 3, 1, "", "hr_shape"], [114, 2, 1, "", "init_samplers"], [114, 2, 1, "", "log_queue_info"], [114, 3, 1, "", "lr_shape"], [114, 2, 1, "", "post_init_log"], [114, 2, 1, "", "post_proc"], [114, 2, 1, "", "preflight"], [114, 3, 1, "", "queue_futures"], [114, 3, 1, "", "queue_len"], [114, 3, 1, "", "queue_shape"], [114, 3, 1, "", "queue_thread"], [114, 3, 1, "", "running"], [114, 2, 1, "", "sample_batch"], [114, 2, 1, "", "sample_batches"], [114, 3, 1, "", "shape"], [114, 3, 1, "", "shapes"], [114, 2, 1, "", "start"], [114, 2, 1, "", "stop"], [114, 2, 1, "", "transform"], [114, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC": [[115, 4, 1, "", "SAMPLER"], [115, 4, 1, "", "TRAIN_QUEUE"], [115, 4, 1, "", "VAL_QUEUE"], [115, 2, 1, "", "check_enhancement_factors"], [115, 2, 1, "", "check_features"], [115, 2, 1, "", "check_shared_attr"], [115, 3, 1, "", "container_weights"], [115, 3, 1, "", "data"], [115, 2, 1, "", "enqueue_batches"], [115, 3, 1, "", "features"], [115, 2, 1, "", "get_batch"], [115, 2, 1, "", "get_container_index"], [115, 2, 1, "", "get_queue"], [115, 2, 1, "", "get_random_container"], [115, 3, 1, "", "hr_shape"], [115, 2, 1, "", "init_samplers"], [115, 2, 1, "", "log_queue_info"], [115, 3, 1, "", "lr_shape"], [115, 2, 1, "", "post_init_log"], [115, 2, 1, "", "post_proc"], [115, 2, 1, "", "preflight"], [115, 3, 1, "", "queue_futures"], [115, 3, 1, "", "queue_len"], [115, 3, 1, "", "queue_shape"], [115, 3, 1, "", "queue_thread"], [115, 3, 1, "", "running"], [115, 2, 1, "", "sample_batch"], [115, 2, 1, "", "sample_batches"], [115, 3, 1, "", "shape"], [115, 3, 1, "", "shapes"], [115, 2, 1, "", "start"], [115, 2, 1, "", "stop"], [115, 2, 1, "", "transform"], [115, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1": [[117, 4, 1, "", "SAMPLER"], [117, 4, 1, "", "TRAIN_QUEUE"], [117, 4, 1, "", "VAL_QUEUE"], [117, 2, 1, "", "check_enhancement_factors"], [117, 2, 1, "", "check_features"], [117, 2, 1, "", "check_shared_attr"], [117, 3, 1, "", "container_weights"], [117, 3, 1, "", "data"], [117, 2, 1, "", "enqueue_batches"], [117, 3, 1, "", "features"], [117, 2, 1, "", "get_batch"], [117, 2, 1, "", "get_container_index"], [117, 2, 1, "", "get_queue"], [117, 2, 1, "", "get_random_container"], [117, 3, 1, "", "hr_shape"], [117, 2, 1, "", "init_samplers"], [117, 2, 1, "", "log_queue_info"], [117, 3, 1, "", "lr_shape"], [117, 2, 1, "", "make_mask"], [117, 2, 1, "", "make_output"], [117, 2, 1, "", "post_init_log"], [117, 2, 1, "", "post_proc"], [117, 2, 1, "", "preflight"], [117, 3, 1, "", "queue_futures"], [117, 3, 1, "", "queue_len"], [117, 3, 1, "", "queue_shape"], [117, 3, 1, "", "queue_thread"], [117, 3, 1, "", "running"], [117, 2, 1, "", "sample_batch"], [117, 2, 1, "", "sample_batches"], [117, 3, 1, "", "shape"], [117, 3, 1, "", "shapes"], [117, 2, 1, "", "start"], [117, 2, 1, "", "stop"], [117, 2, 1, "", "transform"], [117, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF": [[118, 4, 1, "", "SAMPLER"], [118, 4, 1, "", "TRAIN_QUEUE"], [118, 4, 1, "", "VAL_QUEUE"], [118, 2, 1, "", "check_enhancement_factors"], [118, 2, 1, "", "check_features"], [118, 2, 1, "", "check_shared_attr"], [118, 3, 1, "", "container_weights"], [118, 3, 1, "", "data"], [118, 2, 1, "", "enqueue_batches"], [118, 3, 1, "", "features"], [118, 2, 1, "", "get_batch"], [118, 2, 1, "", "get_container_index"], [118, 2, 1, "", "get_queue"], [118, 2, 1, "", "get_random_container"], [118, 3, 1, "", "hr_shape"], [118, 2, 1, "", "init_samplers"], [118, 2, 1, "", "log_queue_info"], [118, 3, 1, "", "lr_shape"], [118, 2, 1, "", "make_mask"], [118, 2, 1, "", "make_output"], [118, 2, 1, "", "post_init_log"], [118, 2, 1, "", "post_proc"], [118, 2, 1, "", "preflight"], [118, 3, 1, "", "queue_futures"], [118, 3, 1, "", "queue_len"], [118, 3, 1, "", "queue_shape"], [118, 3, 1, "", "queue_thread"], [118, 3, 1, "", "running"], [118, 2, 1, "", "sample_batch"], [118, 2, 1, "", "sample_batches"], [118, 3, 1, "", "shape"], [118, 3, 1, "", "shapes"], [118, 2, 1, "", "start"], [118, 2, 1, "", "stop"], [118, 2, 1, "", "transform"], [118, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2": [[119, 4, 1, "", "SAMPLER"], [119, 4, 1, "", "TRAIN_QUEUE"], [119, 4, 1, "", "VAL_QUEUE"], [119, 2, 1, "", "check_enhancement_factors"], [119, 2, 1, "", "check_features"], [119, 2, 1, "", "check_shared_attr"], [119, 3, 1, "", "container_weights"], [119, 3, 1, "", "data"], [119, 2, 1, "", "enqueue_batches"], [119, 3, 1, "", "features"], [119, 2, 1, "", "get_batch"], [119, 2, 1, "", "get_container_index"], [119, 2, 1, "", "get_queue"], [119, 2, 1, "", "get_random_container"], [119, 3, 1, "", "hr_shape"], [119, 2, 1, "", "init_samplers"], [119, 2, 1, "", "log_queue_info"], [119, 3, 1, "", "lr_shape"], [119, 2, 1, "", "make_mask"], [119, 2, 1, "", "make_output"], [119, 2, 1, "", "post_init_log"], [119, 2, 1, "", "post_proc"], [119, 2, 1, "", "preflight"], [119, 3, 1, "", "queue_futures"], [119, 3, 1, "", "queue_len"], [119, 3, 1, "", "queue_shape"], [119, 3, 1, "", "queue_thread"], [119, 3, 1, "", "running"], [119, 2, 1, "", "sample_batch"], [119, 2, 1, "", "sample_batches"], [119, 3, 1, "", "shape"], [119, 3, 1, "", "shapes"], [119, 2, 1, "", "start"], [119, 2, 1, "", "stop"], [119, 2, 1, "", "transform"], [119, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep": [[121, 4, 1, "", "SAMPLER"], [121, 4, 1, "", "TRAIN_QUEUE"], [121, 4, 1, "", "VAL_QUEUE"], [121, 2, 1, "", "check_enhancement_factors"], [121, 2, 1, "", "check_features"], [121, 2, 1, "", "check_shared_attr"], [121, 3, 1, "", "container_weights"], [121, 3, 1, "", "data"], [121, 2, 1, "", "enqueue_batches"], [121, 3, 1, "", "features"], [121, 2, 1, "", "get_batch"], [121, 2, 1, "", "get_container_index"], [121, 2, 1, "", "get_queue"], [121, 2, 1, "", "get_random_container"], [121, 3, 1, "", "hr_shape"], [121, 2, 1, "", "init_samplers"], [121, 2, 1, "", "log_queue_info"], [121, 3, 1, "", "lr_shape"], [121, 2, 1, "", "make_mask"], [121, 2, 1, "", "make_output"], [121, 2, 1, "", "post_init_log"], [121, 2, 1, "", "post_proc"], [121, 2, 1, "", "preflight"], [121, 3, 1, "", "queue_futures"], [121, 3, 1, "", "queue_len"], [121, 3, 1, "", "queue_shape"], [121, 3, 1, "", "queue_thread"], [121, 3, 1, "", "running"], [121, 2, 1, "", "sample_batch"], [121, 2, 1, "", "sample_batches"], [121, 3, 1, "", "shape"], [121, 3, 1, "", "shapes"], [121, 2, 1, "", "start"], [121, 2, 1, "", "stop"], [121, 2, 1, "", "transform"], [121, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF": [[122, 4, 1, "", "SAMPLER"], [122, 4, 1, "", "TRAIN_QUEUE"], [122, 4, 1, "", "VAL_QUEUE"], [122, 2, 1, "", "check_enhancement_factors"], [122, 2, 1, "", "check_features"], [122, 2, 1, "", "check_shared_attr"], [122, 3, 1, "", "container_weights"], [122, 3, 1, "", "data"], [122, 2, 1, "", "enqueue_batches"], [122, 3, 1, "", "features"], [122, 2, 1, "", "get_batch"], [122, 2, 1, "", "get_container_index"], [122, 2, 1, "", "get_queue"], [122, 2, 1, "", "get_random_container"], [122, 3, 1, "", "hr_shape"], [122, 2, 1, "", "init_samplers"], [122, 2, 1, "", "log_queue_info"], [122, 3, 1, "", "lr_shape"], [122, 2, 1, "", "make_mask"], [122, 2, 1, "", "make_output"], [122, 2, 1, "", "post_init_log"], [122, 2, 1, "", "post_proc"], [122, 2, 1, "", "preflight"], [122, 3, 1, "", "queue_futures"], [122, 3, 1, "", "queue_len"], [122, 3, 1, "", "queue_shape"], [122, 3, 1, "", "queue_thread"], [122, 3, 1, "", "running"], [122, 2, 1, "", "sample_batch"], [122, 2, 1, "", "sample_batches"], [122, 3, 1, "", "shape"], [122, 3, 1, "", "shapes"], [122, 2, 1, "", "start"], [122, 2, 1, "", "stop"], [122, 2, 1, "", "transform"], [122, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler": [[123, 4, 1, "", "SAMPLER"], [123, 4, 1, "", "TRAIN_QUEUE"], [123, 4, 1, "", "VAL_QUEUE"], [123, 2, 1, "", "check_enhancement_factors"], [123, 2, 1, "", "check_features"], [123, 2, 1, "", "check_shared_attr"], [123, 3, 1, "", "container_weights"], [123, 3, 1, "", "data"], [123, 2, 1, "", "enqueue_batches"], [123, 3, 1, "", "features"], [123, 2, 1, "", "get_batch"], [123, 2, 1, "", "get_container_index"], [123, 2, 1, "", "get_queue"], [123, 2, 1, "", "get_random_container"], [123, 3, 1, "", "hr_shape"], [123, 2, 1, "", "init_samplers"], [123, 2, 1, "", "log_queue_info"], [123, 3, 1, "", "lr_shape"], [123, 2, 1, "", "post_init_log"], [123, 2, 1, "", "post_proc"], [123, 2, 1, "", "preflight"], [123, 3, 1, "", "queue_futures"], [123, 3, 1, "", "queue_len"], [123, 3, 1, "", "queue_shape"], [123, 3, 1, "", "queue_thread"], [123, 3, 1, "", "running"], [123, 2, 1, "", "sample_batch"], [123, 2, 1, "", "sample_batches"], [123, 3, 1, "", "shape"], [123, 3, 1, "", "shapes"], [123, 2, 1, "", "start"], [123, 2, 1, "", "stop"], [123, 2, 1, "", "transform"], [123, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues": [[125, 0, 0, "-", "abstract"], [127, 0, 0, "-", "base"], [129, 0, 0, "-", "conditional"], [137, 0, 0, "-", "dc"], [140, 0, 0, "-", "dual"], [142, 0, 0, "-", "utilities"]], "sup3r.preprocessing.batch_queues.abstract": [[126, 1, 1, "", "AbstractBatchQueue"]], "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue": [[126, 2, 1, "", "check_enhancement_factors"], [126, 2, 1, "", "check_features"], [126, 2, 1, "", "check_shared_attr"], [126, 3, 1, "", "container_weights"], [126, 3, 1, "", "data"], [126, 2, 1, "", "enqueue_batches"], [126, 3, 1, "", "features"], [126, 2, 1, "", "get_batch"], [126, 2, 1, "", "get_container_index"], [126, 2, 1, "", "get_queue"], [126, 2, 1, "", "get_random_container"], [126, 3, 1, "", "hr_shape"], [126, 2, 1, "", "log_queue_info"], [126, 3, 1, "", "lr_shape"], [126, 2, 1, "", "post_init_log"], [126, 2, 1, "", "post_proc"], [126, 2, 1, "", "preflight"], [126, 3, 1, "", "queue_futures"], [126, 3, 1, "", "queue_len"], [126, 3, 1, "", "queue_shape"], [126, 3, 1, "", "queue_thread"], [126, 3, 1, "", "running"], [126, 2, 1, "", "sample_batch"], [126, 2, 1, "", "sample_batches"], [126, 3, 1, "", "shape"], [126, 3, 1, "", "shapes"], [126, 2, 1, "", "start"], [126, 2, 1, "", "stop"], [126, 2, 1, "", "transform"], [126, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.base": [[128, 1, 1, "", "SingleBatchQueue"]], "sup3r.preprocessing.batch_queues.base.SingleBatchQueue": [[128, 2, 1, "", "check_enhancement_factors"], [128, 2, 1, "", "check_features"], [128, 2, 1, "", "check_shared_attr"], [128, 3, 1, "", "container_weights"], [128, 3, 1, "", "data"], [128, 2, 1, "", "enqueue_batches"], [128, 3, 1, "", "features"], [128, 2, 1, "", "get_batch"], [128, 2, 1, "", "get_container_index"], [128, 2, 1, "", "get_queue"], [128, 2, 1, "", "get_random_container"], [128, 3, 1, "", "hr_shape"], [128, 2, 1, "", "log_queue_info"], [128, 3, 1, "", "lr_shape"], [128, 2, 1, "", "post_init_log"], [128, 2, 1, "", "post_proc"], [128, 2, 1, "", "preflight"], [128, 3, 1, "", "queue_futures"], [128, 3, 1, "", "queue_len"], [128, 3, 1, "", "queue_shape"], [128, 3, 1, "", "queue_thread"], [128, 3, 1, "", "running"], [128, 2, 1, "", "sample_batch"], [128, 2, 1, "", "sample_batches"], [128, 3, 1, "", "shape"], [128, 3, 1, "", "shapes"], [128, 2, 1, "", "start"], [128, 2, 1, "", "stop"], [128, 2, 1, "", "transform"], [128, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional": [[130, 1, 1, "", "ConditionalBatchQueue"], [131, 1, 1, "", "QueueMom1"], [132, 1, 1, "", "QueueMom1SF"], [133, 1, 1, "", "QueueMom2"], [134, 1, 1, "", "QueueMom2SF"], [135, 1, 1, "", "QueueMom2Sep"], [136, 1, 1, "", "QueueMom2SepSF"]], "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue": [[130, 2, 1, "", "check_enhancement_factors"], [130, 2, 1, "", "check_features"], [130, 2, 1, "", "check_shared_attr"], [130, 3, 1, "", "container_weights"], [130, 3, 1, "", "data"], [130, 2, 1, "", "enqueue_batches"], [130, 3, 1, "", "features"], [130, 2, 1, "", "get_batch"], [130, 2, 1, "", "get_container_index"], [130, 2, 1, "", "get_queue"], [130, 2, 1, "", "get_random_container"], [130, 3, 1, "", "hr_shape"], [130, 2, 1, "", "log_queue_info"], [130, 3, 1, "", "lr_shape"], [130, 2, 1, "", "make_mask"], [130, 2, 1, "", "make_output"], [130, 2, 1, "", "post_init_log"], [130, 2, 1, "", "post_proc"], [130, 2, 1, "", "preflight"], [130, 3, 1, "", "queue_futures"], [130, 3, 1, "", "queue_len"], [130, 3, 1, "", "queue_shape"], [130, 3, 1, "", "queue_thread"], [130, 3, 1, "", "running"], [130, 2, 1, "", "sample_batch"], [130, 2, 1, "", "sample_batches"], [130, 3, 1, "", "shape"], [130, 3, 1, "", "shapes"], [130, 2, 1, "", "start"], [130, 2, 1, "", "stop"], [130, 2, 1, "", "transform"], [130, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1": [[131, 2, 1, "", "check_enhancement_factors"], [131, 2, 1, "", "check_features"], [131, 2, 1, "", "check_shared_attr"], [131, 3, 1, "", "container_weights"], [131, 3, 1, "", "data"], [131, 2, 1, "", "enqueue_batches"], [131, 3, 1, "", "features"], [131, 2, 1, "", "get_batch"], [131, 2, 1, "", "get_container_index"], [131, 2, 1, "", "get_queue"], [131, 2, 1, "", "get_random_container"], [131, 3, 1, "", "hr_shape"], [131, 2, 1, "", "log_queue_info"], [131, 3, 1, "", "lr_shape"], [131, 2, 1, "", "make_mask"], [131, 2, 1, "", "make_output"], [131, 2, 1, "", "post_init_log"], [131, 2, 1, "", "post_proc"], [131, 2, 1, "", "preflight"], [131, 3, 1, "", "queue_futures"], [131, 3, 1, "", "queue_len"], [131, 3, 1, "", "queue_shape"], [131, 3, 1, "", "queue_thread"], [131, 3, 1, "", "running"], [131, 2, 1, "", "sample_batch"], [131, 2, 1, "", "sample_batches"], [131, 3, 1, "", "shape"], [131, 3, 1, "", "shapes"], [131, 2, 1, "", "start"], [131, 2, 1, "", "stop"], [131, 2, 1, "", "transform"], [131, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF": [[132, 2, 1, "", "check_enhancement_factors"], [132, 2, 1, "", "check_features"], [132, 2, 1, "", "check_shared_attr"], [132, 3, 1, "", "container_weights"], [132, 3, 1, "", "data"], [132, 2, 1, "", "enqueue_batches"], [132, 3, 1, "", "features"], [132, 2, 1, "", "get_batch"], [132, 2, 1, "", "get_container_index"], [132, 2, 1, "", "get_queue"], [132, 2, 1, "", "get_random_container"], [132, 3, 1, "", "hr_shape"], [132, 2, 1, "", "log_queue_info"], [132, 3, 1, "", "lr_shape"], [132, 2, 1, "", "make_mask"], [132, 2, 1, "", "make_output"], [132, 2, 1, "", "post_init_log"], [132, 2, 1, "", "post_proc"], [132, 2, 1, "", "preflight"], [132, 3, 1, "", "queue_futures"], [132, 3, 1, "", "queue_len"], [132, 3, 1, "", "queue_shape"], [132, 3, 1, "", "queue_thread"], [132, 3, 1, "", "running"], [132, 2, 1, "", "sample_batch"], [132, 2, 1, "", "sample_batches"], [132, 3, 1, "", "shape"], [132, 3, 1, "", "shapes"], [132, 2, 1, "", "start"], [132, 2, 1, "", "stop"], [132, 2, 1, "", "transform"], [132, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2": [[133, 2, 1, "", "check_enhancement_factors"], [133, 2, 1, "", "check_features"], [133, 2, 1, "", "check_shared_attr"], [133, 3, 1, "", "container_weights"], [133, 3, 1, "", "data"], [133, 2, 1, "", "enqueue_batches"], [133, 3, 1, "", "features"], [133, 2, 1, "", "get_batch"], [133, 2, 1, "", "get_container_index"], [133, 2, 1, "", "get_queue"], [133, 2, 1, "", "get_random_container"], [133, 3, 1, "", "hr_shape"], [133, 2, 1, "", "log_queue_info"], [133, 3, 1, "", "lr_shape"], [133, 2, 1, "", "make_mask"], [133, 2, 1, "", "make_output"], [133, 2, 1, "", "post_init_log"], [133, 2, 1, "", "post_proc"], [133, 2, 1, "", "preflight"], [133, 3, 1, "", "queue_futures"], [133, 3, 1, "", "queue_len"], [133, 3, 1, "", "queue_shape"], [133, 3, 1, "", "queue_thread"], [133, 3, 1, "", "running"], [133, 2, 1, "", "sample_batch"], [133, 2, 1, "", "sample_batches"], [133, 3, 1, "", "shape"], [133, 3, 1, "", "shapes"], [133, 2, 1, "", "start"], [133, 2, 1, "", "stop"], [133, 2, 1, "", "transform"], [133, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF": [[134, 2, 1, "", "check_enhancement_factors"], [134, 2, 1, "", "check_features"], [134, 2, 1, "", "check_shared_attr"], [134, 3, 1, "", "container_weights"], [134, 3, 1, "", "data"], [134, 2, 1, "", "enqueue_batches"], [134, 3, 1, "", "features"], [134, 2, 1, "", "get_batch"], [134, 2, 1, "", "get_container_index"], [134, 2, 1, "", "get_queue"], [134, 2, 1, "", "get_random_container"], [134, 3, 1, "", "hr_shape"], [134, 2, 1, "", "log_queue_info"], [134, 3, 1, "", "lr_shape"], [134, 2, 1, "", "make_mask"], [134, 2, 1, "", "make_output"], [134, 2, 1, "", "post_init_log"], [134, 2, 1, "", "post_proc"], [134, 2, 1, "", "preflight"], [134, 3, 1, "", "queue_futures"], [134, 3, 1, "", "queue_len"], [134, 3, 1, "", "queue_shape"], [134, 3, 1, "", "queue_thread"], [134, 3, 1, "", "running"], [134, 2, 1, "", "sample_batch"], [134, 2, 1, "", "sample_batches"], [134, 3, 1, "", "shape"], [134, 3, 1, "", "shapes"], [134, 2, 1, "", "start"], [134, 2, 1, "", "stop"], [134, 2, 1, "", "transform"], [134, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep": [[135, 2, 1, "", "check_enhancement_factors"], [135, 2, 1, "", "check_features"], [135, 2, 1, "", "check_shared_attr"], [135, 3, 1, "", "container_weights"], [135, 3, 1, "", "data"], [135, 2, 1, "", "enqueue_batches"], [135, 3, 1, "", "features"], [135, 2, 1, "", "get_batch"], [135, 2, 1, "", "get_container_index"], [135, 2, 1, "", "get_queue"], [135, 2, 1, "", "get_random_container"], [135, 3, 1, "", "hr_shape"], [135, 2, 1, "", "log_queue_info"], [135, 3, 1, "", "lr_shape"], [135, 2, 1, "", "make_mask"], [135, 2, 1, "", "make_output"], [135, 2, 1, "", "post_init_log"], [135, 2, 1, "", "post_proc"], [135, 2, 1, "", "preflight"], [135, 3, 1, "", "queue_futures"], [135, 3, 1, "", "queue_len"], [135, 3, 1, "", "queue_shape"], [135, 3, 1, "", "queue_thread"], [135, 3, 1, "", "running"], [135, 2, 1, "", "sample_batch"], [135, 2, 1, "", "sample_batches"], [135, 3, 1, "", "shape"], [135, 3, 1, "", "shapes"], [135, 2, 1, "", "start"], [135, 2, 1, "", "stop"], [135, 2, 1, "", "transform"], [135, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF": [[136, 2, 1, "", "check_enhancement_factors"], [136, 2, 1, "", "check_features"], [136, 2, 1, "", "check_shared_attr"], [136, 3, 1, "", "container_weights"], [136, 3, 1, "", "data"], [136, 2, 1, "", "enqueue_batches"], [136, 3, 1, "", "features"], [136, 2, 1, "", "get_batch"], [136, 2, 1, "", "get_container_index"], [136, 2, 1, "", "get_queue"], [136, 2, 1, "", "get_random_container"], [136, 3, 1, "", "hr_shape"], [136, 2, 1, "", "log_queue_info"], [136, 3, 1, "", "lr_shape"], [136, 2, 1, "", "make_mask"], [136, 2, 1, "", "make_output"], [136, 2, 1, "", "post_init_log"], [136, 2, 1, "", "post_proc"], [136, 2, 1, "", "preflight"], [136, 3, 1, "", "queue_futures"], [136, 3, 1, "", "queue_len"], [136, 3, 1, "", "queue_shape"], [136, 3, 1, "", "queue_thread"], [136, 3, 1, "", "running"], [136, 2, 1, "", "sample_batch"], [136, 2, 1, "", "sample_batches"], [136, 3, 1, "", "shape"], [136, 3, 1, "", "shapes"], [136, 2, 1, "", "start"], [136, 2, 1, "", "stop"], [136, 2, 1, "", "transform"], [136, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.dc": [[138, 1, 1, "", "BatchQueueDC"], [139, 1, 1, "", "ValBatchQueueDC"]], "sup3r.preprocessing.batch_queues.dc.BatchQueueDC": [[138, 2, 1, "", "check_enhancement_factors"], [138, 2, 1, "", "check_features"], [138, 2, 1, "", "check_shared_attr"], [138, 3, 1, "", "container_weights"], [138, 3, 1, "", "data"], [138, 2, 1, "", "enqueue_batches"], [138, 3, 1, "", "features"], [138, 2, 1, "", "get_batch"], [138, 2, 1, "", "get_container_index"], [138, 2, 1, "", "get_queue"], [138, 2, 1, "", "get_random_container"], [138, 3, 1, "", "hr_shape"], [138, 2, 1, "", "log_queue_info"], [138, 3, 1, "", "lr_shape"], [138, 2, 1, "", "post_init_log"], [138, 2, 1, "", "post_proc"], [138, 2, 1, "", "preflight"], [138, 3, 1, "", "queue_futures"], [138, 3, 1, "", "queue_len"], [138, 3, 1, "", "queue_shape"], [138, 3, 1, "", "queue_thread"], [138, 3, 1, "", "running"], [138, 2, 1, "", "sample_batch"], [138, 2, 1, "", "sample_batches"], [138, 3, 1, "", "shape"], [138, 3, 1, "", "shapes"], [138, 3, 1, "", "spatial_weights"], [138, 2, 1, "", "start"], [138, 2, 1, "", "stop"], [138, 3, 1, "", "temporal_weights"], [138, 2, 1, "", "transform"], [138, 2, 1, "", "update_weights"], [138, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC": [[139, 2, 1, "", "check_enhancement_factors"], [139, 2, 1, "", "check_features"], [139, 2, 1, "", "check_shared_attr"], [139, 3, 1, "", "container_weights"], [139, 3, 1, "", "data"], [139, 2, 1, "", "enqueue_batches"], [139, 3, 1, "", "features"], [139, 2, 1, "", "get_batch"], [139, 2, 1, "", "get_container_index"], [139, 2, 1, "", "get_queue"], [139, 2, 1, "", "get_random_container"], [139, 3, 1, "", "hr_shape"], [139, 2, 1, "", "log_queue_info"], [139, 3, 1, "", "lr_shape"], [139, 2, 1, "", "post_init_log"], [139, 2, 1, "", "post_proc"], [139, 2, 1, "", "preflight"], [139, 3, 1, "", "queue_futures"], [139, 3, 1, "", "queue_len"], [139, 3, 1, "", "queue_shape"], [139, 3, 1, "", "queue_thread"], [139, 3, 1, "", "running"], [139, 2, 1, "", "sample_batch"], [139, 2, 1, "", "sample_batches"], [139, 3, 1, "", "shape"], [139, 3, 1, "", "shapes"], [139, 3, 1, "", "spatial_weights"], [139, 2, 1, "", "start"], [139, 2, 1, "", "stop"], [139, 3, 1, "", "temporal_weights"], [139, 2, 1, "", "transform"], [139, 2, 1, "", "update_weights"], [139, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.dual": [[141, 1, 1, "", "DualBatchQueue"]], "sup3r.preprocessing.batch_queues.dual.DualBatchQueue": [[141, 2, 1, "", "check_enhancement_factors"], [141, 2, 1, "", "check_features"], [141, 2, 1, "", "check_shared_attr"], [141, 3, 1, "", "container_weights"], [141, 3, 1, "", "data"], [141, 2, 1, "", "enqueue_batches"], [141, 3, 1, "", "features"], [141, 2, 1, "", "get_batch"], [141, 2, 1, "", "get_container_index"], [141, 2, 1, "", "get_queue"], [141, 2, 1, "", "get_random_container"], [141, 3, 1, "", "hr_shape"], [141, 2, 1, "", "log_queue_info"], [141, 3, 1, "", "lr_shape"], [141, 2, 1, "", "post_init_log"], [141, 2, 1, "", "post_proc"], [141, 2, 1, "", "preflight"], [141, 3, 1, "", "queue_futures"], [141, 3, 1, "", "queue_len"], [141, 3, 1, "", "queue_shape"], [141, 3, 1, "", "queue_thread"], [141, 3, 1, "", "running"], [141, 2, 1, "", "sample_batch"], [141, 2, 1, "", "sample_batches"], [141, 3, 1, "", "shape"], [141, 3, 1, "", "shapes"], [141, 2, 1, "", "start"], [141, 2, 1, "", "stop"], [141, 2, 1, "", "transform"], [141, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.utilities": [[143, 5, 1, "", "smooth_data"], [144, 5, 1, "", "spatial_simple_enhancing"], [145, 5, 1, "", "temporal_simple_enhancing"]], "sup3r.preprocessing.cachers": [[147, 0, 0, "-", "base"], [149, 0, 0, "-", "utilities"]], "sup3r.preprocessing.cachers.base": [[148, 1, 1, "", "Cacher"]], "sup3r.preprocessing.cachers.base.Cacher": [[148, 2, 1, "", "cache_data"], [148, 3, 1, "", "data"], [148, 2, 1, "", "get_chunksizes"], [148, 2, 1, "", "parse_chunks"], [148, 2, 1, "", "post_init_log"], [148, 3, 1, "", "shape"], [148, 2, 1, "", "wrap"], [148, 2, 1, "", "write_h5"], [148, 2, 1, "", "write_netcdf"]], "sup3r.preprocessing.collections": [[151, 0, 0, "-", "base"], [153, 0, 0, "-", "stats"]], "sup3r.preprocessing.collections.base": [[152, 1, 1, "", "Collection"]], "sup3r.preprocessing.collections.base.Collection": [[152, 2, 1, "", "check_shared_attr"], [152, 3, 1, "", "container_weights"], [152, 3, 1, "", "data"], [152, 3, 1, "", "features"], [152, 2, 1, "", "post_init_log"], [152, 3, 1, "", "shape"], [152, 2, 1, "", "wrap"]], "sup3r.preprocessing.collections.stats": [[154, 1, 1, "", "StatsCollection"]], "sup3r.preprocessing.collections.stats.StatsCollection": [[154, 2, 1, "", "check_shared_attr"], [154, 3, 1, "", "container_weights"], [154, 3, 1, "", "data"], [154, 3, 1, "", "features"], [154, 2, 1, "", "get_means"], [154, 2, 1, "", "get_stds"], [154, 2, 1, "", "normalize"], [154, 2, 1, "", "post_init_log"], [154, 2, 1, "", "save_stats"], [154, 3, 1, "", "shape"], [154, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers": [[156, 0, 0, "-", "base"], [161, 0, 0, "-", "exo"], [165, 0, 0, "-", "nc_cc"]], "sup3r.preprocessing.data_handlers.base": [[157, 1, 1, "", "DailyDataHandler"], [158, 1, 1, "", "DataHandler"], [159, 1, 1, "", "DataHandlerH5SolarCC"], [160, 1, 1, "", "DataHandlerH5WindCC"]], "sup3r.preprocessing.data_handlers.base.DailyDataHandler": [[157, 2, 1, "", "check_registry"], [157, 2, 1, "", "collect_input_attrs"], [157, 3, 1, "", "data"], [157, 2, 1, "", "derive"], [157, 2, 1, "", "do_level_interpolation"], [157, 2, 1, "", "get_inputs"], [157, 2, 1, "", "get_multi_level_data"], [157, 2, 1, "", "get_single_level_data"], [157, 2, 1, "", "has_interp_variables"], [157, 2, 1, "", "map_new_name"], [157, 2, 1, "", "no_overlap"], [157, 2, 1, "", "post_init_log"], [157, 3, 1, "", "shape"], [157, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.base.DataHandler": [[158, 2, 1, "", "check_registry"], [158, 2, 1, "", "collect_input_attrs"], [158, 3, 1, "", "data"], [158, 2, 1, "", "derive"], [158, 2, 1, "", "do_level_interpolation"], [158, 2, 1, "", "get_inputs"], [158, 2, 1, "", "get_multi_level_data"], [158, 2, 1, "", "get_single_level_data"], [158, 2, 1, "", "has_interp_variables"], [158, 2, 1, "", "map_new_name"], [158, 2, 1, "", "no_overlap"], [158, 2, 1, "", "post_init_log"], [158, 3, 1, "", "shape"], [158, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC": [[159, 4, 1, "", "BASE_LOADER"], [159, 2, 1, "", "check_registry"], [159, 2, 1, "", "collect_input_attrs"], [159, 3, 1, "", "data"], [159, 2, 1, "", "derive"], [159, 2, 1, "", "do_level_interpolation"], [159, 2, 1, "", "get_inputs"], [159, 2, 1, "", "get_multi_level_data"], [159, 2, 1, "", "get_single_level_data"], [159, 2, 1, "", "has_interp_variables"], [159, 2, 1, "", "map_new_name"], [159, 2, 1, "", "no_overlap"], [159, 2, 1, "", "post_init_log"], [159, 3, 1, "", "shape"], [159, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC": [[160, 4, 1, "", "BASE_LOADER"], [160, 2, 1, "", "check_registry"], [160, 2, 1, "", "collect_input_attrs"], [160, 3, 1, "", "data"], [160, 2, 1, "", "derive"], [160, 2, 1, "", "do_level_interpolation"], [160, 2, 1, "", "get_inputs"], [160, 2, 1, "", "get_multi_level_data"], [160, 2, 1, "", "get_single_level_data"], [160, 2, 1, "", "has_interp_variables"], [160, 2, 1, "", "map_new_name"], [160, 2, 1, "", "no_overlap"], [160, 2, 1, "", "post_init_log"], [160, 3, 1, "", "shape"], [160, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.exo": [[162, 1, 1, "", "ExoData"], [163, 1, 1, "", "ExoDataHandler"], [164, 1, 1, "", "SingleExoDataStep"]], "sup3r.preprocessing.data_handlers.exo.ExoData": [[162, 2, 1, "", "clear"], [162, 2, 1, "", "copy"], [162, 2, 1, "", "fromkeys"], [162, 2, 1, "", "get"], [162, 2, 1, "", "get_chunk"], [162, 2, 1, "", "get_combine_type_data"], [162, 2, 1, "", "get_model_step_exo"], [162, 2, 1, "", "items"], [162, 2, 1, "", "keys"], [162, 2, 1, "", "pop"], [162, 2, 1, "", "popitem"], [162, 2, 1, "", "setdefault"], [162, 2, 1, "", "split"], [162, 2, 1, "", "update"], [162, 2, 1, "", "values"]], "sup3r.preprocessing.data_handlers.exo.ExoDataHandler": [[163, 3, 1, "", "cache_files"], [163, 2, 1, "", "get_all_step_data"], [163, 2, 1, "", "get_exo_rasterizer"], [163, 2, 1, "", "get_exo_steps"], [163, 2, 1, "", "get_single_step_data"]], "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep": [[164, 2, 1, "", "clear"], [164, 2, 1, "", "copy"], [164, 2, 1, "", "fromkeys"], [164, 2, 1, "", "get"], [164, 2, 1, "", "items"], [164, 2, 1, "", "keys"], [164, 2, 1, "", "pop"], [164, 2, 1, "", "popitem"], [164, 2, 1, "", "setdefault"], [164, 3, 1, "", "shape"], [164, 2, 1, "", "update"], [164, 2, 1, "", "values"]], "sup3r.preprocessing.data_handlers.nc_cc": [[166, 1, 1, "", "DataHandlerNCforCC"], [167, 1, 1, "", "DataHandlerNCforCCwithPowerLaw"]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC": [[166, 2, 1, "", "check_registry"], [166, 2, 1, "", "collect_input_attrs"], [166, 3, 1, "", "data"], [166, 2, 1, "", "derive"], [166, 2, 1, "", "do_level_interpolation"], [166, 2, 1, "", "get_clearsky_ghi"], [166, 2, 1, "", "get_inputs"], [166, 2, 1, "", "get_multi_level_data"], [166, 2, 1, "", "get_single_level_data"], [166, 2, 1, "", "get_time_slice"], [166, 2, 1, "", "has_interp_variables"], [166, 2, 1, "", "map_new_name"], [166, 2, 1, "", "no_overlap"], [166, 2, 1, "", "post_init_log"], [166, 2, 1, "", "run_input_checks"], [166, 2, 1, "", "run_wrap_checks"], [166, 2, 1, "", "scale_clearsky_ghi"], [166, 3, 1, "", "shape"], [166, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw": [[167, 2, 1, "", "check_registry"], [167, 2, 1, "", "collect_input_attrs"], [167, 3, 1, "", "data"], [167, 2, 1, "", "derive"], [167, 2, 1, "", "do_level_interpolation"], [167, 2, 1, "", "get_clearsky_ghi"], [167, 2, 1, "", "get_inputs"], [167, 2, 1, "", "get_multi_level_data"], [167, 2, 1, "", "get_single_level_data"], [167, 2, 1, "", "get_time_slice"], [167, 2, 1, "", "has_interp_variables"], [167, 2, 1, "", "map_new_name"], [167, 2, 1, "", "no_overlap"], [167, 2, 1, "", "post_init_log"], [167, 2, 1, "", "run_input_checks"], [167, 2, 1, "", "run_wrap_checks"], [167, 2, 1, "", "scale_clearsky_ghi"], [167, 3, 1, "", "shape"], [167, 2, 1, "", "wrap"]], "sup3r.preprocessing.derivers": [[169, 0, 0, "-", "base"], [172, 0, 0, "-", "methods"], [194, 0, 0, "-", "utilities"]], "sup3r.preprocessing.derivers.base": [[170, 1, 1, "", "BaseDeriver"], [171, 1, 1, "", "Deriver"]], "sup3r.preprocessing.derivers.base.BaseDeriver": [[170, 2, 1, "", "check_registry"], [170, 2, 1, "", "collect_input_attrs"], [170, 3, 1, "", "data"], [170, 2, 1, "", "derive"], [170, 2, 1, "", "do_level_interpolation"], [170, 2, 1, "", "get_inputs"], [170, 2, 1, "", "get_multi_level_data"], [170, 2, 1, "", "get_single_level_data"], [170, 2, 1, "", "has_interp_variables"], [170, 2, 1, "", "map_new_name"], [170, 2, 1, "", "no_overlap"], [170, 2, 1, "", "post_init_log"], [170, 3, 1, "", "shape"], [170, 2, 1, "", "wrap"]], "sup3r.preprocessing.derivers.base.Deriver": [[171, 2, 1, "", "check_registry"], [171, 2, 1, "", "collect_input_attrs"], [171, 3, 1, "", "data"], [171, 2, 1, "", "derive"], [171, 2, 1, "", "do_level_interpolation"], [171, 2, 1, "", "get_inputs"], [171, 2, 1, "", "get_multi_level_data"], [171, 2, 1, "", "get_single_level_data"], [171, 2, 1, "", "has_interp_variables"], [171, 2, 1, "", "map_new_name"], [171, 2, 1, "", "no_overlap"], [171, 2, 1, "", "post_init_log"], [171, 3, 1, "", "shape"], [171, 2, 1, "", "wrap"]], "sup3r.preprocessing.derivers.methods": [[173, 1, 1, "", "ClearSkyRatio"], [174, 1, 1, "", "ClearSkyRatioCC"], [175, 1, 1, "", "CloudMask"], [176, 1, 1, "", "DerivedFeature"], [177, 1, 1, "", "Latitude"], [178, 1, 1, "", "Longitude"], [179, 1, 1, "", "PressureWRF"], [180, 1, 1, "", "SurfaceRH"], [181, 1, 1, "", "Sza"], [182, 1, 1, "", "Tas"], [183, 1, 1, "", "TasMax"], [184, 1, 1, "", "TasMin"], [185, 1, 1, "", "TempNCforCC"], [186, 1, 1, "", "USolar"], [187, 1, 1, "", "UWind"], [188, 1, 1, "", "UWindPowerLaw"], [189, 1, 1, "", "VSolar"], [190, 1, 1, "", "VWind"], [191, 1, 1, "", "VWindPowerLaw"], [192, 1, 1, "", "Winddirection"], [193, 1, 1, "", "Windspeed"]], "sup3r.preprocessing.derivers.methods.ClearSkyRatio": [[173, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC": [[174, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.CloudMask": [[175, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.DerivedFeature": [[176, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Latitude": [[177, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Longitude": [[178, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.PressureWRF": [[179, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.SurfaceRH": [[180, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Sza": [[181, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Tas": [[182, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.TasMax": [[183, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.TasMin": [[184, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.TempNCforCC": [[185, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.USolar": [[186, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.UWind": [[187, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.UWindPowerLaw": [[188, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.VSolar": [[189, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.VWind": [[190, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.VWindPowerLaw": [[191, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Winddirection": [[192, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Windspeed": [[193, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.utilities": [[195, 1, 1, "", "SolarZenith"], [196, 5, 1, "", "invert_uv"], [197, 5, 1, "", "parse_feature"], [198, 5, 1, "", "transform_rotate_wind"], [199, 5, 1, "", "windspeed_log_law"]], "sup3r.preprocessing.derivers.utilities.SolarZenith": [[195, 2, 1, "", "get_zenith"]], "sup3r.preprocessing.loaders": [[201, 1, 1, "", "Loader"], [202, 0, 0, "-", "base"], [204, 0, 0, "-", "h5"], [206, 0, 0, "-", "nc"], [208, 0, 0, "-", "utilities"]], "sup3r.preprocessing.loaders.Loader": [[201, 2, 1, "", "BASE_LOADER"], [201, 3, 1, "", "data"], [201, 3, 1, "", "file_paths"], [201, 2, 1, "", "post_init_log"], [201, 3, 1, "", "shape"], [201, 2, 1, "", "wrap"]], "sup3r.preprocessing.loaders.base": [[203, 1, 1, "", "BaseLoader"]], "sup3r.preprocessing.loaders.base.BaseLoader": [[203, 2, 1, "", "BASE_LOADER"], [203, 3, 1, "", "data"], [203, 3, 1, "", "file_paths"], [203, 2, 1, "", "post_init_log"], [203, 3, 1, "", "shape"], [203, 2, 1, "", "wrap"]], "sup3r.preprocessing.loaders.h5": [[205, 1, 1, "", "LoaderH5"]], "sup3r.preprocessing.loaders.h5.LoaderH5": [[205, 4, 1, "", "BASE_LOADER"], [205, 3, 1, "", "data"], [205, 3, 1, "", "file_paths"], [205, 2, 1, "", "post_init_log"], [205, 2, 1, "", "scale_factor"], [205, 3, 1, "", "shape"], [205, 2, 1, "", "wrap"]], "sup3r.preprocessing.loaders.nc": [[207, 1, 1, "", "LoaderNC"]], "sup3r.preprocessing.loaders.nc.LoaderNC": [[207, 2, 1, "", "BASE_LOADER"], [207, 3, 1, "", "data"], [207, 3, 1, "", "file_paths"], [207, 2, 1, "", "post_init_log"], [207, 3, 1, "", "shape"], [207, 2, 1, "", "wrap"]], "sup3r.preprocessing.loaders.utilities": [[209, 5, 1, "", "standardize_names"], [210, 5, 1, "", "standardize_values"]], "sup3r.preprocessing.names": [[212, 1, 1, "", "Dimension"]], "sup3r.preprocessing.names.Dimension": [[212, 2, 1, "", "__add__"], [212, 2, 1, "", "__mul__"], [212, 2, 1, "", "capitalize"], [212, 2, 1, "", "casefold"], [212, 2, 1, "", "center"], [212, 2, 1, "", "coords_2d"], [212, 2, 1, "", "coords_3d"], [212, 2, 1, "", "coords_4d"], [212, 2, 1, "", "coords_4d_pres"], [212, 2, 1, "", "count"], [212, 2, 1, "", "dims_2d"], [212, 2, 1, "", "dims_3d"], [212, 2, 1, "", "dims_3d_bc"], [212, 2, 1, "", "dims_4d"], [212, 2, 1, "", "dims_4d_bc"], [212, 2, 1, "", "dims_4d_pres"], [212, 2, 1, "", "encode"], [212, 2, 1, "", "endswith"], [212, 2, 1, "", "expandtabs"], [212, 2, 1, "", "find"], [212, 2, 1, "", "flat_2d"], [212, 2, 1, "", "format"], [212, 2, 1, "", "format_map"], [212, 2, 1, "", "index"], [212, 2, 1, "", "isalnum"], [212, 2, 1, "", "isalpha"], [212, 2, 1, "", "isascii"], [212, 2, 1, "", "isdecimal"], [212, 2, 1, "", "isdigit"], [212, 2, 1, "", "isidentifier"], [212, 2, 1, "", "islower"], [212, 2, 1, "", "isnumeric"], [212, 2, 1, "", "isprintable"], [212, 2, 1, "", "isspace"], [212, 2, 1, "", "istitle"], [212, 2, 1, "", "isupper"], [212, 2, 1, "", "join"], [212, 2, 1, "", "ljust"], [212, 2, 1, "", "lower"], [212, 2, 1, "", "lstrip"], [212, 2, 1, "", "maketrans"], [212, 2, 1, "", "order"], [212, 2, 1, "", "partition"], [212, 2, 1, "", "removeprefix"], [212, 2, 1, "", "removesuffix"], [212, 2, 1, "", "replace"], [212, 2, 1, "", "rfind"], [212, 2, 1, "", "rindex"], [212, 2, 1, "", "rjust"], [212, 2, 1, "", "rpartition"], [212, 2, 1, "", "rsplit"], [212, 2, 1, "", "rstrip"], [212, 2, 1, "", "split"], [212, 2, 1, "", "splitlines"], [212, 2, 1, "", "startswith"], [212, 2, 1, "", "strip"], [212, 2, 1, "", "swapcase"], [212, 2, 1, "", "title"], [212, 2, 1, "", "translate"], [212, 2, 1, "", "upper"], [212, 2, 1, "", "zfill"]], "sup3r.preprocessing.rasterizers": [[214, 0, 0, "-", "base"], [216, 0, 0, "-", "dual"], [218, 0, 0, "-", "exo"], [223, 0, 0, "-", "extended"]], "sup3r.preprocessing.rasterizers.base": [[215, 1, 1, "", "BaseRasterizer"]], "sup3r.preprocessing.rasterizers.base.BaseRasterizer": [[215, 2, 1, "", "check_target_and_shape"], [215, 3, 1, "", "data"], [215, 2, 1, "", "get_closest_row_col"], [215, 2, 1, "", "get_lat_lon"], [215, 2, 1, "", "get_raster_index"], [215, 3, 1, "", "grid_shape"], [215, 3, 1, "", "lat_lon"], [215, 2, 1, "", "post_init_log"], [215, 2, 1, "", "rasterize_data"], [215, 3, 1, "", "shape"], [215, 3, 1, "", "target"], [215, 3, 1, "", "time_slice"], [215, 2, 1, "", "wrap"]], "sup3r.preprocessing.rasterizers.dual": [[217, 1, 1, "", "DualRasterizer"]], "sup3r.preprocessing.rasterizers.dual.DualRasterizer": [[217, 2, 1, "", "check_regridded_lr_data"], [217, 3, 1, "", "data"], [217, 2, 1, "", "get_regridder"], [217, 2, 1, "", "post_init_log"], [217, 3, 1, "", "shape"], [217, 2, 1, "", "update_hr_data"], [217, 2, 1, "", "update_lr_data"], [217, 2, 1, "", "wrap"]], "sup3r.preprocessing.rasterizers.exo": [[219, 1, 1, "", "BaseExoRasterizer"], [220, 1, 1, "", "ExoRasterizer"], [221, 1, 1, "", "ObsRasterizer"], [222, 1, 1, "", "SzaRasterizer"]], "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer": [[219, 3, 1, "", "cache_file"], [219, 3, 1, "", "coords"], [219, 3, 1, "", "data"], [219, 3, 1, "", "dists"], [219, 2, 1, "", "get_data"], [219, 2, 1, "", "get_distance_upper_bound"], [219, 3, 1, "", "hr_lat_lon"], [219, 3, 1, "", "hr_shape"], [219, 3, 1, "", "hr_time_index"], [219, 3, 1, "", "lr_shape"], [219, 3, 1, "", "nn"], [219, 2, 1, "", "query_tree"], [219, 3, 1, "", "source_data"], [219, 3, 1, "", "source_handler"], [219, 3, 1, "", "source_lat_lon"], [219, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizer": [[220, 3, 1, "", "cache_file"], [220, 3, 1, "", "coords"], [220, 3, 1, "", "data"], [220, 3, 1, "", "dists"], [220, 2, 1, "", "get_data"], [220, 2, 1, "", "get_distance_upper_bound"], [220, 3, 1, "", "hr_lat_lon"], [220, 3, 1, "", "hr_shape"], [220, 3, 1, "", "hr_time_index"], [220, 3, 1, "", "lr_shape"], [220, 3, 1, "", "nn"], [220, 2, 1, "", "query_tree"], [220, 3, 1, "", "source_data"], [220, 3, 1, "", "source_handler"], [220, 3, 1, "", "source_lat_lon"], [220, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.exo.ObsRasterizer": [[221, 3, 1, "", "cache_file"], [221, 3, 1, "", "coords"], [221, 3, 1, "", "data"], [221, 3, 1, "", "dists"], [221, 2, 1, "", "get_data"], [221, 2, 1, "", "get_distance_upper_bound"], [221, 3, 1, "", "hr_lat_lon"], [221, 3, 1, "", "hr_shape"], [221, 3, 1, "", "hr_time_index"], [221, 3, 1, "", "lr_shape"], [221, 3, 1, "", "nn"], [221, 2, 1, "", "query_tree"], [221, 3, 1, "", "source_data"], [221, 3, 1, "", "source_handler"], [221, 3, 1, "", "source_lat_lon"], [221, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.exo.SzaRasterizer": [[222, 3, 1, "", "cache_file"], [222, 3, 1, "", "coords"], [222, 3, 1, "", "data"], [222, 3, 1, "", "dists"], [222, 2, 1, "", "get_data"], [222, 2, 1, "", "get_distance_upper_bound"], [222, 3, 1, "", "hr_lat_lon"], [222, 3, 1, "", "hr_shape"], [222, 3, 1, "", "hr_time_index"], [222, 3, 1, "", "lr_shape"], [222, 3, 1, "", "nn"], [222, 2, 1, "", "query_tree"], [222, 3, 1, "", "source_data"], [222, 3, 1, "", "source_handler"], [222, 3, 1, "", "source_lat_lon"], [222, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.extended": [[224, 1, 1, "", "Rasterizer"]], "sup3r.preprocessing.rasterizers.extended.Rasterizer": [[224, 2, 1, "", "check_target_and_shape"], [224, 3, 1, "", "data"], [224, 2, 1, "", "get_closest_row_col"], [224, 2, 1, "", "get_lat_lon"], [224, 2, 1, "", "get_raster_index"], [224, 3, 1, "", "grid_shape"], [224, 3, 1, "", "lat_lon"], [224, 2, 1, "", "post_init_log"], [224, 2, 1, "", "rasterize_data"], [224, 2, 1, "", "save_raster_index"], [224, 3, 1, "", "shape"], [224, 3, 1, "", "target"], [224, 3, 1, "", "time_slice"], [224, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers": [[226, 0, 0, "-", "base"], [228, 0, 0, "-", "cc"], [230, 0, 0, "-", "dc"], [232, 0, 0, "-", "dual"], [234, 0, 0, "-", "utilities"]], "sup3r.preprocessing.samplers.base": [[227, 1, 1, "", "Sampler"]], "sup3r.preprocessing.samplers.base.Sampler": [[227, 3, 1, "", "data"], [227, 2, 1, "", "get_sample_index"], [227, 3, 1, "", "hr_exo_features"], [227, 3, 1, "", "hr_features"], [227, 3, 1, "", "hr_features_ind"], [227, 3, 1, "", "hr_out_features"], [227, 3, 1, "", "hr_sample_shape"], [227, 3, 1, "", "lr_only_features"], [227, 2, 1, "", "post_init_log"], [227, 2, 1, "", "preflight"], [227, 3, 1, "", "sample_shape"], [227, 3, 1, "", "shape"], [227, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.cc": [[229, 1, 1, "", "DualSamplerCC"]], "sup3r.preprocessing.samplers.cc.DualSamplerCC": [[229, 2, 1, "", "check_for_consistent_shapes"], [229, 3, 1, "", "data"], [229, 2, 1, "", "get_features"], [229, 2, 1, "", "get_middle_days"], [229, 2, 1, "", "get_sample_index"], [229, 3, 1, "", "hr_exo_features"], [229, 3, 1, "", "hr_features"], [229, 3, 1, "", "hr_features_ind"], [229, 3, 1, "", "hr_out_features"], [229, 3, 1, "", "hr_sample_shape"], [229, 3, 1, "", "lr_only_features"], [229, 2, 1, "", "post_init_log"], [229, 2, 1, "", "preflight"], [229, 2, 1, "", "reduce_high_res_sub_daily"], [229, 3, 1, "", "sample_shape"], [229, 3, 1, "", "shape"], [229, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.dc": [[231, 1, 1, "", "SamplerDC"]], "sup3r.preprocessing.samplers.dc.SamplerDC": [[231, 3, 1, "", "data"], [231, 2, 1, "", "get_sample_index"], [231, 3, 1, "", "hr_exo_features"], [231, 3, 1, "", "hr_features"], [231, 3, 1, "", "hr_features_ind"], [231, 3, 1, "", "hr_out_features"], [231, 3, 1, "", "hr_sample_shape"], [231, 3, 1, "", "lr_only_features"], [231, 2, 1, "", "post_init_log"], [231, 2, 1, "", "preflight"], [231, 3, 1, "", "sample_shape"], [231, 3, 1, "", "shape"], [231, 2, 1, "", "update_weights"], [231, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.dual": [[233, 1, 1, "", "DualSampler"]], "sup3r.preprocessing.samplers.dual.DualSampler": [[233, 2, 1, "", "check_for_consistent_shapes"], [233, 3, 1, "", "data"], [233, 2, 1, "", "get_features"], [233, 2, 1, "", "get_sample_index"], [233, 3, 1, "", "hr_exo_features"], [233, 3, 1, "", "hr_features"], [233, 3, 1, "", "hr_features_ind"], [233, 3, 1, "", "hr_out_features"], [233, 3, 1, "", "hr_sample_shape"], [233, 3, 1, "", "lr_only_features"], [233, 2, 1, "", "post_init_log"], [233, 2, 1, "", "preflight"], [233, 3, 1, "", "sample_shape"], [233, 3, 1, "", "shape"], [233, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.utilities": [[235, 5, 1, "", "daily_time_sampler"], [236, 5, 1, "", "nsrdb_reduce_daily_data"], [237, 5, 1, "", "nsrdb_sub_daily_sampler"], [238, 5, 1, "", "uniform_box_sampler"], [239, 5, 1, "", "uniform_time_sampler"], [240, 5, 1, "", "weighted_box_sampler"], [241, 5, 1, "", "weighted_time_sampler"]], "sup3r.preprocessing.utilities": [[243, 5, 1, "", "check_signatures"], [244, 5, 1, "", "composite_info"], [245, 5, 1, "", "composite_sig"], [246, 5, 1, "", "compute_if_dask"], [247, 5, 1, "", "contains_ellipsis"], [248, 5, 1, "", "dims_array_tuple"], [249, 5, 1, "", "expand_paths"], [250, 5, 1, "", "get_class_kwargs"], [251, 5, 1, "", "get_date_range_kwargs"], [252, 5, 1, "", "get_input_handler_class"], [253, 5, 1, "", "get_obj_params"], [254, 5, 1, "", "get_source_type"], [255, 5, 1, "", "is_type_of"], [256, 5, 1, "", "log_args"], [257, 5, 1, "", "lower_names"], [258, 5, 1, "", "lowered"], [259, 5, 1, "", "make_time_index_from_kws"], [260, 5, 1, "", "numpy_if_tensor"], [261, 5, 1, "", "ordered_array"], [262, 5, 1, "", "ordered_dims"], [263, 5, 1, "", "parse_ellipsis"], [264, 5, 1, "", "parse_features"], [265, 5, 1, "", "parse_keys"], [266, 5, 1, "", "parse_to_list"]], "sup3r.qa": [[268, 0, 0, "-", "qa"], [270, 0, 0, "-", "qa_cli"], [271, 0, 0, "-", "utilities"]], "sup3r.qa.qa": [[269, 1, 1, "", "Sup3rQa"]], "sup3r.qa.qa.Sup3rQa": [[269, 2, 1, "", "bias_correct_input_handler"], [269, 2, 1, "", "close"], [269, 2, 1, "", "coarsen_data"], [269, 2, 1, "", "export"], [269, 3, 1, "", "features"], [269, 2, 1, "", "get_dset_out"], [269, 2, 1, "", "get_node_cmd"], [269, 3, 1, "", "output_names"], [269, 3, 1, "", "output_type"], [269, 2, 1, "", "run"], [269, 3, 1, "", "source_features"]], "sup3r.qa.utilities": [[272, 5, 1, "", "continuous_dist"], [273, 5, 1, "", "direct_dist"], [274, 5, 1, "", "frequency_spectrum"], [275, 5, 1, "", "gradient_dist"], [276, 5, 1, "", "time_derivative_dist"], [277, 5, 1, "", "tke_frequency_spectrum"], [278, 5, 1, "", "tke_wavenumber_spectrum"], [279, 5, 1, "", "wavenumber_spectrum"]], "sup3r.solar": [[281, 0, 0, "-", "solar"], [283, 0, 0, "-", "solar_cli"]], "sup3r.solar.solar": [[282, 1, 1, "", "Solar"]], "sup3r.solar.solar.Solar": [[282, 3, 1, "", "clearsky_ratio"], [282, 2, 1, "", "close"], [282, 3, 1, "", "cloud_mask"], [282, 3, 1, "", "dhi"], [282, 3, 1, "", "dist"], [282, 3, 1, "", "dni"], [282, 2, 1, "", "get_node_cmd"], [282, 2, 1, "", "get_nsrdb_data"], [282, 2, 1, "", "get_sup3r_fps"], [282, 3, 1, "", "ghi"], [282, 3, 1, "", "idnn"], [282, 3, 1, "", "nsrdb_tslice"], [282, 3, 1, "", "out_of_bounds"], [282, 2, 1, "", "preflight"], [282, 2, 1, "", "run_temporal_chunks"], [282, 3, 1, "", "solar_zenith_angle"], [282, 3, 1, "", "time_index"], [282, 2, 1, "", "write"]], "sup3r.solar.solar_cli": [[284, 5, 1, "", "kickoff_local_job"], [285, 5, 1, "", "kickoff_slurm_job"]], "sup3r.utilities": [[287, 1, 1, "", "ModuleName"], [288, 0, 0, "-", "cli"], [291, 0, 0, "-", "era_downloader"], [293, 0, 0, "-", "interpolation"], [295, 0, 0, "-", "loss_metrics"], [309, 0, 0, "-", "pytest"], [326, 0, 0, "-", "utilities"]], "sup3r.utilities.ModuleName": [[287, 2, 1, "", "__add__"], [287, 2, 1, "", "__mul__"], [287, 2, 1, "", "all_names"], [287, 2, 1, "", "capitalize"], [287, 2, 1, "", "casefold"], [287, 2, 1, "", "center"], [287, 2, 1, "", "count"], [287, 2, 1, "", "encode"], [287, 2, 1, "", "endswith"], [287, 2, 1, "", "expandtabs"], [287, 2, 1, "", "find"], [287, 2, 1, "", "format"], [287, 2, 1, "", "format_map"], [287, 2, 1, "", "index"], [287, 2, 1, "", "isalnum"], [287, 2, 1, "", "isalpha"], [287, 2, 1, "", "isascii"], [287, 2, 1, "", "isdecimal"], [287, 2, 1, "", "isdigit"], [287, 2, 1, "", "isidentifier"], [287, 2, 1, "", "islower"], [287, 2, 1, "", "isnumeric"], [287, 2, 1, "", "isprintable"], [287, 2, 1, "", "isspace"], [287, 2, 1, "", "istitle"], [287, 2, 1, "", "isupper"], [287, 2, 1, "", "join"], [287, 2, 1, "", "ljust"], [287, 2, 1, "", "lower"], [287, 2, 1, "", "lstrip"], [287, 2, 1, "", "maketrans"], [287, 2, 1, "", "partition"], [287, 2, 1, "", "removeprefix"], [287, 2, 1, "", "removesuffix"], [287, 2, 1, "", "replace"], [287, 2, 1, "", "rfind"], [287, 2, 1, "", "rindex"], [287, 2, 1, "", "rjust"], [287, 2, 1, "", "rpartition"], [287, 2, 1, "", "rsplit"], [287, 2, 1, "", "rstrip"], [287, 2, 1, "", "split"], [287, 2, 1, "", "splitlines"], [287, 2, 1, "", "startswith"], [287, 2, 1, "", "strip"], [287, 2, 1, "", "swapcase"], [287, 2, 1, "", "title"], [287, 2, 1, "", "translate"], [287, 2, 1, "", "upper"], [287, 2, 1, "", "zfill"]], "sup3r.utilities.cli": [[289, 1, 1, "", "BaseCLI"], [290, 1, 1, "", "SlurmManager"]], "sup3r.utilities.cli.BaseCLI": [[289, 2, 1, "", "add_status_cmd"], [289, 2, 1, "", "check_module_name"], [289, 2, 1, "", "from_config"], [289, 2, 1, "", "from_config_preflight"], [289, 2, 1, "", "kickoff_local_job"], [289, 2, 1, "", "kickoff_slurm_job"]], "sup3r.utilities.cli.SlurmManager": [[290, 2, 1, "", "change_qos"], [290, 2, 1, "", "check_status"], [290, 2, 1, "", "check_status_using_job_id"], [290, 2, 1, "", "format_walltime"], [290, 2, 1, "", "hold"], [290, 2, 1, "", "make_path"], [290, 2, 1, "", "make_sh"], [290, 2, 1, "", "parse_queue_str"], [290, 2, 1, "", "query_queue"], [290, 3, 1, "", "queue"], [290, 3, 1, "", "queue_job_ids"], [290, 3, 1, "", "queue_job_names"], [290, 2, 1, "", "release"], [290, 2, 1, "", "rm"], [290, 2, 1, "", "s"], [290, 2, 1, "", "sbatch"], [290, 2, 1, "", "scancel"], [290, 2, 1, "", "scontrol"], [290, 2, 1, "", "submit"]], "sup3r.utilities.era_downloader": [[292, 1, 1, "", "EraDownloader"]], "sup3r.utilities.era_downloader.EraDownloader": [[292, 2, 1, "", "add_pressure"], [292, 2, 1, "", "all_vars_exist"], [292, 2, 1, "", "convert_z"], [292, 2, 1, "", "download_file"], [292, 2, 1, "", "download_process_combine"], [292, 2, 1, "", "get_cds_client"], [292, 2, 1, "", "get_hours"], [292, 2, 1, "", "get_monthly_file"], [292, 3, 1, "", "level_file"], [292, 2, 1, "", "make_yearly_file"], [292, 2, 1, "", "make_yearly_var_file"], [292, 3, 1, "", "monthly_file"], [292, 2, 1, "", "prep_var_lists"], [292, 2, 1, "", "process_and_combine"], [292, 2, 1, "", "process_level_file"], [292, 2, 1, "", "process_surface_file"], [292, 2, 1, "", "run"], [292, 2, 1, "", "run_for_var"], [292, 2, 1, "", "run_month"], [292, 2, 1, "", "run_qa"], [292, 3, 1, "", "surface_file"], [292, 3, 1, "", "variables"]], "sup3r.utilities.interpolation": [[294, 1, 1, "", "Interpolator"]], "sup3r.utilities.interpolation.Interpolator": [[294, 2, 1, "", "get_level_masks"], [294, 2, 1, "", "interp_to_level"]], "sup3r.utilities.loss_metrics": [[296, 1, 1, "", "CoarseMseLoss"], [297, 1, 1, "", "ExpLoss"], [298, 1, 1, "", "LowResLoss"], [299, 1, 1, "", "MaterialDerivativeLoss"], [300, 1, 1, "", "MmdLoss"], [301, 1, 1, "", "PerceptualLoss"], [302, 1, 1, "", "SpatialDerivativeLoss"], [303, 1, 1, "", "SpatialExtremesLoss"], [304, 1, 1, "", "SpatialFftLoss"], [305, 1, 1, "", "SpatiotemporalFftLoss"], [306, 1, 1, "", "TemporalDerivativeLoss"], [307, 1, 1, "", "TemporalExtremesLoss"], [308, 5, 1, "", "gaussian_kernel"]], "sup3r.utilities.loss_metrics.CoarseMseLoss": [[296, 2, 1, "", "__call__"], [296, 2, 1, "", "call"], [296, 2, 1, "", "from_config"], [296, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.ExpLoss": [[297, 2, 1, "", "__call__"], [297, 2, 1, "", "call"], [297, 2, 1, "", "from_config"], [297, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.LowResLoss": [[298, 2, 1, "", "__call__"], [298, 2, 1, "", "call"], [298, 2, 1, "", "from_config"], [298, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.MaterialDerivativeLoss": [[299, 2, 1, "", "__call__"], [299, 2, 1, "", "call"], [299, 2, 1, "", "from_config"], [299, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.MmdLoss": [[300, 2, 1, "", "__call__"], [300, 2, 1, "", "call"], [300, 2, 1, "", "from_config"], [300, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.PerceptualLoss": [[301, 2, 1, "", "__call__"], [301, 2, 1, "", "call"], [301, 2, 1, "", "from_config"], [301, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatialDerivativeLoss": [[302, 2, 1, "", "__call__"], [302, 2, 1, "", "call"], [302, 2, 1, "", "from_config"], [302, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatialExtremesLoss": [[303, 2, 1, "", "__call__"], [303, 2, 1, "", "call"], [303, 2, 1, "", "from_config"], [303, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatialFftLoss": [[304, 2, 1, "", "__call__"], [304, 2, 1, "", "call"], [304, 2, 1, "", "from_config"], [304, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss": [[305, 2, 1, "", "__call__"], [305, 2, 1, "", "call"], [305, 2, 1, "", "from_config"], [305, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.TemporalDerivativeLoss": [[306, 2, 1, "", "__call__"], [306, 2, 1, "", "call"], [306, 2, 1, "", "from_config"], [306, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.TemporalExtremesLoss": [[307, 2, 1, "", "__call__"], [307, 2, 1, "", "call"], [307, 2, 1, "", "from_config"], [307, 2, 1, "", "get_config"]], "sup3r.utilities.pytest": [[310, 0, 0, "-", "helpers"]], "sup3r.utilities.pytest.helpers": [[311, 1, 1, "", "BatchHandlerTesterCC"], [312, 1, 1, "", "BatchHandlerTesterDC"], [313, 5, 1, "", "BatchHandlerTesterFactory"], [314, 4, 1, "", "DualSamplerTesterCC"], [315, 1, 1, "", "DummyData"], [316, 1, 1, "", "DummySampler"], [317, 1, 1, "", "SamplerTester"], [318, 4, 1, "", "SamplerTesterDC"], [319, 5, 1, "", "make_collect_chunks"], [320, 5, 1, "", "make_fake_cs_ratio_files"], [321, 5, 1, "", "make_fake_dset"], [322, 5, 1, "", "make_fake_h5_chunks"], [323, 5, 1, "", "make_fake_nc_file"], [324, 5, 1, "", "make_fake_tif"], [325, 5, 1, "", "test_sampler_factory"]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC": [[311, 4, 1, "", "SAMPLER"], [311, 4, 1, "", "TRAIN_QUEUE"], [311, 4, 1, "", "VAL_QUEUE"], [311, 2, 1, "", "check_enhancement_factors"], [311, 2, 1, "", "check_features"], [311, 2, 1, "", "check_shared_attr"], [311, 3, 1, "", "container_weights"], [311, 3, 1, "", "data"], [311, 2, 1, "", "enqueue_batches"], [311, 3, 1, "", "features"], [311, 2, 1, "", "get_batch"], [311, 2, 1, "", "get_container_index"], [311, 2, 1, "", "get_queue"], [311, 2, 1, "", "get_random_container"], [311, 3, 1, "", "hr_shape"], [311, 2, 1, "", "init_samplers"], [311, 2, 1, "", "log_queue_info"], [311, 3, 1, "", "lr_shape"], [311, 2, 1, "", "post_init_log"], [311, 2, 1, "", "post_proc"], [311, 2, 1, "", "preflight"], [311, 3, 1, "", "queue_futures"], [311, 3, 1, "", "queue_len"], [311, 3, 1, "", "queue_shape"], [311, 3, 1, "", "queue_thread"], [311, 3, 1, "", "running"], [311, 2, 1, "", "sample_batch"], [311, 2, 1, "", "sample_batches"], [311, 3, 1, "", "shape"], [311, 3, 1, "", "shapes"], [311, 2, 1, "", "start"], [311, 2, 1, "", "stop"], [311, 2, 1, "", "transform"], [311, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC": [[312, 4, 1, "", "SAMPLER"], [312, 4, 1, "", "TRAIN_QUEUE"], [312, 4, 1, "", "VAL_QUEUE"], [312, 2, 1, "", "check_enhancement_factors"], [312, 2, 1, "", "check_features"], [312, 2, 1, "", "check_shared_attr"], [312, 3, 1, "", "container_weights"], [312, 3, 1, "", "data"], [312, 2, 1, "", "enqueue_batches"], [312, 3, 1, "", "features"], [312, 2, 1, "", "get_batch"], [312, 2, 1, "", "get_container_index"], [312, 2, 1, "", "get_queue"], [312, 2, 1, "", "get_random_container"], [312, 3, 1, "", "hr_shape"], [312, 2, 1, "", "init_samplers"], [312, 2, 1, "", "log_queue_info"], [312, 3, 1, "", "lr_shape"], [312, 2, 1, "", "post_init_log"], [312, 2, 1, "", "post_proc"], [312, 2, 1, "", "preflight"], [312, 3, 1, "", "queue_futures"], [312, 3, 1, "", "queue_len"], [312, 3, 1, "", "queue_shape"], [312, 3, 1, "", "queue_thread"], [312, 3, 1, "", "running"], [312, 2, 1, "", "sample_batch"], [312, 2, 1, "", "sample_batches"], [312, 3, 1, "", "shape"], [312, 3, 1, "", "shapes"], [312, 3, 1, "", "spatial_weights"], [312, 2, 1, "", "start"], [312, 2, 1, "", "stop"], [312, 3, 1, "", "temporal_weights"], [312, 2, 1, "", "transform"], [312, 2, 1, "", "update_record"], [312, 2, 1, "", "update_weights"], [312, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.DummyData": [[315, 3, 1, "", "data"], [315, 2, 1, "", "post_init_log"], [315, 3, 1, "", "shape"], [315, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.DummySampler": [[316, 3, 1, "", "data"], [316, 2, 1, "", "get_sample_index"], [316, 3, 1, "", "hr_exo_features"], [316, 3, 1, "", "hr_features"], [316, 3, 1, "", "hr_features_ind"], [316, 3, 1, "", "hr_out_features"], [316, 3, 1, "", "hr_sample_shape"], [316, 3, 1, "", "lr_only_features"], [316, 2, 1, "", "post_init_log"], [316, 2, 1, "", "preflight"], [316, 3, 1, "", "sample_shape"], [316, 3, 1, "", "shape"], [316, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.SamplerTester": [[317, 3, 1, "", "data"], [317, 2, 1, "", "get_sample_index"], [317, 3, 1, "", "hr_exo_features"], [317, 3, 1, "", "hr_features"], [317, 3, 1, "", "hr_features_ind"], [317, 3, 1, "", "hr_out_features"], [317, 3, 1, "", "hr_sample_shape"], [317, 3, 1, "", "lr_only_features"], [317, 2, 1, "", "post_init_log"], [317, 2, 1, "", "preflight"], [317, 3, 1, "", "sample_shape"], [317, 3, 1, "", "shape"], [317, 2, 1, "", "wrap"]], "sup3r.utilities.utilities": [[327, 1, 1, "", "Timer"], [328, 5, 1, "", "camel_to_underscore"], [329, 5, 1, "", "enforce_limits"], [330, 5, 1, "", "generate_random_string"], [331, 5, 1, "", "get_dset_attrs"], [332, 5, 1, "", "get_feature_basename"], [333, 5, 1, "", "get_tmp_file"], [334, 5, 1, "", "nn_fill_array"], [335, 5, 1, "", "pd_date_range"], [336, 5, 1, "", "preprocess_datasets"], [337, 5, 1, "", "safe_cast"], [338, 5, 1, "", "safe_serialize"], [339, 5, 1, "", "spatial_coarsening"], [340, 5, 1, "", "temporal_coarsening"], [341, 5, 1, "", "xr_open_mfdataset"]], "sup3r.utilities.utilities.Timer": [[327, 2, 1, "", "__call__"], [327, 3, 1, "", "elapsed"], [327, 3, 1, "", "elapsed_str"], [327, 2, 1, "", "start"], [327, 2, 1, "", "stop"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "std:cmdoption"}, "terms": {"": [7, 9, 10, 11, 12, 13, 25, 30, 32, 37, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 87, 109, 148, 162, 164, 195, 201, 203, 205, 207, 212, 219, 220, 236, 249, 282, 287, 290, 343, 346, 347, 348], "0": [5, 7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 28, 30, 32, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 87, 95, 99, 101, 104, 112, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 144, 157, 158, 159, 160, 162, 163, 166, 167, 171, 175, 180, 219, 220, 221, 222, 227, 229, 231, 236, 240, 241, 272, 273, 274, 275, 276, 277, 278, 279, 282, 290, 300, 308, 312, 316, 317, 319, 322, 335, 339, 343, 346, 347, 348], "00": [51, 64], "0000": [212, 287], "0001": [43, 45, 47, 87], "0002": [41, 43, 45, 47, 57, 66], "00022470": [188, 191], "001": [41, 43, 47, 57, 66], "002": [41, 43, 45, 47, 57, 66], "005": [41, 43, 45, 47, 57, 66], "0065": 59, "007f": [212, 287], "00h": 30, "01": [28, 30, 41, 43, 45, 47, 51, 57, 64, 66, 347], "01507": [346, 348], "01736911": 59, "01mm": 30, "02": [51, 64], "024": [346, 348], "07": 30, "07c": 59, "08go28308": [346, 347, 348], "0998": [41, 43, 45, 47, 57, 66], "0d": [43, 45, 47, 57, 66, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "1": [7, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 28, 30, 32, 36, 37, 41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 78, 87, 104, 106, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 148, 152, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 175, 195, 201, 203, 205, 207, 212, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 240, 263, 269, 273, 274, 275, 276, 277, 278, 279, 282, 287, 290, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317, 319, 322, 335, 339, 343, 346, 347, 350], "10": [7, 9, 10, 11, 12, 13, 30, 32, 47, 75, 104, 148, 158, 188, 191, 195, 224, 282, 346, 347, 348], "100": [47, 78, 97, 148, 157, 158, 159, 160, 166, 167, 170, 171, 180, 197, 219, 220, 343, 346, 348], "1000": [197, 292], "100km": [219, 220, 346], "100m": [157, 158, 159, 160, 166, 167, 170, 171, 292], "101": [30, 32], "101325": 59, "1016": [346, 348], "102603": 348, "1038": [7, 9, 10, 11, 12, 13, 346, 348], "10470503": [188, 191], "105": 158, "1073": 348, "1080": [188, 191], "10m": [158, 219, 220, 292], "10x10x50": 158, "11": [348, 349], "111774": [346, 348], "12": [10, 11, 13, 30, 32, 36], "120": [30, 32], "13": 292, "130": [95, 99, 101, 343, 347], "132": 292, "14": 347, "15": [30, 51, 64, 75, 219, 220, 347], "15586596": 348, "157e": 30, "15min": 276, "15th": 30, "15x": 347, "16": [28, 30, 57, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 227, 229, 231, 233, 311, 312], "17": [30, 32], "170": 346, "180": [95, 99, 101, 210], "1918964117": 348, "1970814": [346, 348], "1977": [188, 191], "1d": [7, 9, 10, 11, 12, 13, 30, 32, 97, 104, 222, 274, 277, 278, 279, 282], "1mm": 30, "1st": [30, 32, 55, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "1x": 346, "2": [22, 23, 24, 25, 28, 30, 32, 41, 43, 45, 47, 49, 57, 59, 66, 75, 78, 95, 99, 101, 104, 106, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 148, 152, 154, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 180, 195, 196, 198, 201, 203, 205, 207, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 235, 236, 240, 241, 269, 292, 299, 311, 312, 315, 316, 317, 319, 320, 322, 339, 346, 347, 350], "20": [47, 148, 224, 240, 292, 319, 322, 343, 346], "200": 346, "2000": [346, 347], "2006": 30, "200m": 158, "2014": [7, 9, 10, 11, 12, 13], "2015": [23, 24, 28, 30, 32, 37, 346], "2018": [43, 47, 57, 66], "2019": 346, "2020": 348, "2021": 292, "2022": 287, "2023": [346, 347], "2024": [105, 151, 346, 347, 348], "2025": [346, 347, 348], "20km": 59, "225": 180, "24": [30, 32, 57, 229, 235, 237, 282, 343, 346], "24156": 180, "2421": [28, 30], "2442": [28, 30], "24hour": 57, "25": [13, 28, 30, 95, 99, 101, 343], "25328": 59, "25984": [346, 348], "25km": [219, 220], "26": 287, "27": 346, "28": [30, 32], "2d": [24, 30, 54, 59, 75, 78, 104, 212, 215, 219, 220, 221, 222, 224, 238, 269, 282, 339], "2gb": 78, "2km": 347, "2nd": [54, 55, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 164], "2x": [75, 322], "3": [28, 30, 43, 47, 55, 57, 59, 66, 75, 78, 104, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 163, 166, 167, 170, 171, 201, 203, 205, 207, 212, 215, 217, 224, 227, 229, 231, 233, 236, 240, 269, 282, 287, 292, 311, 312, 315, 316, 317, 343, 346, 347, 349], "30": [30, 32, 51, 64, 346], "30km": [43, 45, 47, 51, 57, 59, 66, 163, 347], "31": 346, "3390": [347, 348], "360": [95, 99, 101, 273, 275, 276, 319, 322], "366": [30, 32], "39": 158, "3d": [21, 22, 23, 24, 25, 36, 37, 55, 59, 75, 104, 144, 162, 196, 198, 212, 214, 215, 339], "3rd": [23, 24, 25, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "3x": 347, "4": [7, 9, 10, 11, 12, 13, 16, 23, 24, 28, 30, 37, 59, 72, 75, 78, 92, 112, 138, 139, 145, 219, 220, 240, 269, 285, 289, 312, 335, 340, 343, 346, 348, 349], "40": [240, 273, 275, 276, 346], "40m": [157, 158, 159, 160, 166, 167, 170, 171], "4364": [7, 9, 10, 11, 12, 13], "44307": 59, "45": [30, 43, 47, 51, 57, 64, 66], "48": [282, 343], "4d": [24, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 144, 162, 212, 294, 312, 339], "4km": [57, 219, 220, 273, 275, 346], "4x": [219, 220], "5": [13, 30, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 112, 158, 231, 269, 282, 287, 312, 343, 346, 347, 348], "50": [13, 95, 99, 101, 158], "51870": 78, "5281": 348, "53": 292, "5839": 346, "5d": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 66, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 144, 145, 229, 236, 296, 312, 339, 340], "5x": [163, 322, 346, 347], "5x5x10": 158, "6": [28, 30, 43, 47, 57, 66, 346], "60": [292, 348], "60min": [43, 45, 47, 51, 57, 59, 66], "6220": 348, "64": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "69231": 59, "6938": [30, 32], "6959": [30, 32], "6km": 163, "7": [30, 75, 158, 282], "700": 292, "72": 229, "75": 13, "8": [41, 43, 45, 47, 57, 66, 75, 105, 151, 212, 229, 241, 287, 290, 343, 346], "80": [95, 99, 101], "800": 292, "80m": 158, "8455": 348, "86": 180, "9": [43, 47, 57, 66, 229, 273, 275, 276, 346, 348], "900": 292, "925": 292, "95": [13, 43, 47, 57, 66, 343], "950": 292, "975": 292, "99": [13, 43, 47, 57, 66, 273, 275, 276, 282], "9924283": 59, "99th": [273, 275, 276], "A": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 49, 51, 54, 55, 57, 59, 66, 69, 78, 107, 163, 212, 217, 219, 220, 227, 229, 231, 233, 249, 269, 287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 316, 317, 335, 343, 346, 347], "As": [41, 43, 45, 47, 57, 66, 78, 269, 287, 346], "At": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 348], "Be": [24, 37], "But": 24, "By": [15, 16, 71, 72, 87, 91, 92, 148, 284, 285, 289, 348], "For": [7, 9, 10, 11, 12, 13, 27, 28, 30, 32, 41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 78, 89, 95, 99, 101, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 130, 131, 132, 133, 134, 135, 136, 156, 157, 158, 159, 160, 162, 164, 166, 167, 201, 203, 205, 207, 215, 219, 220, 221, 224, 229, 273, 275, 276, 282, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 327, 343, 346, 347, 348, 349], "If": [7, 9, 10, 11, 12, 13, 15, 16, 22, 23, 24, 25, 28, 30, 32, 36, 37, 41, 43, 45, 47, 49, 55, 57, 66, 69, 71, 72, 75, 78, 87, 89, 91, 92, 95, 97, 99, 101, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 201, 203, 205, 207, 212, 215, 217, 219, 220, 224, 227, 229, 231, 236, 237, 240, 241, 252, 264, 265, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 287, 289, 292, 294, 311, 312, 316, 317, 320, 329, 339, 346, 347], "In": [7, 9, 10, 11, 12, 13, 28, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 162, 164, 212, 287, 311, 312, 346, 347], "It": [24, 30, 32, 55, 75, 108, 217, 282, 348], "Its": [24, 348], "No": [54, 346, 347, 348], "Not": [41, 43, 45, 47, 57, 66, 157], "Of": [151, 229], "One": [7, 9, 10, 11, 12, 13, 30, 32, 36, 37, 249, 254, 348], "The": [7, 9, 10, 11, 12, 13, 24, 27, 28, 30, 32, 34, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 95, 99, 101, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 139, 148, 161, 162, 163, 164, 170, 201, 203, 205, 207, 212, 215, 217, 219, 220, 221, 222, 224, 229, 233, 282, 287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 343, 346, 347, 348, 349], "There": [30, 32, 37, 116, 343, 346, 347], "These": [20, 36, 37, 41, 43, 45, 47, 49, 51, 57, 59, 66, 75, 78, 102, 104, 108, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 141, 151, 152, 157, 158, 159, 160, 166, 167, 201, 203, 205, 206, 207, 224, 226, 227, 229, 231, 232, 233, 269, 282, 311, 316, 317], "To": [30, 43, 47, 57, 66, 104, 112, 116, 148, 162, 195, 221, 291, 343, 346, 347, 348], "Will": [157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 224], "With": [55, 57, 212, 225, 287, 348], "_": [87, 292], "__add__": [212, 287], "__call__": [109, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 327], "__contains__": [157, 158, 159, 160, 166, 167, 170, 171], "__getattr__": 104, "__getitem__": [104, 201, 203, 205, 207, 212, 247, 287], "__init__": 256, "__mul__": [104, 212, 287], "__name__": 109, "__next__": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 227, 229, 231, 233, 311, 312, 316, 317], "__signature__": 109, "__subclasscheck__": 109, "_adder": [22, 25, 36], "_combin": 292, "_d": [104, 108], "_get_pad_width": 75, "_grid_shap": [215, 224], "_group": 97, "_hr_crop_slic": 75, "_mean": [41, 43, 45, 47, 57, 66], "_ob": [66, 78, 221], "_param": [23, 24, 30, 32, 37], "_s_hr_crop_slic": 75, "_s_hr_slice": 75, "_s_lr_crop_slic": 75, "_s_lr_pad_slic": 75, "_s_lr_slice": 75, "_scalar": [22, 25, 36], "_stdev": [41, 43, 45, 47, 57, 66], "_t_hr_crop_slic": 75, "_t_lr_crop_slic": 75, "_t_lr_pad_slic": 75, "_target": [215, 224], "_temporal_pad": [55, 57], "_write_singl": [89, 219, 220], "ab": [212, 287], "abatzogl": [28, 30], "abc": [5, 41, 49, 85, 109, 126, 176, 203, 219], "abcmeta": 109, "abil": [206, 348], "abl": 204, "about": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 226, 311, 312, 346, 348], "abov": [95, 99, 101, 158, 188, 191, 199, 273, 275, 276, 294], "absolut": [37, 41, 43, 45, 47, 57, 66], "abstract": [48, 49, 53, 85, 129, 130, 176, 202, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "abstractbatchqueu": [114, 115, 117, 118, 119, 121, 122, 123, 128, 141], "abstractbiascorrect": [9, 32], "abstractinterfac": [43, 45, 51, 53], "abstractsinglemodel": [43, 45], "ac36": [346, 347, 348], "academi": 348, "accept": [28, 30, 78, 298, 340, 346, 347, 348], "access": [7, 9, 10, 11, 12, 13, 30, 32, 34, 102, 104, 108, 158, 176, 201, 203, 205, 207, 221, 237, 317, 345, 348], "accessor": [157, 158, 159, 160, 166, 167, 176, 212], "accord": [75, 78, 111, 144, 145, 162, 163, 164, 230, 269, 339, 340], "accordingli": [6, 219, 220], "account": [75, 273, 275, 276], "accross": 75, "accur": 346, "accuraci": [299, 302, 303, 304, 305, 306, 307, 348], "accurari": [302, 306], "achiev": 199, "acknowledg": 345, "across": [7, 9, 10, 11, 12, 13, 30, 32, 47, 60, 75, 78, 89, 112, 138, 139, 142, 154, 194, 195, 231, 242, 282, 312, 326, 346, 348], "act": 66, "action": 348, "activ": [22, 23, 24, 25, 290, 327, 348, 349], "actual": [32, 43, 47, 57, 66, 78, 282, 343, 346], "ad": [41, 43, 45, 47, 57, 66, 69, 97, 148, 157, 343], "adam": [41, 43, 45, 47, 57, 66], "adapt": [43, 47, 57, 66, 112, 138, 139, 224, 312, 348], "adaptive_update_bound": [43, 47, 57, 66], "adaptive_update_fract": [43, 47, 57, 66], "add": [43, 45, 47, 49, 55, 57, 59, 66, 78, 97, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 163, 166, 167, 170, 171, 282, 292, 311, 312], "add_dataset": 97, "add_dims_to_data_var": 104, "add_pressur": 292, "add_status_cmd": 289, "adder": [7, 9, 10, 11, 12, 13, 21, 22, 25, 27, 30, 32, 97], "adder_rang": 25, "addit": [16, 41, 43, 45, 47, 54, 57, 59, 66, 72, 92, 95, 99, 101, 104, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 200, 201, 203, 205, 207, 215, 217, 224, 226, 227, 229, 231, 233, 269, 285, 289, 290, 298, 303, 307, 311, 312, 315, 316, 317, 346, 347], "address": [30, 43, 45, 47, 57, 66], "adher": [343, 348], "adjust": [7, 9, 10, 11, 12, 13, 30, 32, 57, 59, 75], "advanc": [346, 347, 348], "advers": 290, "adversari": [43, 47, 57, 66, 348], "affect": [9, 10, 11, 12, 13, 27, 30, 32], "after": [41, 43, 45, 47, 57, 66, 81, 87, 97, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 212, 215, 217, 219, 220, 224, 227, 229, 231, 233, 282, 287, 290, 311, 312, 315, 316, 317, 343], "again": [346, 347], "against": [18, 87], "agenc": 348, "agg_factor": 282, "aggreg": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 51, 59, 108, 166, 167, 219, 220, 221, 222, 269, 282], "agnost": [221, 268, 269], "air": [59, 182, 183, 184, 185], "aka": 97, "al": [23, 24, 30, 32, 37, 43, 47, 57, 66, 346], "alia": [112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 159, 160, 205, 311, 312, 314, 318], "alias": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "align": [24, 198], "all": [7, 9, 10, 11, 12, 13, 18, 19, 28, 30, 32, 35, 41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 85, 87, 89, 95, 97, 99, 101, 102, 103, 104, 105, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 173, 174, 176, 201, 203, 205, 207, 210, 212, 215, 217, 219, 220, 224, 225, 227, 257, 261, 264, 265, 269, 282, 287, 289, 290, 292, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 343, 346, 347, 348], "all_nam": 287, "all_vars_exist": 292, "allevi": [9, 10, 11, 12, 13, 27, 30, 32], "alloc": [16, 72, 92, 285, 289, 290, 343], "allow": [7, 9, 10, 11, 12, 13, 25, 30, 32, 43, 47, 57, 66, 69, 78, 89, 109, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 225, 273, 275, 276, 346, 347, 348], "allowed_const": [69, 78], "almost": [296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "along": [30, 32, 59, 78, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 159, 160, 166, 167, 171, 269, 346], "alpha": [212, 287], "alphabet": [212, 287], "alreadi": [7, 9, 10, 11, 12, 13, 18, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 78, 102, 104, 157, 158, 159, 160, 166, 167, 170, 171, 176], "also": [7, 9, 10, 11, 12, 13, 19, 24, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 78, 97, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 127, 128, 138, 139, 140, 141, 148, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 166, 167, 170, 171, 176, 206, 212, 214, 215, 217, 219, 220, 224, 226, 227, 229, 231, 233, 251, 259, 269, 287, 290, 292, 311, 312, 316, 317, 343, 346, 347, 348], "altern": [7, 9, 10, 11, 12, 13, 30, 32, 157, 158, 159, 160, 166, 167, 170, 171, 269, 348], "alwai": [41, 43, 45, 47, 53, 54, 55, 57, 66, 75, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 202, 229], "ambient": 180, "ametsoc": 180, "amount": [43, 47, 57, 66], "amplitud": [274, 277, 278, 279], "an": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 28, 30, 32, 36, 37, 41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 97, 104, 106, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 212, 215, 219, 220, 221, 224, 227, 229, 233, 235, 237, 247, 255, 263, 264, 269, 272, 273, 275, 276, 282, 287, 290, 292, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 334, 346, 347, 348], "analysi": 348, "analyst": 350, "analyt": [30, 32], "analyz": [28, 30], "ancillari": 347, "andrew": [346, 348], "angl": [181, 195, 196, 198, 282], "ani": [7, 9, 10, 11, 12, 13, 30, 32, 59, 69, 75, 78, 89, 95, 99, 101, 104, 157, 158, 159, 160, 166, 167, 170, 171, 175, 176, 212, 217, 219, 220, 227, 229, 231, 233, 249, 269, 287, 316, 317, 332, 334, 343, 346], "annot": 256, "annual": [12, 22, 25, 30, 32, 36, 346, 347], "anoth": [13, 49, 269, 273, 275, 276], "anyon": 346, "anyth": [30, 51, 59, 213], "api": [291, 292, 346, 347], "appar": 125, "append": [104, 269, 289, 347], "appli": [18, 21, 23, 24, 28, 29, 30, 31, 33, 37, 41, 43, 45, 47, 57, 66, 75, 78, 108, 126, 219, 220, 246, 269, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 336, 346, 348], "applic": [69, 159, 160, 165, 228, 229, 346, 347], "approach": [105, 347, 348], "appropri": [78, 97, 162, 217, 290], "approxim": [7, 9, 10, 11, 12, 13, 30, 32, 282], "ar": [7, 9, 10, 11, 12, 13, 19, 22, 23, 24, 25, 28, 30, 32, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 87, 89, 95, 97, 99, 101, 102, 104, 105, 108, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 151, 152, 156, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 173, 175, 201, 203, 205, 206, 207, 212, 213, 215, 217, 221, 224, 226, 227, 229, 230, 231, 232, 233, 269, 282, 287, 292, 294, 299, 311, 312, 316, 317, 329, 336, 343, 346, 347, 348, 349], "arang": 75, "arbitrari": 157, "architectur": 67, "area": [78, 292, 346], "arg": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 41, 43, 45, 47, 51, 57, 59, 62, 66, 69, 78, 85, 87, 89, 97, 104, 108, 109, 148, 157, 158, 159, 160, 166, 167, 171, 212, 256, 269, 282, 287, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 317, 335, 343], "arg1": 343, "arg2": 343, "args_dict": [106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 311, 312, 315, 316, 317], "argument": [7, 9, 10, 11, 12, 13, 24, 30, 32, 34, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 66, 69, 78, 87, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 163, 166, 167, 170, 171, 176, 201, 203, 205, 207, 212, 215, 217, 224, 227, 229, 231, 233, 243, 269, 282, 287, 290, 292, 311, 312, 315, 316, 317, 343, 347], "around": [7, 9, 10, 11, 12, 13, 30, 32, 59, 108], "arr": [28, 30, 59, 238, 246, 248, 260], "arr_siz": 80, "arrai": [7, 9, 10, 11, 12, 13, 18, 19, 22, 23, 24, 25, 28, 30, 32, 34, 36, 37, 41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 66, 69, 75, 77, 78, 80, 87, 95, 97, 99, 101, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 144, 145, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 188, 195, 196, 198, 201, 203, 205, 207, 215, 219, 220, 221, 222, 224, 227, 229, 231, 233, 235, 236, 238, 240, 246, 248, 260, 261, 263, 269, 272, 274, 277, 278, 279, 282, 294, 311, 312, 316, 317, 319, 320, 322, 329, 334, 339, 340], "arrang": [95, 99, 101], "articl": [346, 347, 348], "as_arrai": 104, "asarrai": [114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 141, 311], "ascii": [212, 287], "ascr": [346, 347, 348], "ask": 170, "assign": [78, 104], "assign_coord": 104, "associ": [23, 24, 25, 30, 41, 43, 45, 47, 57, 66, 107, 112, 231, 274, 277, 278, 279, 312, 343], "assum": [9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 37, 43, 45, 47, 49, 55, 57, 66, 87, 95, 99, 101, 108, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 162, 174, 212, 215, 224, 236, 237, 281, 282, 287, 299, 320, 348, 349], "attempt": 59, "attent": [30, 32], "attr": [97, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 311, 312, 331], "attribut": [7, 9, 10, 11, 12, 13, 19, 30, 32, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 75, 77, 78, 85, 87, 89, 95, 96, 97, 99, 101, 104, 106, 107, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 163, 164, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 203, 205, 207, 212, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 261, 269, 282, 287, 290, 292, 296, 298, 299, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 327, 331, 346], "attrribut": 331, "author": [346, 347, 348], "auto": [148, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 219, 220, 221, 222, 224, 292, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "autom": 343, "automat": [23, 24, 25, 43, 47, 57, 66, 97, 148, 215, 219, 220, 221], "avail": [9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 53, 54, 55, 57, 66, 78, 87, 97, 104, 126, 157, 158, 159, 160, 166, 167, 170, 171, 197, 201, 203, 205, 207, 215, 217, 224, 238, 239, 240, 241, 253, 264, 287, 346, 347, 348], "averag": [7, 9, 10, 11, 12, 13, 25, 30, 32, 41, 43, 45, 47, 57, 59, 66, 108, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 157, 166, 167, 174, 269, 278, 279, 281, 282, 296, 298, 312, 340, 343, 348], "avg": [5, 7, 9, 10, 11, 12, 13, 30, 32], "avoid": [66, 251, 330], "aw": [97, 346, 347], "awai": [22, 23, 25, 36, 37, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 166, 167, 215, 224, 311, 312], "ax": [22, 23, 24, 25, 51, 59, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 298, 311, 312], "axi": [23, 24, 25, 43, 47, 51, 55, 57, 59, 64, 66, 144, 157, 158, 159, 160, 166, 167, 171, 229, 235, 236, 237, 278, 279, 282, 339], "b": [199, 343, 346, 347], "back": [24, 78, 95, 104, 196, 282], "background": [290, 343], "background_stdout": 290, "bam": 180, "base": [1, 5, 9, 10, 11, 12, 13, 18, 19, 27, 28, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 62, 66, 69, 75, 77, 78, 87, 89, 99, 101, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 154, 162, 163, 164, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 201, 204, 205, 206, 207, 212, 217, 219, 220, 221, 222, 224, 229, 230, 231, 233, 240, 241, 253, 269, 282, 287, 288, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 327, 332, 333, 343, 346, 347, 348], "base_": [23, 24, 30, 32, 36, 37], "base_data": [7, 9, 10, 11, 12, 13, 30, 32], "base_dh_inst": [7, 9, 10, 11, 12, 13, 30, 32], "base_dist": [7, 9, 10, 11, 12, 13, 30, 32], "base_dset": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 343], "base_fp": [7, 9, 10, 11, 12, 13, 30, 32, 343], "base_gid": [7, 9, 10, 11, 12, 13, 30, 32], "base_handl": [7, 9, 10, 11, 12, 13, 30, 32], "base_handler_kwarg": [7, 9, 10, 11, 12, 13, 30, 32], "base_load": [159, 160, 201, 203, 205, 207], "base_ti": 30, "basecollector": [87, 89], "basederiv": 171, "baseexoraster": [163, 220, 221, 222], "baselin": [7, 9, 10, 11, 12, 13, 30, 32, 64, 346], "baseload": [157, 158, 159, 160, 166, 167, 201, 205, 207, 224], "basemodel": [43, 45, 47, 49, 57, 66], "basenam": 197, "baseraster": 224, "basi": [10, 12, 22, 25], "basic": [43, 45, 69, 78, 103, 106, 146, 147, 149, 169, 226, 227, 346, 348], "batch": [41, 43, 45, 47, 49, 53, 54, 55, 57, 61, 62, 66, 102, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 201, 203, 205, 207, 227, 229, 231, 311, 312, 313, 316, 317, 342, 346, 347], "batch_handl": [41, 43, 45, 47, 57, 62, 66, 347], "batch_job": 343, "batch_siz": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 227, 229, 231, 233, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317], "batcher": [102, 206], "batchhandl": [43, 45, 47, 57, 62, 66, 102, 106, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 311, 312, 315, 316, 317], "batchhandlerclass": 313, "batchhandlerdc": [47, 114, 115, 116, 123, 311, 312], "batchhandlerfactori": 112, "batchqueu": [102, 114, 115, 123, 126, 128, 130, 141, 226, 311], "batchqueuedc": [112, 116, 139, 312], "bc": 20, "bc_file": [18, 36, 37], "bc_kwarg": [34, 35], "bc_method": [34, 35], "bc_util": [23, 24, 30, 32, 37], "becaus": [78, 152, 154, 166, 167], "been": [30, 59, 75, 78, 104, 105, 108, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 141, 151, 212, 229, 282, 287, 292, 311, 348], "befor": [7, 9, 10, 11, 12, 13, 30, 32, 43, 47, 57, 66, 69, 75, 78, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 166, 167, 170, 171, 212, 219, 220, 269, 282, 287, 311, 312, 336, 343], "beforehand": 148, "begin": [51, 64, 212, 235, 237, 287], "behavior": [15, 16, 71, 72, 87, 91, 92, 107, 284, 285, 289], "behind": 97, "being": [7, 9, 10, 11, 12, 13, 15, 16, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 57, 59, 66, 71, 72, 78, 87, 91, 92, 97, 104, 107, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 273, 275, 276, 284, 285, 289], "belong": [87, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 311, 312, 315, 316, 317], "below": [41, 43, 45, 47, 57, 66, 282, 294, 343, 346, 348, 349], "benefit": 346, "benton": [346, 347, 348], "best": [59, 75, 78, 346, 347], "better": [24, 105, 346], "between": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 59, 66, 75, 78, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 210, 212, 219, 220, 227, 229, 231, 233, 272, 282, 287, 301, 311, 312, 316, 317, 319, 322, 327, 346, 348], "beyond": [9, 10, 11, 12, 13, 27, 30, 32], "bh": 347, "bia": [41, 43, 45, 47, 57, 59, 66, 78, 212, 269, 342, 346, 348], "bias": [7, 8, 9, 10, 11, 12, 13, 23, 24, 27, 30, 32, 37, 219, 220, 343], "bias_": [23, 24, 30, 32, 37], "bias_calc": [36, 37, 343], "bias_calc_class": 343, "bias_correct_input_handl": 269, "bias_correct_kwarg": [78, 269], "bias_correct_method": [34, 35, 78, 269], "bias_data": [7, 9, 10, 11, 12, 13, 27, 30, 32], "bias_dh": [7, 9, 10, 11, 12, 13, 30, 32], "bias_dist": [7, 9, 10, 11, 12, 13, 30, 32], "bias_featur": [7, 9, 10, 11, 12, 13, 30, 32, 36, 37, 343], "bias_fp": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 343], "bias_fsp": [30, 32], "bias_fut_": [23, 24, 30, 32, 37], "bias_fut_data": [30, 32], "bias_fut_fp": [30, 32], "bias_fut_handler_kwarg": [30, 32], "bias_fut_ti": 30, "bias_future_data": 30, "bias_gid": [7, 9, 10, 11, 12, 13, 30, 32], "bias_handl": [7, 9, 10, 11, 12, 13, 30, 32], "bias_handler_kwarg": [7, 9, 10, 11, 12, 13, 30, 32], "bias_ti": 30, "bias_transform": [30, 32, 34, 78, 269], "biased_arrai": 24, "bicub": 59, "bigger": [75, 78], "bilinear": [59, 64], "bin": [47, 112, 114, 115, 123, 138, 139, 231, 272, 273, 275, 276, 311, 312], "block": [54, 59, 69, 125, 148, 343], "block1_conv2": 301, "block2_conv2": 301, "blow": [23, 24, 37], "bool": [7, 9, 10, 11, 12, 13, 18, 19, 23, 24, 25, 27, 30, 32, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 78, 87, 89, 95, 97, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 148, 166, 167, 212, 217, 219, 220, 221, 222, 269, 272, 273, 275, 276, 287, 289, 290, 292, 294, 311, 312, 327, 329, 339], "boolean": [30, 32, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 282, 290, 311, 312], "both": [30, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 78, 87, 89, 104, 156, 158, 347, 348], "bound": [7, 9, 10, 11, 12, 13, 30, 32, 43, 47, 57, 66, 282, 292], "boundari": [69, 75, 95, 99, 101, 212, 287], "box": [292, 346], "brace": [212, 287], "branch": [348, 349], "brandon": [346, 348], "break": [41, 43, 45, 47, 57, 66, 212, 287, 290], "breakdown": [41, 43, 45, 47, 57, 66], "brief": [346, 348], "bring": [24, 346, 348], "browser": [43, 45, 47, 57, 66], "bucket": [97, 346, 347], "build": [102, 106, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 140, 199, 201, 203, 205, 207, 227, 231, 311, 316, 317, 325, 348], "built": [43, 45, 47, 49, 51, 57, 59, 66, 109, 110, 114, 115, 117, 118, 119, 121, 122, 123, 155, 219, 220, 221, 222, 343], "buster": [346, 347, 348], "byte": 97, "bytestr": 97, "c": [15, 16, 28, 30, 59, 71, 72, 91, 92, 199, 284, 285, 289, 290, 343, 346, 347], "cach": [78, 147, 148, 149, 156, 157, 158, 159, 160, 163, 166, 167, 215, 217, 219, 220, 221, 222, 224], "cache_chunk": 158, "cache_data": [148, 217], "cache_dir": [158, 219, 220, 221, 222], "cache_fil": [163, 219, 220, 221, 222], "cache_fp": [219, 220, 221, 222], "cache_kwarg": [148, 157, 158, 159, 160, 166, 167, 217], "cache_pattern": [148, 157, 158, 159, 160, 166, 167, 217], "cacher": [88, 89, 94, 98, 156, 157, 158, 159, 160, 166, 167, 219, 220, 221, 222], "cacher_kwarg": 89, "cal_val_loss": [43, 47, 57, 66], "calc": [7, 9, 10, 11, 12, 13, 15, 22, 23, 24, 25, 30, 32, 342], "calc_k_factor": 30, "calc_loss": [41, 43, 45, 47, 57, 66], "calc_loss_cond_mom": 45, "calc_loss_disc": [43, 47, 57, 66], "calc_loss_gen_cont": [43, 47, 57, 66], "calc_loss_kwarg": [41, 43, 45, 47, 57, 66], "calc_tau_fut": 30, "calc_val_loss": [43, 45, 47, 57, 66], "calc_val_loss_gen": 47, "calcul": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 26, 30, 32, 37, 41, 43, 45, 47, 57, 59, 66, 75, 78, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 138, 139, 154, 166, 167, 180, 219, 220, 224, 225, 273, 275, 276, 281, 282, 298, 301, 311, 312, 343], "calibr": 27, "call": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 30, 32, 43, 47, 57, 66, 69, 78, 85, 87, 89, 102, 104, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 166, 167, 176, 212, 217, 227, 229, 231, 233, 269, 282, 287, 289, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 327, 343, 348], "call_id": 327, "callabl": [34, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "callback": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "camel": 328, "can": [6, 7, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 27, 30, 32, 33, 34, 37, 41, 43, 45, 47, 49, 52, 54, 55, 57, 59, 66, 69, 75, 78, 87, 89, 97, 104, 106, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 166, 167, 169, 170, 171, 175, 176, 195, 201, 203, 205, 207, 212, 214, 215, 217, 219, 220, 223, 224, 226, 227, 229, 231, 233, 236, 243, 251, 254, 256, 259, 265, 268, 269, 273, 275, 276, 282, 287, 290, 292, 294, 298, 311, 312, 315, 316, 317, 343, 346, 347, 348], "canada": [114, 115, 117, 118, 119, 121, 122, 123], "cancel": [290, 343], "cannon": [23, 24, 30, 32, 37], "cannon2015": [30, 32], "cannot": [12, 75, 346], "cap": [69, 78, 95, 99, 101], "capac": 97, "capit": [212, 287], "captur": [290, 343, 348], "carbon": 348, "care": [24, 30, 32, 37, 217], "case": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 104, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 212, 219, 220, 225, 257, 258, 287, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 328], "casefold": [212, 287], "caseless": [212, 287], "cast": [55, 87, 104, 108, 260, 337], "castelao": 348, "categor": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "caution": [346, 347], "cayan": [7, 9, 10, 11, 12, 13, 28, 30], "cc": [157, 166, 167, 174], "cd": [291, 292, 348, 349], "cdf": [24, 30], "cdsapi": 291, "cdsapirc": 291, "ceil": [21, 22, 23, 24, 25, 37], "cell": 348, "celsiu": [182, 183, 184, 185, 210], "center": [7, 9, 10, 11, 12, 13, 30, 32, 51, 57, 64, 212, 229, 272, 273, 275, 276, 287], "centric": [46, 47, 111, 112, 114, 115, 123, 137, 230, 311, 312], "certain": [41, 43, 45, 47, 57, 66, 78, 269, 348], "ceser": 348, "cf": 97, "cg": 290, "chang": [7, 9, 10, 11, 12, 13, 28, 30, 32, 41, 43, 45, 47, 57, 59, 66, 78, 165, 166, 167, 174, 182, 183, 184, 185, 228, 229, 290, 335, 346, 347, 348], "change_qo": 290, "channel": [54, 55, 59, 227, 229, 231, 233, 316, 317, 329, 347], "char": [212, 287], "charact": [212, 287, 290], "check": [30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 78, 81, 89, 95, 97, 99, 101, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 157, 158, 159, 160, 163, 166, 167, 170, 171, 217, 227, 229, 231, 233, 247, 255, 269, 282, 290, 292, 311, 312, 316, 317, 348], "check_batch_handler_attr": [43, 47, 57, 66], "check_boundary_slic": 75, "check_enhancement_factor": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "check_featur": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "check_for_consistent_shap": [229, 233], "check_module_nam": 289, "check_registri": [157, 158, 159, 160, 166, 167, 170, 171], "check_regridded_lr_data": 217, "check_shared_attr": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 311, 312], "check_statu": 290, "check_status_using_job_id": 290, "check_target_and_shap": [215, 224], "checkout": 347, "checkpoint": [41, 43, 45, 47, 57, 66], "checkpoint_int": [41, 43, 45, 47, 57, 66], "chernyakhovskii": 347, "choic": 108, "choos": [37, 348], "chunk": [22, 23, 24, 25, 30, 69, 74, 75, 76, 77, 78, 80, 85, 87, 89, 95, 97, 99, 101, 104, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 148, 157, 158, 159, 160, 166, 167, 195, 201, 203, 205, 207, 217, 219, 220, 221, 222, 224, 229, 239, 241, 282, 292, 319, 320, 322, 327, 343, 346, 347], "chunk_finish": 78, "chunk_idx": 78, "chunk_index": [69, 75, 78], "chunk_lookup": 75, "chunk_mask": 78, "chunk_shap": [75, 316], "chunk_siz": 80, "chunksiz": [148, 292], "citat": 345, "citi": 346, "cl": [7, 9, 10, 11, 12, 13, 30, 32, 59], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 252, 268, 269, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 315, 316, 317, 326, 327, 343], "classmethod": [7, 9, 10, 11, 12, 13, 18, 19, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 85, 87, 89, 95, 96, 97, 99, 101, 148, 163, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 212, 269, 282, 287, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "clean": [43, 45, 47, 52, 268, 346, 347], "clear": [162, 164, 173, 174, 175, 282], "clearski": [55, 166, 167, 173, 174, 236, 280, 281, 282, 320, 343], "clearsky_dhi": 282, "clearsky_dni": 282, "clearsky_ghi": [157, 166, 167, 174, 282], "clearsky_ratio": [55, 157, 166, 167, 229, 237, 281, 282], "cli": [2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 30, 32, 69, 70, 71, 72, 73, 85, 87, 89, 90, 91, 92, 251, 269, 270, 282, 283, 284, 285, 287, 343, 346, 347, 348], "cli_gen": 290, "click": [15, 16, 71, 72, 91, 92, 284, 285, 287, 289], "climat": [7, 9, 10, 11, 12, 13, 28, 30, 32, 57, 165, 166, 167, 174, 182, 183, 184, 185, 228, 229, 291, 292, 343, 346], "climatolog": 348, "clockwis": [95, 99, 101, 198], "clone": [346, 347, 350], "close": [97, 269, 273, 275, 276, 282, 335], "closer": [157, 158, 159, 160, 166, 167, 170, 171], "closest": [215, 224, 294], "cloud": [175, 282], "cloud_mask": [175, 282], "cloud_threshold": 282, "cloudi": [175, 282], "cluster": [346, 347], "cmd": [15, 16, 71, 72, 91, 92, 284, 285, 289, 290], "cmip": 343, "cmip6": [30, 346], "coars": [7, 9, 10, 11, 12, 13, 30, 32, 75, 78, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 296, 312, 322, 339, 340, 346, 347], "coarse_data": 340, "coarse_shap": 75, "coarsen": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 157, 158, 159, 160, 162, 166, 167, 171, 217, 225, 227, 229, 231, 233, 269, 298, 311, 312, 316, 317, 339, 340, 347], "coarsen_data": 269, "coarser": [166, 167], "code": [54, 59, 69, 98, 148, 212, 287, 346, 348, 349], "codebas": 104, "codec": [212, 287], "coeffici": 37, "coincid": [346, 347], "col": [7, 9, 10, 11, 12, 13, 30, 32, 97, 157, 158, 159, 160, 166, 167, 215, 224, 238, 239, 240, 241], "col_slic": 87, "collabor": [346, 348], "collect": [84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 101, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 287, 311, 312, 315, 316, 317, 319, 342], "collect_featur": 87, "collect_input_attr": [157, 158, 159, 160, 166, 167, 170, 171], "collected_output_fil": 343, "collector": 343, "collis": 330, "column": [41, 43, 45, 47, 57, 66, 95, 97, 99, 101, 290], "com": [180, 188, 191, 348, 349], "combin": [30, 41, 43, 45, 47, 55, 57, 66, 69, 87, 89, 94, 104, 162, 292, 348], "combine_all_fil": 292, "combine_by_coord": 104, "combine_typ": [54, 69, 162, 163, 164], "come": [43, 45, 47, 49, 51, 57, 59, 66, 108, 148, 162, 170, 198, 215, 227, 229, 231, 233, 316, 317], "command": [15, 16, 38, 71, 72, 91, 92, 245, 284, 285, 287, 289, 290, 343, 346, 347, 348, 349], "commanddocument": 245, "commit": [348, 349], "common": [262, 343], "compar": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 43, 47, 57, 66, 212, 219, 220, 273, 274, 275, 276, 277, 278, 279, 287, 346], "compare_dist": [7, 9, 10, 11, 12, 13, 30, 32], "comparison": [64, 212, 287], "comparison_kei": [43, 47, 57, 66], "compat": [20, 104, 229, 233], "compet": 348, "compil": [296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "complet": [87, 89, 108, 114, 115, 117, 118, 119, 121, 122, 123, 152, 217, 290], "complex": [69, 78], "compliant": 290, "compon": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 41, 43, 45, 47, 57, 66, 78, 95, 99, 101, 186, 187, 188, 189, 190, 191, 277, 278, 292, 299], "compos": [78, 156, 158, 162, 229, 233], "composit": [55, 109, 110, 155, 244, 245], "compositetensor": [41, 43, 45, 47, 57, 66], "compromis": [28, 30], "compuat": 174, "comput": [12, 17, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 97, 102, 104, 108, 112, 114, 115, 123, 153, 154, 157, 158, 159, 160, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 246, 276, 290, 311, 346, 347, 348], "compute_disc": [41, 43, 47, 57, 66], "concat": [43, 45, 47, 49, 57, 66], "concaten": [55, 87, 212, 287, 336], "concept": [28, 30, 105], "concis": 251, "concurr": [43, 47, 57, 66, 78], "conda": [290, 346, 347, 348, 349], "conda_env": 290, "condit": [41, 43, 47, 57, 66, 117, 118, 119, 121, 122, 269, 347, 348], "conditionalbatchqueu": [114, 115, 123, 131, 132, 133, 134, 311], "condmom_": 45, "conf": 63, "confer": [43, 47, 57, 66], "confid": [28, 30], "config": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 66, 69, 85, 87, 89, 97, 219, 220, 221, 269, 282, 289, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 343, 346, 347, 348], "config_bia": 343, "config_collect": 343, "config_fil": [15, 16, 71, 72, 91, 92, 284, 285, 289, 343], "config_fwp": [343, 346], "config_fwp_spati": 347, "config_nam": 97, "config_pipelin": [343, 346, 347], "config_qa": 343, "config_solar": 343, "configur": [43, 45, 47, 57, 66, 97, 343], "conflict": 66, "conform": 19, "confus": 346, "conifg": 289, "conjunct": [157, 158, 159, 160, 166, 167, 170, 171], "consecut": [41, 43, 45, 47, 57, 66], "consid": [30, 32, 75, 78, 105, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 151, 212, 282, 287], "consist": [24, 30, 32, 41, 43, 45, 47, 57, 66, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 150, 152, 166, 167, 233, 246, 311, 312], "consit": [30, 32], "consortium": [346, 348], "const": [321, 323], "constant": [69, 78, 89, 108, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 145], "constantli": 104, "constitut": 45, "constrast": 78, "construct": [75, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 138, 139, 272], "contain": [18, 19, 36, 37, 43, 45, 47, 51, 53, 55, 59, 87, 95, 99, 101, 102, 103, 104, 105, 108, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 146, 148, 150, 151, 152, 154, 157, 158, 159, 160, 163, 166, 167, 168, 170, 171, 176, 188, 200, 201, 203, 205, 206, 207, 212, 213, 215, 217, 224, 225, 226, 227, 229, 230, 231, 232, 233, 242, 247, 261, 264, 265, 282, 287, 290, 292, 311, 312, 315, 316, 317, 343, 346, 347], "container_weight": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 311, 312], "content": [43, 47, 57, 66, 115, 123, 141, 233, 290, 295, 298, 299, 302, 303, 304, 305, 306, 307, 308, 311], "content_loss": 47, "context": [15, 16, 71, 72, 91, 92, 284, 285, 289, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "contigu": 78, "continu": [78, 157, 158, 159, 160, 166, 167, 170, 171, 227, 316, 317, 343], "contract": [346, 347, 348], "contrast": 128, "contrib": [105, 151], "control": [346, 347], "conu": [114, 115, 117, 118, 119, 121, 122, 123, 282, 292], "convect": 346, "convert": [19, 69, 78, 95, 99, 101, 104, 157, 158, 159, 160, 162, 166, 167, 201, 203, 205, 207, 212, 224, 280, 281, 282, 287, 292, 328, 343], "convert_all_tif": 19, "convert_month_height_tif": 19, "convert_month_tif": 19, "convert_z": 292, "coord": [7, 9, 10, 11, 12, 13, 30, 32, 104, 148, 211, 219, 220, 221, 222, 257], "coordin": [7, 9, 10, 11, 12, 13, 19, 22, 23, 25, 30, 32, 36, 37, 87, 95, 97, 99, 101, 104, 148, 157, 158, 159, 160, 163, 166, 167, 210, 212, 215, 224, 265, 292], "coordind": 87, "coords_2d": 212, "coords_3d": 212, "coords_4d": 212, "coords_4d_pr": 212, "copernicu": [291, 292], "copi": [69, 162, 164, 212, 269, 287, 346, 347], "core": [24, 34, 69, 75, 87, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 144, 145, 164, 166, 167, 195, 196, 198, 229, 231, 235, 236, 269, 282, 294, 312, 334, 339, 340, 343, 346], "corner": [7, 9, 10, 11, 12, 13, 30, 32, 157, 158, 159, 160, 166, 167, 215, 224], "correct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 59, 78, 95, 104, 212, 219, 220, 221, 269, 343, 346, 348, 349], "corrected_fut_data": 30, "correctli": [162, 247], "correspond": [7, 9, 10, 11, 12, 13, 19, 30, 32, 34, 53, 54, 55, 59, 66, 75, 78, 80, 95, 97, 99, 101, 104, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 162, 164, 215, 219, 220, 221, 222, 224, 227, 229, 231, 233, 237, 238, 269, 274, 277, 278, 279, 282, 289, 292, 294, 312, 316, 317, 319, 322, 329, 346, 347], "cost": 348, "could": [28, 30, 32, 59, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 151, 156, 157, 158, 159, 160, 162, 166, 167, 170, 171, 176, 225, 269, 290, 311, 312, 346], "count": [212, 272, 273, 275, 276, 287], "counter": [95, 99, 101, 313], "countless": 348, "countri": [104, 347], "cours": [151, 229], "cover": [30, 32, 66, 78, 87, 347], "cp": [346, 347], "cpu": [43, 45, 47, 78, 346], "creat": [30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 95, 97, 99, 101, 162, 164, 219, 220, 282, 289, 290, 292, 343, 346, 347, 348, 349], "crop": [69, 75, 78], "crop_slic": 239, "cropped_slic": 75, "crossentropi": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "cs_ghi": [157, 166, 167], "cs_ratio": [173, 174, 229], "csl": [188, 191], "csr_ind": [229, 236, 237], "csv": [43, 45, 47, 343], "ctx": [15, 16, 71, 72, 91, 92, 284, 285, 289], "cuda": [348, 349], "current": [7, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 57, 66, 75, 343, 346, 347, 348], "curv": 224, "curvilinear": 89, "custom": [41, 43, 45, 47, 55, 57, 66, 130, 280, 281, 282, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307], "custom_train": [296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "customnetwork": [41, 43, 45, 47, 57, 66], "cut": [30, 32, 69, 75, 348], "cybersecur": 348, "cycl": [59, 346], "d": [7, 9, 10, 11, 12, 13, 28, 30, 32, 97, 104, 108, 162, 164, 275, 276, 290, 292], "d0": [30, 32, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "da": [34, 69, 75, 87, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 144, 145, 164, 166, 167, 195, 196, 198, 229, 231, 235, 236, 269, 282, 294, 312, 334, 339, 340], "dai": [7, 9, 10, 11, 12, 13, 24, 28, 30, 32, 57, 157, 158, 159, 160, 166, 167, 171, 229, 235, 237, 282, 292, 348], "daili": [7, 9, 10, 11, 12, 13, 30, 32, 57, 59, 95, 99, 101, 104, 108, 157, 158, 159, 160, 166, 167, 171, 174, 183, 184, 229, 281, 320, 346], "daily_reduct": [5, 7, 9, 10, 11, 12, 13, 30, 32], "dailydatahandl": [159, 160], "dailylight": 236, "dash": 287, "dashboard": [43, 47, 57, 66], "dask": [104, 157, 158, 159, 160, 166, 167, 195, 201, 203, 205, 207, 224, 246], "dask_arrai": 104, "data": [0, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 34, 35, 36, 37, 41, 43, 45, 46, 47, 49, 51, 53, 54, 55, 57, 58, 59, 61, 65, 66, 67, 69, 75, 77, 78, 83, 85, 87, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 252, 254, 257, 261, 264, 265, 266, 269, 273, 275, 276, 280, 281, 282, 287, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 329, 331, 339, 340, 342, 345], "data1": 108, "data2": 108, "data_chunk": 69, "data_collect": 91, "data_dir": 158, "data_handl": [30, 32, 75, 219, 220, 269], "data_list": [85, 87, 89, 95, 96, 99, 101], "data_shap": [238, 239, 240, 241, 315, 316], "data_var": [89, 104, 114, 117, 118, 119, 121, 122, 227, 264, 316, 317], "data_vers": 97, "dataarrai": [24, 104, 108, 157, 158, 159, 160, 166, 167, 170, 171, 173, 174, 175, 188, 261, 294], "datacentr": 231, "datafram": [41, 43, 45, 47, 57, 66, 85, 87, 89, 95, 96, 97, 99, 101, 104, 148], "datahandl": [7, 9, 10, 11, 12, 13, 30, 32, 34, 36, 37, 102, 148, 156, 157, 165, 166, 252, 347], "datahandlerncforcc": [7, 9, 10, 11, 12, 13, 30, 32, 167], "dataretrievalbas": [9, 32], "dataset": [5, 7, 9, 10, 11, 12, 13, 18, 19, 22, 23, 24, 25, 30, 32, 36, 37, 59, 85, 87, 89, 95, 96, 97, 99, 101, 104, 105, 106, 108, 126, 128, 148, 152, 157, 158, 159, 160, 162, 166, 167, 171, 174, 176, 201, 203, 205, 207, 209, 210, 215, 216, 217, 219, 220, 221, 222, 224, 225, 227, 231, 232, 233, 237, 248, 265, 269, 282, 292, 315, 316, 317, 336, 343, 346, 347, 348], "datatre": [105, 151], "datatyp": [97, 108], "date": [346, 347], "date_rang": [23, 24, 25, 251, 259, 335], "date_range_kwarg": [23, 24, 25, 259], "datetim": [7, 9, 10, 11, 12, 13, 30, 32, 85, 87, 89, 95, 96, 97, 99, 101, 195], "datetime64": [319, 322], "datetimeindex": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 77, 85, 87, 89, 95, 96, 97, 99, 101, 195, 235, 237, 251, 259, 282], "daylight": [57, 229, 236, 237], "daylight_hour": 57, "daymet": [30, 346], "dc": [43, 57, 66], "de": [346, 347, 348], "deal": 343, "debug": [41, 43, 45, 47, 57, 66, 343], "decad": 30, "decid": 346, "decim": [7, 9, 10, 11, 12, 13, 30, 32, 212, 282, 287], "decis": 348, "decod": [97, 290], "decor": [109, 256], "decreas": [23, 24, 37, 41, 43, 45, 47, 57, 66], "dedic": 126, "deep": [346, 348], "def": [212, 287], "default": [7, 9, 10, 11, 12, 13, 15, 16, 23, 24, 30, 32, 37, 41, 43, 45, 47, 51, 57, 59, 64, 66, 69, 71, 72, 78, 87, 91, 92, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 148, 162, 164, 201, 203, 205, 207, 212, 219, 220, 221, 222, 224, 229, 233, 282, 284, 285, 287, 289, 290, 292, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 319, 331, 339, 341, 343], "default_coord": 265, "default_devic": [43, 45, 47, 57, 66], "default_dim": 265, "default_featur": 265, "defin": [9, 10, 11, 12, 13, 23, 24, 27, 30, 32, 34, 35, 40, 41, 43, 45, 47, 48, 49, 51, 57, 59, 66, 78, 97, 103, 108, 109, 219, 220], "definit": [30, 32], "deg": 59, "degre": [7, 9, 10, 11, 12, 13, 30, 32, 59, 195, 196, 198, 273, 275, 276, 282], "delai": [195, 225], "delet": [212, 287, 343], "delimit": [212, 287, 290], "deliv": 348, "delta": [23, 24, 29, 30, 31, 32, 37, 59, 346], "delta_denom_min": [23, 24, 37], "delta_denom_zero": [23, 24, 37], "delta_rang": [23, 24, 37], "denomin": [23, 24, 37], "denot": 347, "densiti": 299, "depart": [346, 347, 348], "depend": [16, 72, 87, 92, 97, 104, 114, 115, 123, 126, 130, 252, 285, 289, 290, 311, 343, 348, 349], "deploy": [346, 347, 348], "dequeu": [112, 114, 115, 123, 126, 128, 138, 139, 141, 311, 312], "deriv": [7, 9, 10, 11, 12, 13, 29, 30, 31, 32, 102, 109, 111, 138, 147, 149, 155, 156, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 213, 227, 231, 252, 269, 276, 299, 302, 306, 316, 317], "derivedfeatur": [157, 158, 159, 160, 166, 167, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193], "descent": [41, 43, 45, 47, 57, 66], "describ": [41, 43, 45, 47, 57, 66, 69, 112, 114, 115, 117, 118, 119, 121, 122, 123, 162, 163, 227, 229, 231, 233, 311, 312, 316, 317, 348], "descript": [59, 157, 158, 159, 160, 166, 167], "design": [282, 346, 347, 348], "desir": [87, 89, 148, 157, 158, 159, 160, 166, 167, 294, 347], "desktop": 346, "destin": 87, "detail": [41, 43, 45, 47, 57, 66, 78, 269, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 343, 346, 347, 348], "determin": [30, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 78, 108, 114, 115, 123, 139, 229, 233, 272, 273, 275, 276, 282, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 348], "determinist": 313, "dettin": [7, 9, 10, 11, 12, 13], "dev": [104, 348, 349], "develop": [43, 45, 47, 346, 347, 350], "deviat": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 154, 300, 308, 312], "devic": [41, 43, 45, 47, 57, 66], "device_nam": [41, 43, 45, 47, 57, 66], "dewpoint": 180, "df": 97, "df_str_decod": 97, "dh": 158, "dhi": [280, 281, 282, 343], "dib": [346, 348], "dict": [7, 9, 10, 11, 12, 13, 19, 23, 24, 25, 27, 30, 32, 34, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 62, 66, 69, 77, 78, 85, 87, 89, 95, 96, 97, 99, 101, 104, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 176, 201, 203, 205, 207, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 251, 259, 269, 282, 289, 290, 292, 294, 311, 312, 316, 317, 320, 331], "dict_to_tensorboard": [41, 43, 45, 47, 57, 61, 66], "dictionari": [7, 9, 10, 11, 12, 13, 15, 16, 19, 27, 30, 32, 34, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 71, 72, 78, 89, 91, 92, 95, 97, 99, 101, 104, 107, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 201, 203, 205, 207, 209, 212, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 251, 259, 269, 284, 285, 287, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 331], "did": 346, "didnt": 269, "diff": [41, 43, 45, 47, 57, 66, 272], "diff_max": [273, 275, 276], "differ": [30, 32, 41, 43, 45, 47, 55, 57, 59, 66, 78, 87, 89, 102, 104, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 157, 158, 159, 160, 163, 166, 167, 170, 171, 217, 226, 272, 273, 274, 275, 276, 277, 278, 279, 296, 297, 299, 311, 312, 346, 348], "digit": [212, 287], "dim": [75, 104, 148, 157, 158, 159, 160, 166, 167, 211, 236, 248, 257, 261, 262, 268, 269], "dim_num": 263, "dimens": [9, 10, 11, 12, 13, 19, 24, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 85, 87, 89, 95, 96, 99, 101, 104, 108, 116, 128, 144, 145, 148, 157, 158, 159, 160, 166, 167, 177, 178, 196, 198, 211, 215, 219, 220, 221, 222, 224, 227, 229, 231, 235, 248, 261, 262, 263, 265, 269, 298, 316, 317, 319, 320, 322, 339, 340], "dimension": 30, "dims_2d": 212, "dims_3d": 212, "dims_3d_bc": 212, "dims_4d": 212, "dims_4d_bc": 212, "dims_4d_pr": 212, "dir": [85, 87, 89, 343, 348, 349], "direct": [78, 95, 99, 101, 158, 196, 198, 273, 346, 347, 348], "directli": [30, 32, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 201, 203, 205, 207, 217, 224, 311, 312, 343, 346, 347], "directori": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 219, 220, 282, 290, 343, 345, 347], "disabl": 217, "disc": [41, 43, 45, 47, 49, 51, 57, 59, 66, 280, 281, 282], "disc_config": 347, "disc_lay": [43, 47, 347], "disc_loss_bound": [43, 47, 57, 66], "disc_out_gen": [43, 47, 57, 66], "disc_out_tru": [43, 47, 57, 66], "discard": [212, 287], "discontinu": [95, 99, 101], "discrep": 300, "discrimin": [41, 43, 45, 47, 57, 66, 348], "discriminator_weight": [43, 47, 57, 66], "disk": [41, 43, 45, 47, 49, 57, 66, 97, 104, 158, 269, 282, 343], "displac": 199, "dist": [7, 9, 10, 11, 12, 13, 30, 32, 219, 220, 221, 222, 282], "dist_param": 24, "distanc": [7, 9, 10, 11, 12, 13, 22, 23, 25, 30, 32, 36, 37, 87, 157, 158, 159, 160, 166, 167, 215, 219, 220, 221, 222, 224, 282], "distance_upper_bound": [7, 9, 10, 11, 12, 13, 30, 32, 219, 220, 221, 222], "distinct": 152, "distingush": 327, "distribut": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 75, 76, 78, 125, 162, 272, 273, 275, 276, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 343], "diurnal": [59, 346], "divid": [41, 43, 45, 47, 57, 66, 75, 78, 112, 114, 117, 118, 119, 121, 122, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 299, 312, 317], "divis": [23, 24, 37, 217], "divisor": 59, "dn": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "dni": [280, 281, 282, 343], "do": [7, 9, 10, 11, 12, 13, 27, 30, 32, 41, 43, 45, 47, 51, 55, 57, 59, 66, 95, 99, 101, 102, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 213, 217, 219, 220, 268, 269, 282, 311, 312, 343, 346, 347, 348], "do_level_interpol": [157, 158, 159, 160, 166, 167, 170, 171], "doc": [104, 244, 245, 256, 346, 347], "document": 245, "doe": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 97, 102, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 141, 162, 164, 215, 219, 220, 221, 224, 227, 229, 231, 233, 252, 282, 290, 303, 307, 311, 316, 317, 343, 346, 347, 348], "doesn": [41, 43, 45, 47, 57, 66, 95, 99, 101, 233, 290], "doesnt": [43, 47, 51, 59, 66], "doi": [7, 9, 10, 11, 12, 13, 24, 30, 32, 188, 191, 346, 347, 348], "domain": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 30, 32, 34, 41, 43, 45, 47, 57, 64, 66, 75, 78, 85, 87, 89, 112, 138, 139, 195, 215, 217, 219, 220, 240, 274, 277, 278, 279, 292, 303, 304, 305, 312, 347], "don": [78, 157, 158, 159, 160, 166, 167], "done": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 57, 66, 162, 166, 167, 212, 287], "doubl": 346, "down": [20, 95, 99, 101, 229], "download": [17, 291, 292, 346, 347], "download_fil": 292, "download_process_combin": 292, "downscal": [8, 55, 59, 343, 346, 347, 348], "downscale_arr": 59, "downscale_pr": 59, "downscale_rh": 59, "downscale_temp": 59, "downstream": [59, 348], "dramat": 348, "driven": 348, "drizzl": [7, 9, 10, 11, 12, 13, 30, 32], "drop": [157, 158, 159, 160, 166, 167, 171], "drop_leap": [251, 259], "dry": [7, 9, 10, 11, 12, 13, 30, 343], "ds_name": 97, "dset": [18, 85, 87, 89, 95, 96, 97, 99, 101, 107, 108, 148, 248, 282, 331, 336], "dset_arrai": 97, "dset_data": 97, "dset_nam": [97, 269], "dset_slic": 97, "dset_suffix": 269, "dsettupl": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "dt": 276, "dtype": [87, 97, 104, 108, 331], "dual": [106, 108, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 224, 225, 227, 229, 231, 311, 312, 315, 316, 317, 347], "dualbatchhandl": [102, 108, 116, 347], "dualbatchqueu": [111, 115, 116, 123, 128, 217, 311], "dualraster": [102, 108, 218, 347], "dualsampl": [106, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 311, 312, 315, 316, 317], "dualsamplercc": 115, "dualsamplerwithob": [106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 311, 312, 315, 316, 317], "due": 69, "dummi": [148, 262, 315, 316, 320, 321, 323, 324], "dummy_time_index": 75, "dump": 338, "dure": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 62, 66, 108, 111, 112, 137, 138, 139, 230, 231, 237, 312, 348], "dx": [275, 346], "dynam": [107, 137, 346, 348], "e": [7, 9, 10, 11, 12, 13, 23, 24, 25, 28, 30, 32, 37, 41, 43, 45, 47, 51, 54, 57, 59, 64, 66, 69, 75, 78, 95, 97, 99, 101, 104, 105, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 173, 174, 175, 176, 197, 201, 203, 205, 207, 210, 215, 217, 219, 220, 224, 227, 229, 231, 233, 240, 241, 248, 262, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 289, 292, 294, 298, 311, 312, 315, 316, 317, 343, 346, 347, 348, 349], "each": [9, 10, 11, 12, 13, 19, 22, 23, 24, 25, 27, 30, 32, 41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 69, 75, 78, 87, 89, 95, 99, 101, 108, 111, 115, 123, 130, 139, 141, 148, 152, 154, 162, 163, 212, 227, 269, 274, 277, 278, 279, 282, 287, 292, 311, 316, 343, 346, 347], "eager": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "eagl": 290, "earli": [41, 43, 45, 47, 57, 66], "early_stop": [41, 43, 45, 47, 57, 66], "early_stop_n_epoch": [41, 43, 45, 47, 57, 66], "early_stop_on": [41, 43, 45, 47, 57, 66], "early_stop_threshold": [41, 43, 45, 47, 57, 66], "earth": [346, 348], "earth3": 343, "earthscienc": 180, "easi": 111, "easiest": 217, "easili": [215, 224, 348], "ec2": [346, 347], "eccv": [43, 47, 57, 66], "eda": 292, "edg": 69, "eer": [346, 348], "effect": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 59, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 282, 290, 311, 312, 346, 347], "efficaci": 348, "effici": [43, 45, 47, 227, 231, 316, 317, 346, 347, 348], "either": [41, 43, 45, 47, 55, 57, 66, 87, 97, 104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 254, 269, 292, 298, 299, 301, 311, 312, 315, 316, 317, 319, 343, 346], "elaps": 327, "elapsed_str": 327, "electr": [346, 348], "element": [30, 32, 75, 78, 108, 246], "elev": [54, 59, 104, 156, 158, 292, 294], "elimin": [273, 275, 276], "ellips": [247, 347], "ellipsi": 263, "els": [162, 164, 213], "emerg": 348, "empir": [30, 32], "emploi": [157, 158, 159, 160, 166, 167, 170, 171], "empow": 348, "empti": [51, 59, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 162, 164, 212, 264, 265, 287, 290, 311, 312], "en": [104, 299], "en18143769": [347, 348], "enabl": [104, 114, 115, 123, 157, 311, 348], "encod": [212, 287], "encourag": [43, 47, 57, 66, 299, 302, 303, 304, 305, 306, 307], "end": [24, 69, 75, 78, 80, 87, 89, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 212, 227, 229, 231, 233, 287, 316, 317], "end_t_pad": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "endswith": [212, 287], "energi": [0, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 274, 277, 278, 312, 346, 347, 348], "enforc": [59, 329], "enhanc": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 157, 162, 163, 217, 219, 220, 221, 222, 229, 233, 269, 311, 312, 347], "enhanced_data": [144, 145], "enough": [43, 47, 57, 66, 78, 227, 316], "enqueu": [112, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "enqueue_batch": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "ensembl": 346, "ensemble_mean": 292, "ensemble_memb": 292, "ensemble_spread": 292, "ensur": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 348], "entir": [59, 87, 139], "entri": [2, 14, 22, 23, 24, 25, 41, 43, 45, 47, 53, 54, 55, 57, 59, 61, 66, 69, 70, 73, 75, 89, 90, 104, 114, 117, 118, 119, 121, 122, 157, 158, 159, 160, 162, 163, 166, 167, 170, 171, 227, 248, 263, 270, 283, 290, 292, 294, 316, 317], "enum": [212, 287], "enumer": [7, 9, 10, 11, 12, 13, 30, 32, 346], "env": [346, 347, 348, 349], "environ": [290, 346, 347, 348, 349], "epdf": [188, 191], "epoch": [41, 43, 45, 47, 57, 66, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312, 347], "equal": [7, 9, 10, 11, 12, 13, 30, 32, 75, 78, 87, 112, 138, 139, 157, 158, 159, 160, 164, 166, 167, 212, 215, 224, 235, 237, 248, 287, 299, 312], "equat": [23, 24, 37, 59, 299], "equival": [30, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 343], "era": [17, 292], "era5": [180, 214, 217, 291, 292, 346, 347], "era5_": 292, "era_": 292, "eradownload": 347, "ern": [85, 87, 89, 114, 115, 117, 118, 119, 121, 122, 123, 227, 229, 231, 233, 311, 316, 317], "err": 290, "error": [22, 23, 25, 30, 32, 36, 37, 69, 157, 158, 159, 160, 166, 167, 212, 215, 224, 269, 287, 290, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "esm": 346, "especi": [43, 47, 57, 66, 346, 348], "esrgan": [43, 47, 57, 66], "essenti": 217, "estim": [24, 28, 30, 32, 95, 99, 101, 117, 118, 119, 121, 122, 129, 130, 131, 132, 133, 134, 135, 136, 219, 220, 348], "et": [23, 24, 30, 32, 37, 43, 47, 57, 66, 346], "etc": [47, 69, 102, 104, 108, 112, 114, 115, 123, 126, 128, 138, 139, 141, 210, 218, 240, 311, 312, 346], "eu": 291, "euclidean": [22, 23, 25, 36, 37, 157, 158, 159, 160, 166, 167, 215, 224], "european": [43, 47, 57, 66], "evalu": [6, 41, 43, 45, 47, 57, 66, 298], "even": [41, 43, 45, 47, 57, 66, 78, 195, 266], "evenli": [112, 114, 117, 118, 119, 121, 122, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 231, 312], "event": [346, 348], "eventu": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "everi": [5, 9, 10, 11, 12, 13, 30, 32, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 148, 229, 269, 294, 298, 340, 346, 347], "everyth": [102, 282], "ex_loss": 298, "ex_loss_metr": 298, "exactli": 12, "exampl": [12, 15, 16, 24, 28, 30, 41, 43, 45, 47, 57, 66, 71, 72, 78, 91, 92, 95, 99, 101, 104, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 156, 157, 158, 159, 160, 162, 164, 166, 167, 171, 176, 201, 203, 205, 207, 212, 214, 219, 220, 221, 224, 227, 229, 233, 249, 269, 282, 284, 285, 287, 289, 290, 292, 294, 311, 316, 317, 327, 343, 348], "exceed": 78, "except": [75, 219, 220, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "excess": [43, 47, 57, 66], "exclud": [55, 269], "execut": [269, 289, 290, 343, 346, 347], "execution_control": 343, "exist": [18, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 78, 85, 87, 89, 95, 96, 99, 101, 104, 148, 157, 158, 159, 160, 166, 167, 170, 171, 219, 220, 224, 233, 282, 290, 292], "exit": [43, 47, 57, 62, 66, 343], "exo": [43, 45, 47, 49, 57, 66, 69, 78], "exo_data": [41, 43, 45, 47, 57, 69, 77, 78, 162], "exo_handler_kwarg": [69, 78], "exo_rasterizer_kwarg": 163, "exo_sourc": [7, 9, 10, 11, 12, 13, 30, 32], "exodata": [41, 43, 45, 47, 53, 55, 66, 78], "exodatahandl": [78, 161, 218], "exogen": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 161, 162, 163, 166, 167, 219, 220, 221, 222, 227, 229, 231, 233, 316, 317, 346, 347], "exogenous_data": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 162, 164], "exoraster": [218, 221], "expand": [152, 212, 229, 249, 287, 347], "expandtab": [212, 287], "expect": [24, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 114, 115, 117, 118, 119, 121, 122, 123, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224, 227, 229, 233, 311, 316, 317, 346], "expens": 78, "experienc": 346, "expert": [346, 348], "explicit": [85, 87, 89, 104, 157, 158, 159, 160, 166, 167, 269], "explicitli": [104, 290], "explor": [204, 346, 347, 348], "expon": 59, "exponenti": [59, 296, 297], "export": [30, 43, 47, 57, 66, 269], "expos": [170, 215], "express": [212, 287, 346, 347, 348], "ext": [78, 85, 87, 89, 319], "extend": [9, 10, 11, 12, 13, 27, 30, 32, 104, 154, 156, 159, 160, 166, 171], "extens": [148, 157, 158, 159, 160, 166, 167, 319], "extent": [9, 10, 11, 12, 13, 27, 30, 32, 78, 87, 102, 112, 157, 158, 159, 160, 162, 166, 167, 176, 188, 213, 215, 224, 233, 238, 241], "extern": 299, "extra": [30, 41, 43, 45, 47, 57, 66, 69, 75, 78, 115, 123, 141, 233, 311], "extra_attr": 30, "extra_pad": 75, "extract": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 97, 102, 157, 158, 159, 160, 163, 166, 167, 168, 201, 203, 205, 207, 213, 215, 217, 219, 220, 224, 238, 239, 240, 241, 269, 301], "extrapol": [188, 191], "extrem": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 298, 348], "f": [162, 164, 212, 274, 277, 287, 347], "f_data": 87, "f_rang": [274, 277], "factor": [5, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 23, 27, 30, 32, 36, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 87, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 157, 158, 159, 160, 162, 163, 166, 167, 171, 205, 212, 217, 219, 220, 229, 233, 269, 273, 275, 276, 282, 298, 311, 312, 339, 340, 343, 347], "factori": [102, 109, 311, 313], "fail": 69, "failur": [212, 287], "fake": [43, 47, 57, 66, 319, 322], "fals": [7, 9, 10, 11, 12, 13, 18, 19, 23, 24, 25, 30, 32, 37, 41, 43, 45, 47, 51, 57, 59, 64, 66, 69, 78, 95, 97, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 148, 212, 217, 272, 273, 275, 276, 287, 290, 292, 311, 312, 327, 329, 339], "fan": 157, "far": [9, 10, 11, 12, 13, 27, 30, 32, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 282], "farm": 348, "faster": 97, "fastest": 125, "featur": [7, 9, 10, 11, 12, 13, 16, 19, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 72, 75, 78, 87, 89, 92, 95, 99, 101, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 148, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 197, 201, 203, 205, 207, 211, 213, 215, 217, 219, 220, 221, 222, 224, 226, 227, 229, 231, 233, 235, 236, 237, 252, 258, 261, 264, 265, 266, 269, 282, 285, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317, 319, 321, 322, 323, 329, 331, 332, 339, 340, 343, 348], "feature_alias": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "feature_data": 104, "feature_inds_oth": 59, "feature_inds_pr": 59, "feature_inds_rh": 59, "feature_inds_temp": 59, "feature_nam": [22, 23, 24, 25], "feature_registri": [157, 158, 159, 160, 166, 167, 170, 171], "feature_set": [112, 114, 115, 117, 118, 119, 121, 122, 123, 227, 229, 231, 233, 311, 312, 316, 317], "featureregistri": [157, 158, 159, 160, 166, 167, 170, 171], "fecm": 348, "fed": [8, 54], "fetch": [157, 158, 159, 160, 166, 167, 170, 171], "few": 346, "fft": [274, 277, 278, 279], "field": [43, 47, 57, 59, 64, 66, 209, 212, 257, 278, 279, 287, 298, 346], "fifo": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "figur": 125, "file": [7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 30, 32, 36, 37, 41, 43, 45, 47, 49, 51, 57, 59, 61, 66, 69, 72, 78, 84, 85, 86, 87, 88, 89, 92, 93, 95, 96, 97, 99, 101, 102, 112, 114, 115, 117, 118, 119, 121, 122, 123, 148, 154, 157, 158, 159, 160, 163, 166, 167, 182, 183, 184, 185, 201, 202, 203, 204, 205, 207, 212, 213, 215, 219, 220, 221, 222, 224, 249, 252, 254, 269, 282, 285, 289, 290, 291, 292, 311, 312, 319, 320, 322, 323, 330, 333, 341, 343, 346, 347, 348], "file_id": [78, 343], "file_nam": 323, "file_path": [7, 9, 10, 11, 12, 13, 30, 32, 75, 78, 85, 87, 89, 97, 157, 158, 159, 160, 163, 166, 167, 201, 203, 205, 206, 207, 219, 220, 221, 222, 224, 254, 343], "file_pattern": 292, "filenam": [30, 32, 87, 89, 282, 290], "filepath": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 36, 37, 43, 45, 47, 85, 87, 89, 95, 96, 97, 99, 101, 219, 220, 269, 282, 319, 322, 346, 347], "fill": [9, 10, 11, 12, 13, 19, 27, 30, 32, 69, 78, 95, 99, 101, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 212, 217, 219, 220, 287, 311, 312, 329, 334], "fill_and_smooth": [9, 10, 11, 12, 13, 27, 30, 32], "fill_extend": [5, 9, 10, 11, 12, 13, 27, 30, 32], "fill_nan": [219, 220, 221, 222], "fillandsmoothmixin": [9, 32], "fillchar": [212, 287], "filter": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 166, 167, 312], "final": [19, 30, 55, 85, 87, 89, 95, 96, 97, 99, 101, 294], "final_meta": 87, "final_time_index": 87, "find": [30, 87, 102, 157, 158, 159, 160, 166, 167, 170, 171, 212, 215, 224, 235, 237, 287, 320], "fine": [204, 348], "finest": 348, "finish": [41, 43, 45, 47, 57, 66, 78, 346, 347], "finish_epoch": [41, 43, 45, 47, 57, 66], "finit": [28, 30], "first": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 78, 87, 108, 112, 131, 132, 135, 136, 148, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 212, 217, 227, 231, 241, 269, 287, 299, 312, 316, 317, 343, 346, 347], "fit": [296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "fix": [7, 9, 10, 11, 12, 13, 30, 32, 55, 57, 59, 112], "fix_bia": 59, "fix_downscaled_bia": 59, "flag": [7, 9, 10, 11, 12, 13, 16, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 72, 78, 87, 89, 92, 97, 144, 166, 167, 217, 269, 285, 289, 290, 339, 343], "flat_2d": 212, "flatten": [7, 9, 10, 11, 12, 13, 19, 30, 32, 104, 157, 158, 159, 160, 166, 167, 212, 214, 221, 223, 224, 227, 231, 316, 317], "flexibl": [108, 348], "flexiblepad": [75, 78], "flist": 87, "flist_chunk": 87, "float": [7, 9, 10, 11, 12, 13, 16, 18, 21, 22, 23, 24, 25, 27, 28, 30, 32, 36, 37, 41, 43, 45, 47, 57, 59, 66, 72, 87, 92, 97, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 157, 158, 159, 160, 166, 167, 199, 215, 219, 220, 221, 222, 224, 273, 275, 276, 282, 285, 289, 290, 294, 300, 308, 312], "float32": [87, 154, 175, 331], "float64": 154, "floor": [21, 22, 23, 24, 25, 37], "flow": 199, "fname": 290, "folder": [346, 347], "follow": [30, 43, 47, 57, 59, 66, 78, 104, 162, 164, 212, 262, 287, 291, 308, 343, 346], "fool": 348, "footprint": 89, "forc": 299, "forecast": 348, "form": [87, 95, 104, 205, 290, 346, 347, 348], "format": [16, 19, 20, 72, 78, 87, 92, 95, 97, 148, 156, 157, 158, 159, 160, 166, 167, 212, 219, 220, 221, 222, 224, 285, 287, 289, 290, 292, 327], "format_map": [212, 287], "format_walltim": 290, "former": [41, 43, 45, 47, 57, 66], "forward": [20, 22, 23, 24, 25, 34, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 70, 71, 74, 75, 76, 78, 93, 95, 99, 101, 163, 164, 219, 220, 221, 269, 282, 319, 322, 327, 342, 346, 347, 348], "forward_pass": [15, 16, 71, 72, 284, 285, 343], "forwardpass": [78, 79], "forwardpasschunk": [69, 78], "forwardpassstrategi": [34, 35, 69, 75, 76, 79, 343], "fossil": 348, "found": [43, 47, 57, 66, 162, 163, 164, 170, 173, 175, 212, 236, 269, 287, 290, 343], "four": [22, 23, 24, 25, 224, 343], "foward": 78, "fowardpasschunk": [69, 78], "fp": [249, 320], "fp_out": [5, 9, 10, 11, 12, 13, 19, 30, 32, 282], "fp_out_suffix": 282, "fp_pattern": [282, 320, 343], "fp_set": 282, "fpath": 87, "frac": 66, "fraction": [30, 41, 43, 45, 47, 57, 66], "framework": [52, 87, 89], "frequenc": [7, 9, 10, 11, 12, 13, 30, 32, 274, 277, 304, 305, 348], "frequent": 66, "friction": 199, "from": [7, 9, 10, 11, 12, 13, 17, 19, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 64, 66, 69, 75, 78, 85, 87, 89, 95, 97, 99, 101, 102, 104, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 202, 206, 211, 212, 213, 215, 219, 220, 221, 222, 224, 226, 227, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 245, 251, 252, 259, 269, 272, 273, 275, 276, 282, 287, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 334, 343, 345, 346, 350], "from_arrai": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "from_config": [289, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "from_config_preflight": 289, "fromkei": [162, 164], "front": [212, 287], "fsspec": 97, "full": [7, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 57, 66, 69, 75, 78, 85, 87, 89, 95, 96, 97, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 162, 166, 167, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 238, 239, 240, 241, 282, 311, 312, 316, 317, 346, 347, 348], "full_lat_lon": [215, 224], "full_meta": 87, "full_version_record": 97, "fulli": [66, 105, 151], "func": [256, 327], "funcion": [41, 43, 45, 47, 57, 66], "function": [14, 20, 24, 30, 32, 33, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 60, 66, 70, 78, 79, 90, 104, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 194, 208, 224, 234, 242, 259, 269, 271, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 326, 327, 343], "fund": [346, 347, 348], "fundament": [102, 105, 106], "further": 346, "fusion": 66, "futur": [30, 32, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312, 346, 348], "fwp": 320, "fwp_chunk_shap": [69, 75, 78, 343], "fwp_chunk_siz": 75, "fwp_mask": 78, "g": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 41, 43, 45, 47, 51, 54, 57, 59, 64, 66, 69, 75, 78, 95, 97, 99, 101, 104, 105, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 173, 174, 175, 176, 201, 203, 205, 207, 210, 215, 217, 219, 220, 224, 227, 229, 231, 233, 240, 241, 248, 262, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 289, 292, 294, 298, 311, 312, 315, 316, 317, 343, 346, 347, 348], "game": 348, "gan": [41, 43, 45, 47, 49, 53, 54, 55, 57, 62, 64, 66, 69, 78, 227, 229, 231, 233, 280, 281, 282, 316, 317, 320, 343, 348], "gan_": [43, 47, 57, 66], "gap": [1, 9, 10, 11, 12, 13, 27, 30, 32, 290], "gather": 348, "gaussian": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 166, 167, 300, 308, 312], "gaussian_filt": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32], "gb": [16, 72, 92, 285, 289, 290, 346, 347], "gcm": [7, 8, 9, 10, 11, 12, 13, 30, 32, 157, 158, 159, 160, 163, 166, 167, 171, 214, 219, 220, 343, 346], "gdo": [346, 347, 348], "gen": [41, 43, 45, 47, 57, 66], "gen_config": 347, "gen_lay": [43, 45, 47, 347], "gener": [34, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 76, 77, 78, 89, 102, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 140, 143, 157, 227, 229, 233, 269, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 316, 317, 330, 343, 346, 347], "generator_weight": [41, 43, 45, 47, 57, 66], "geopotenti": [156, 158, 292, 294], "gepotenti": 292, "gershunov": [7, 9, 10, 11, 12, 13], "get": [7, 9, 10, 11, 12, 13, 18, 19, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 69, 75, 78, 80, 85, 87, 89, 95, 96, 97, 99, 101, 102, 104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 188, 191, 197, 201, 203, 205, 207, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 244, 245, 250, 251, 252, 253, 254, 264, 269, 272, 278, 279, 282, 290, 292, 294, 311, 312, 315, 316, 317, 331, 332, 333, 346], "get_all_data": 19, "get_all_step_data": 163, "get_attr": 97, "get_base_data": [7, 9, 10, 11, 12, 13, 30, 32], "get_base_gid": [7, 9, 10, 11, 12, 13, 30, 32], "get_batch": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "get_bc_factor": 18, "get_bias_data": [7, 9, 10, 11, 12, 13, 30, 32], "get_bias_gid": [7, 9, 10, 11, 12, 13, 30, 32], "get_cds_client": 292, "get_chunk": 162, "get_chunk_indic": [75, 78, 85, 87, 89], "get_chunks": 148, "get_clearsky_ghi": [166, 167], "get_closest_row_col": [215, 224], "get_collection_attr": 87, "get_combine_type_data": 162, "get_config": [41, 43, 45, 47, 57, 66, 97, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "get_container_index": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "get_coordinate_indic": 87, "get_cropped_slic": 75, "get_data": [87, 219, 220, 221, 222], "get_data_pair": [7, 9, 10, 11, 12, 13, 30, 32], "get_date_range_kwarg": 259, "get_distance_upper_bound": [219, 220, 221, 222], "get_dset_out": 269, "get_dset_properti": 97, "get_exo_cache_fil": 78, "get_exo_kwarg": 78, "get_exo_raster": 163, "get_exo_step": 163, "get_featur": [229, 233], "get_flist_chunk": 87, "get_height_fil": 19, "get_hour": 292, "get_hr_exo_input": [41, 43, 45, 47, 57, 66], "get_hr_slic": 75, "get_input": [157, 158, 159, 160, 166, 167, 170, 171], "get_input_chunk": 69, "get_input_fil": 19, "get_lat_lon": [19, 95, 99, 101, 215, 224], "get_level_mask": 294, "get_linear_correct": [9, 10, 11, 12, 13], "get_loss_fun": [41, 43, 45, 47, 57, 66], "get_mean": 154, "get_meta_arr": 97, "get_middle_dai": 229, "get_model_step_exo": 162, "get_month": 19, "get_monthly_fil": 292, "get_multi_level_data": [157, 158, 159, 160, 166, 167, 170, 171], "get_node_cmd": [7, 9, 10, 11, 12, 13, 30, 32, 69, 85, 87, 89, 269, 282, 289], "get_nsrdb_data": 282, "get_optimizer_config": [41, 43, 45, 47, 57, 66], "get_optimizer_st": [41, 43, 45, 47, 57, 66], "get_output_fil": 19, "get_pad_width": 75, "get_padded_slic": 75, "get_qdm_param": [30, 32], "get_queu": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "get_random_contain": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "get_raster_index": [204, 215, 224], "get_regridd": 217, "get_renamed_featur": [95, 99, 101], "get_s_enhance_from_lay": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "get_sam_df": 97, "get_sampl": 312, "get_sample_index": [111, 227, 229, 231, 233, 316, 317], "get_scale_factor": 97, "get_single_grad": [41, 43, 45, 47, 57, 66], "get_single_level_data": [157, 158, 159, 160, 166, 167, 170, 171], "get_single_step_data": 163, "get_slic": 87, "get_spatial_slic": 75, "get_std": 154, "get_sup3r_fp": 282, "get_t_enhance_from_lay": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "get_target_and_masked_meta": 87, "get_tim": [95, 99, 101], "get_time_dim_nam": [85, 87, 89, 95, 96, 99, 101], "get_time_slic": [75, 78, 166, 167], "get_unique_chunk_fil": 87, "get_unit": 97, "get_weight_update_fract": [43, 47, 57, 66], "get_zenith": 195, "getpass": 290, "getus": 290, "ghi": [24, 157, 166, 167, 173, 174, 269, 280, 281, 282, 343], "gid": [7, 9, 10, 11, 12, 13, 30, 32, 77, 95, 97, 99, 101], "git": [346, 347, 348, 349], "github": [348, 349], "give": [43, 45, 47, 49, 51, 53, 54, 55, 57, 66, 75, 102, 104, 215, 224, 229, 273, 274, 275, 276, 277, 278, 279], "given": [9, 10, 11, 12, 13, 18, 19, 23, 24, 27, 28, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 85, 87, 89, 95, 96, 99, 101, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 199, 205, 212, 215, 219, 220, 221, 222, 224, 229, 244, 258, 263, 273, 274, 275, 276, 277, 278, 279, 282, 287, 289, 290, 291, 292, 294, 298, 311, 312, 330, 343, 347], "glaw": [346, 347, 348], "glob": [78, 163, 219, 220, 269, 320], "global": [7, 9, 10, 11, 12, 13, 18, 21, 30, 32, 85, 87, 89, 95, 96, 97, 99, 101, 148, 343, 346, 348], "global_attr": [19, 85, 87, 89, 95, 96, 97, 99, 101, 148], "global_scalar": 18, "globalatla": 17, "go": [8, 41, 43, 45, 47, 57, 66, 69, 75, 77, 78, 95, 99, 101, 157, 217, 269, 346, 347], "goal": [346, 348], "good": [30, 32, 43, 47, 57, 66, 268, 343], "gov": [188, 191, 346], "govern": [346, 347, 348], "gpu": [41, 43, 45, 47, 57, 66, 78, 348, 349], "gracefulli": 62, "grad": [41, 43, 45, 47, 57, 66], "gradient": [41, 43, 45, 47, 57, 66, 275], "grant": [346, 348], "grantbust": 229, "greater": [75, 236], "greatli": 346, "grid": [7, 9, 10, 11, 12, 13, 19, 30, 32, 41, 43, 45, 47, 57, 64, 66, 75, 78, 89, 95, 99, 101, 102, 104, 157, 158, 159, 160, 163, 166, 167, 198, 215, 217, 219, 220, 221, 222, 224, 231, 233, 238, 239, 240, 241, 346, 347, 348], "grid_shap": [104, 215, 224], "grid_siz": [75, 158], "gridpoint": 30, "ground": [41, 43, 45, 47, 57, 66, 158, 199, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 346, 348], "group": [87, 89, 97, 104, 156, 255], "group_spatial_chunk": 89, "guarante": 37, "guess": [104, 219, 220, 269], "guilherm": 348, "h5": [7, 9, 10, 11, 12, 13, 18, 19, 30, 32, 36, 37, 69, 78, 83, 84, 85, 89, 95, 96, 97, 101, 148, 157, 158, 159, 160, 163, 166, 167, 173, 175, 201, 203, 207, 214, 215, 219, 220, 221, 222, 224, 249, 254, 268, 269, 282, 319, 320, 322, 343, 346, 347, 348], "h5_file": 97, "h5py": 97, "h5pyd": 97, "ha": [7, 9, 10, 11, 12, 13, 30, 32, 43, 45, 47, 49, 55, 57, 59, 66, 69, 75, 78, 87, 89, 95, 99, 101, 104, 105, 115, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 151, 162, 163, 164, 186, 189, 196, 198, 212, 218, 219, 220, 229, 233, 272, 273, 275, 276, 282, 287, 311, 319, 320, 322, 343, 346, 347, 348], "had": 346, "half": [30, 32, 241], "hand": [104, 299], "handl": [6, 7, 16, 30, 32, 66, 68, 72, 92, 94, 95, 97, 98, 99, 100, 125, 131, 132, 133, 134, 135, 157, 158, 159, 160, 166, 167, 171, 212, 219, 220, 221, 222, 224, 285, 287, 289, 290, 292, 294, 335, 338, 343], "handler": [7, 9, 10, 11, 12, 13, 30, 32, 33, 34, 36, 37, 41, 43, 45, 47, 57, 62, 66, 69, 78, 97, 102, 105, 111, 114, 115, 116, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 137, 151, 154, 157, 158, 161, 166, 204, 219, 220, 227, 229, 231, 233, 252, 269, 282, 292, 311, 312, 313, 316, 317, 346, 347, 348], "handlerclass": 252, "happen": 343, "hardwar": [346, 347], "has_interp_vari": [157, 158, 159, 160, 166, 167, 170, 171], "hassanali": 348, "have": [22, 23, 24, 25, 30, 32, 34, 41, 43, 45, 47, 51, 57, 59, 66, 75, 78, 85, 87, 89, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 166, 167, 170, 171, 212, 219, 220, 221, 226, 229, 261, 269, 272, 273, 275, 276, 282, 287, 290, 291, 292, 311, 312, 317, 346, 347, 348, 349], "hdf": [24, 249], "hdf5": [30, 32, 156], "head": 78, "head_nod": 78, "header": 290, "heart": 348, "heat": [346, 348], "hegewisch": [28, 30], "height": [19, 59, 95, 99, 101, 156, 157, 158, 159, 160, 166, 167, 170, 171, 176, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 212, 292, 293, 294, 299, 332], "held": 290, "help": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 95, 99, 101, 224, 343, 348], "helper": 309, "henc": [30, 32], "here": [24, 30, 32, 37, 43, 47, 57, 59, 66, 75, 78, 102, 108, 128, 157, 173, 175, 218, 268, 291, 343, 346, 347, 348], "hh": 290, "hi": [43, 47, 57, 66, 219, 220], "hi_r": [41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 66], "hi_res_gen": [41, 43, 47, 57, 66], "hi_res_pr": 59, "hi_res_rh": 59, "hi_res_temp": 59, "hi_res_topo": [41, 43, 45, 47, 66], "hi_res_tru": [41, 43, 45, 47, 57, 66], "hidden": [41, 43, 45, 47, 57, 66], "hidden_lay": [41, 43, 45, 47, 57, 66], "high": [7, 9, 10, 11, 12, 13, 16, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 72, 75, 78, 92, 95, 99, 101, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 156, 166, 167, 196, 198, 217, 219, 220, 221, 222, 227, 229, 231, 232, 233, 269, 285, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 316, 317, 319, 322, 343, 346, 347], "high_r": [108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 216, 217, 229, 311, 312, 347], "higher": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 219, 220], "highest": [162, 212, 287], "highli": 348, "histogram": [272, 273, 275, 276], "histor": [8, 13, 23, 24, 30, 32, 37, 346, 347], "histori": [41, 43, 45, 47, 57, 66], "hold": 290, "home": [348, 349], "hook": [166, 348, 349], "host": 97, "hour": [16, 57, 72, 92, 229, 236, 237, 282, 285, 289, 290], "hourli": [7, 9, 10, 11, 12, 13, 30, 32, 57, 104, 108, 157, 219, 220, 229, 292, 346, 347, 348], "how": [7, 9, 10, 11, 12, 13, 19, 30, 32, 43, 45, 47, 49, 51, 53, 57, 59, 66, 78, 89, 112, 114, 115, 117, 118, 119, 121, 122, 123, 139, 157, 158, 159, 160, 163, 164, 166, 167, 170, 171, 221, 226, 227, 229, 231, 233, 282, 291, 311, 312, 316, 317, 343, 346, 347], "hpa": 292, "hpc": [16, 72, 78, 92, 285, 289, 290, 343, 348], "hr": [102, 108, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 217, 319], "hr_": 347, "hr_cache_kwarg": 217, "hr_crop_slic": [69, 75, 77], "hr_data": 217, "hr_dh": 347, "hr_exo": 163, "hr_exo_featur": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 163, 227, 229, 231, 233, 311, 312, 316, 317], "hr_featur": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 128, 227, 229, 231, 233, 316, 317], "hr_features_ind": [128, 227, 229, 231, 233, 316, 317], "hr_lat_lon": [77, 78, 219, 220, 221, 222, 319], "hr_out_featur": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 163, 227, 229, 231, 233, 316, 317], "hr_sample_shap": [227, 229, 231, 233, 316, 317], "hr_shape": [43, 47, 57, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 219, 220, 221, 222, 311, 312], "hr_slice": 75, "hr_spatial_coarsen": [157, 158, 159, 160, 166, 167, 171, 347], "hr_time": [77, 319], "hr_time_index": [219, 220, 221, 222], "hr_topo": [54, 59], "hrrr": [343, 346], "hrrr_2015": 343, "hsd": [97, 346, 347], "hsds_kwarg": 97, "html": [104, 188, 191], "http": [7, 9, 10, 11, 12, 13, 17, 104, 180, 188, 191, 291, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 346, 347, 348], "hub": [19, 59, 186, 189, 294, 299], "humid": [54, 59, 78, 180, 347, 348], "hurrican": 346, "hydrolog": [28, 30], "hydrometeorologi": [28, 30], "hyper": 348, "i": [7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 22, 23, 24, 25, 27, 28, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 71, 72, 75, 78, 87, 89, 91, 92, 95, 97, 99, 101, 104, 106, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 174, 175, 176, 179, 180, 196, 197, 198, 199, 201, 202, 203, 205, 207, 212, 215, 217, 218, 219, 220, 221, 222, 224, 227, 229, 231, 233, 236, 237, 240, 241, 247, 248, 251, 252, 255, 260, 263, 264, 265, 266, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 285, 287, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 319, 320, 339, 343, 346, 347, 348, 349], "i_t_chunk": 343, "id": [282, 290, 327], "ident": [41, 43, 45, 47, 57, 66, 219, 220], "identifi": [30, 95, 97, 99, 101, 212, 287], "idf": 269, "idf_solar": 55, "idf_wind": 55, "idf_wind_out": 55, "idnn": 282, "idx": [104, 108], "ie": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "ignor": [23, 24, 28, 30, 37, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 212, 282, 287, 312], "imag": 59, "impact": [346, 348], "imperfect": 346, "implement": [30, 111, 166, 212, 287, 308], "impli": 97, "import": [43, 45, 47, 49, 51, 57, 59, 66, 69, 78, 87, 104, 108, 219, 220, 269, 347, 348], "impos": 30, "improv": [7, 9, 10, 11, 12, 13, 18, 28, 30, 32, 346, 348], "in_featur": 19, "in_fil": 18, "in_height": 19, "includ": [19, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 95, 97, 104, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 157, 158, 159, 160, 166, 167, 170, 171, 174, 176, 177, 178, 206, 212, 214, 217, 227, 229, 231, 233, 251, 254, 259, 269, 282, 287, 289, 292, 294, 303, 307, 311, 312, 316, 317, 343, 346, 347], "inclus": 335, "incompat": 292, "inconsist": 217, "increas": [23, 24, 37, 43, 47, 57, 66, 95, 99, 101, 348], "increment": 78, "independ": [104, 108, 152], "index": [18, 19, 25, 30, 32, 43, 45, 47, 54, 57, 59, 69, 75, 77, 78, 80, 85, 87, 89, 95, 96, 97, 99, 101, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 157, 158, 159, 160, 162, 163, 164, 166, 167, 171, 212, 215, 219, 220, 221, 222, 224, 227, 229, 233, 235, 236, 237, 251, 259, 263, 269, 282, 287, 290, 294, 311, 312, 316, 317, 339], "index_slic": 80, "indexedslic": [41, 43, 45, 47, 57, 66], "indic": [7, 9, 10, 11, 12, 13, 30, 32, 55, 66, 75, 78, 85, 87, 89, 95, 97, 99, 101, 104, 215, 219, 220, 221, 222, 224, 227, 229, 231, 233, 251, 282, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 312, 316, 317, 325], "indistinguish": 348, "individu": [41, 43, 45, 47, 57, 66, 346], "infer": [43, 45, 47, 49, 53, 54, 55, 57, 66], "info": [41, 43, 45, 47, 53, 57, 61, 66, 78, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 163, 311, 312], "inform": [30, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 226, 311, 312, 347, 348], "inherit": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 156, 311, 312], "init": [41, 43, 45, 47, 51, 57, 59, 66, 97], "init_chunk": 78, "init_h5": 97, "init_input_handl": 78, "init_optim": [41, 43, 45, 47, 57, 66], "init_sampl": [112, 114, 115, 117, 118, 119, 121, 122, 123, 311, 312], "init_weight": [43, 47, 57, 66], "initi": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 51, 57, 59, 66, 69, 78, 87, 89, 97, 104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 163, 166, 167, 170, 171, 176, 188, 201, 203, 205, 207, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 268, 269, 282, 292, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 343, 346, 347, 348], "initializa": 78, "inject": [114, 115, 117, 118, 119, 121, 122, 123, 227, 229, 231, 233, 311, 316, 317], "input": [7, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 35, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 74, 75, 76, 78, 87, 95, 97, 99, 101, 108, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 143, 148, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 173, 175, 176, 186, 187, 188, 189, 190, 191, 201, 203, 205, 207, 215, 219, 220, 221, 222, 224, 227, 229, 231, 233, 236, 237, 246, 252, 264, 269, 282, 289, 290, 316, 317, 320, 322, 333, 334, 343, 346, 348], "input_arrai": [41, 43, 45, 47, 57, 66], "input_data": [69, 77, 78], "input_dim": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "input_fil": [19, 78], "input_handl": [34, 35, 78, 269], "input_handler_kwarg": [78, 219, 220, 221, 222, 269, 343], "input_handler_nam": [78, 219, 220, 221, 222, 252, 269], "input_resolut": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "insert": [162, 164, 212, 287], "insid": [9, 10, 11, 12, 13, 27, 30, 32], "inspect": 346, "instal": 291, "instanc": [7, 9, 10, 11, 12, 13, 28, 30, 32, 36, 37, 59, 69, 78, 97, 104, 108, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 163, 212, 217, 229, 233, 245, 255, 269, 273, 275, 276, 287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 346, 347], "instanti": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 66, 81, 97, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "instead": [43, 47, 57, 66, 87, 97, 108, 157, 158, 159, 160, 162, 166, 167, 171, 201, 203, 205, 207, 212, 215, 221, 224, 225, 287, 348, 349], "instruct": [291, 346, 347, 348, 349], "int": [7, 9, 10, 11, 12, 13, 16, 18, 23, 24, 30, 32, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 72, 75, 77, 78, 80, 87, 92, 95, 97, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 148, 157, 158, 159, 160, 162, 164, 166, 167, 171, 188, 212, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 235, 236, 237, 239, 263, 269, 272, 273, 275, 276, 278, 279, 282, 285, 287, 289, 290, 292, 298, 311, 312, 316, 317, 327, 339, 340], "inteeg": 148, "integ": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 85, 87, 89, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 175, 212, 229, 235, 237, 287, 290, 311, 312], "integr": [88, 105, 151], "intend": [97, 163, 219, 220, 227, 229, 231, 233, 316, 317], "intention": [212, 287], "interact": [105, 108], "interest": [9, 10, 11, 12, 13, 27, 30, 32, 69, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 195, 346], "interfac": [4, 5, 38, 40, 41, 51, 59, 104, 108, 127, 140, 206, 207, 226, 343, 348], "interior": [9, 10, 11, 12, 13, 27, 30, 32], "intermedi": 19, "intern": [104, 282, 299, 348], "interp": [19, 50, 51, 59, 64], "interp_kwarg": [157, 158, 159, 160, 166, 167, 170, 171, 294], "interp_method": 59, "interp_to_level": 294, "interpol": [19, 51, 59, 64, 95, 99, 101, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 145, 156, 157, 158, 159, 160, 166, 167, 170, 171, 272, 273, 275, 276, 329], "interpolate_na": [27, 104, 157, 158, 159, 160, 166, 167, 171], "interpret": [212, 287], "interrupt": 62, "intersect": 346, "interv": [41, 43, 45, 47, 57, 66], "introduc": 59, "invers": [95, 99, 101], "invert": [95, 99, 101], "invert_uv": [69, 78, 95, 99, 101], "invert_uv_featur": [95, 99, 101], "invert_uv_single_pair": [95, 99, 101], "invlog": [30, 32], "invok": [287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "irena": 17, "irradi": [166, 167, 282, 343, 348], "irrevoc": [346, 347, 348], "is_4d": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "is_5d": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "is_increasing_lon": [95, 99, 101], "is_regular_grid": 89, "is_writ": 97, "isalnum": [212, 287], "isalpha": [212, 287], "isascii": [212, 287], "isdecim": [212, 287], "isdigit": [212, 287], "isel": [104, 108, 265], "isidentifi": [212, 287], "iskeyword": [212, 287], "island": [346, 348], "islow": [212, 287], "isnumer": [212, 287], "isobar": [156, 157, 158, 159, 160, 166, 167], "isol": 343, "isprint": [212, 287], "isspac": [212, 287], "issu": [7, 9, 10, 11, 12, 13, 30, 32, 125, 346], "istitl": [212, 287], "isupp": [212, 287], "item": [162, 164], "iter": [41, 43, 45, 47, 57, 62, 66, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 162, 164, 212, 227, 287, 311, 312], "ith": [78, 162], "its": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 212, 282, 287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 346, 348, 349], "itself": [53, 54, 55, 212, 287], "j": [28, 30, 32, 346, 348], "januari": [30, 32], "job": [2, 16, 72, 78, 87, 89, 92, 285, 289, 290, 343, 346, 347], "job_id": [16, 72, 92, 285, 289, 290], "job_nam": [87, 89, 289, 290], "join": [212, 287], "journal": [28, 30, 32, 180], "json": [41, 43, 45, 47, 51, 54, 57, 59, 66, 69, 97, 148, 154, 338, 343, 346, 347], "jupyt": 346, "just": [12, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 87, 105, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 130, 154, 157, 158, 159, 160, 166, 167, 186, 189, 213, 214, 217, 219, 220, 225, 265, 269, 292, 311, 312, 346, 347], "justifi": [212, 287], "k": [7, 9, 10, 11, 12, 13, 23, 28, 30, 32, 59, 162, 164, 278, 279], "k_rang": 23, "kdtree": [219, 220, 221, 222, 282], "keep": [7, 9, 10, 11, 12, 13, 24, 30, 32, 41, 43, 45, 47, 51, 57, 59, 66, 87, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 273, 275, 276, 290, 298, 311, 312, 317], "keep_dim_ord": 148, "keep_sh": 290, "keepend": [212, 287], "kei": [7, 9, 10, 11, 12, 13, 19, 30, 32, 41, 43, 45, 47, 51, 54, 57, 59, 66, 78, 97, 104, 108, 148, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 212, 217, 247, 265, 269, 287, 290, 291, 292, 294, 298, 343, 348], "kelvin": [182, 183, 184, 185], "kept": [41, 43, 45, 47, 51, 57, 59, 66], "kera": [41, 43, 45, 47, 57, 63, 66, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307], "kernel": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 300, 308], "kestrel": 343, "keyboard": 62, "keyerror": [162, 164], "keyword": [23, 24, 25, 34, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 62, 66, 69, 78, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 138, 139, 157, 158, 159, 160, 163, 166, 167, 171, 176, 201, 203, 205, 207, 212, 224, 269, 287, 292, 311, 343], "kg": 30, "kick": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312, 343, 346, 347], "kickoff_local_job": 289, "kickoff_slurm_job": 289, "kilomet": 348, "kind": 346, "kinet": [112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 277, 278, 312], "king": [346, 347, 348], "km": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 346, 347, 348], "know": [30, 32], "known": [217, 343, 346], "kolmogorov": [7, 9, 10, 11, 12, 13, 30, 32], "kwarg": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 62, 66, 69, 78, 81, 85, 87, 89, 97, 104, 107, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 157, 158, 159, 160, 166, 167, 170, 171, 176, 201, 203, 207, 212, 217, 219, 220, 224, 250, 251, 259, 269, 282, 287, 289, 294, 311, 312, 317, 335, 338, 341, 343], "lab": 348, "label": [43, 47, 57, 66, 95, 99, 101, 104, 346], "laboratori": [346, 347, 348], "lack": [30, 32, 162, 164], "lai": 346, "lamar": [188, 191], "lanczo": 59, "land": 346, "landmark": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "laps": 59, "larg": [9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 28, 30, 32, 37, 78, 195, 219, 220, 224, 346, 348], "larger": [30, 227, 229, 231, 233, 316, 317, 346], "largest": [108, 217], "last": [41, 43, 45, 47, 49, 55, 57, 66, 75, 95, 99, 101, 104, 128, 162, 164, 196, 198, 215, 219, 220, 221, 222, 224, 319, 320, 322, 329], "lat": [7, 9, 10, 11, 12, 13, 19, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 54, 59, 69, 78, 89, 95, 97, 99, 101, 104, 157, 158, 159, 160, 166, 167, 195, 196, 198, 201, 203, 215, 219, 220, 221, 222, 224, 273, 274, 275, 276, 277, 278, 279, 294, 319, 320, 322], "lat_lon": [22, 23, 24, 25, 95, 97, 99, 101, 104, 176, 195, 196, 198, 215, 219, 220, 221, 222, 224], "lat_lon_arrai": [24, 104], "lat_rang": [321, 323], "lat_slic": 34, "latest": 104, "latitud": [19, 22, 23, 24, 25, 89, 97, 104, 195, 227, 316], "latter": [7, 9, 10, 11, 12, 13, 30, 32, 95, 99, 101, 104], "launch": 78, "law": [167, 188, 191], "layer": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 162, 163, 164, 301], "layer_nam": 301, "lazi": [20, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 225, 311, 312], "lazili": 202, "ldrd": [346, 347, 348], "lead": [212, 287, 346, 348], "leap": [30, 32], "learn": [41, 43, 45, 47, 57, 66, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 346], "learning_r": [41, 43, 45, 47, 57, 66], "learning_rate_disc": [43, 47], "least": [212, 287], "leav": 221, "left": [7, 9, 10, 11, 12, 13, 30, 32, 104, 157, 158, 159, 160, 166, 167, 212, 215, 224, 240, 287, 299], "legaci": 346, "len": [106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 166, 167, 170, 171, 201, 203, 205, 207, 212, 215, 217, 224, 227, 229, 231, 233, 248, 263, 274, 277, 278, 279, 287, 311, 312, 315, 316, 317], "length": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 36, 80, 212, 282, 287, 330], "lengthli": 251, "less": [28, 30, 41, 43, 45, 47, 57, 66, 87, 235, 237], "let": 217, "lev_arrai": 294, "level": [41, 43, 45, 47, 57, 66, 87, 89, 97, 157, 158, 159, 160, 166, 167, 170, 171, 180, 207, 212, 292, 294, 343, 346, 347], "level_fil": 292, "level_typ": 292, "leverag": [6, 348], "li": 348, "librari": [7, 9, 10, 11, 12, 13, 24, 30, 32], "licens": [346, 347, 348], "lifo": [162, 164], "like": [6, 8, 9, 10, 11, 12, 13, 27, 30, 32, 43, 47, 57, 66, 78, 87, 104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 151, 152, 154, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 173, 175, 201, 203, 205, 207, 214, 215, 217, 224, 227, 229, 231, 233, 280, 281, 282, 292, 311, 312, 315, 316, 317, 343, 346, 348], "limit": [30, 32, 69, 78, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 212, 224, 287, 290, 311, 312, 329], "line": [38, 212, 287, 290, 343, 348], "linear": [9, 10, 11, 12, 13, 25, 30, 32, 36, 43, 45, 47, 49, 53, 54, 55, 57, 59, 66, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 159, 160, 166, 167, 170, 171], "linearcorrect": [10, 12, 36, 343], "linearinterp": 59, "linearli": [30, 32, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "linearregress": 59, "link": 348, "lise": 282, "list": [7, 9, 10, 11, 12, 13, 19, 30, 32, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 80, 85, 87, 89, 95, 96, 97, 99, 101, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 151, 152, 154, 157, 158, 159, 160, 162, 163, 166, 167, 170, 171, 176, 201, 203, 205, 207, 212, 215, 219, 220, 224, 227, 229, 231, 233, 238, 240, 241, 249, 254, 258, 261, 263, 264, 266, 269, 274, 277, 278, 279, 282, 287, 290, 292, 301, 311, 312, 316, 317, 319, 320, 322, 329, 343, 348], "littl": [52, 157, 158, 159, 160, 166, 167, 170, 171], "ljust": [212, 287], "ll": [346, 347], "ll_chunk": 195, "lmjohns3": 308, "load": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 97, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 156, 157, 158, 159, 160, 166, 167, 169, 176, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 217, 219, 220, 221, 222, 224, 225, 290, 311, 312, 343, 346, 347, 348], "load_chunk": 158, "load_exo_data": 78, "load_featur": [157, 158, 159, 160, 166, 167], "load_network": [41, 43, 45, 47, 57, 66], "load_saved_param": [41, 43, 45, 47, 57, 66], "loader": [20, 102, 105, 148, 155, 156, 157, 158, 159, 160, 166, 167, 168, 176, 188, 213, 215, 219, 220, 221, 222, 224, 227, 231, 268, 292, 316, 317], "loaderclass": [157, 158, 159, 160, 166, 167, 224], "loaderh5": 252, "loadernc": 252, "local": [15, 57, 59, 71, 91, 97, 282, 284, 289, 343, 346, 347, 348], "local_linear_bc": 24, "local_qdm_bc": [30, 32], "locat": [20, 30, 32, 66, 97, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 159, 160, 166, 167, 170, 171, 195, 201, 203, 205, 207, 236, 346, 347, 348], "log": [30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 78, 87, 89, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 199, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 251, 256, 292, 311, 312, 315, 316, 317, 327, 343, 346, 347], "log_": 343, "log_bas": [30, 32], "log_fil": [87, 89, 292, 343], "log_level": [87, 89, 343], "log_loss_detail": [41, 43, 45, 47, 57, 66], "log_pattern": 343, "log_queue_info": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "logdir": [43, 45, 47, 57, 66], "logger": [41, 43, 45, 47, 57, 66, 327], "logic": [218, 343], "logit": [43, 47, 57, 66], "lon": [7, 9, 10, 11, 12, 13, 19, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 54, 59, 69, 78, 89, 95, 97, 99, 101, 104, 157, 158, 159, 160, 166, 167, 195, 196, 198, 201, 203, 215, 219, 220, 221, 222, 224, 273, 274, 275, 276, 277, 278, 279, 294, 319, 320, 322], "lon_rang": [321, 323], "lon_slic": 34, "long": [30, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 104, 156, 227, 231, 316, 317], "longer": [30, 346], "longitud": [19, 22, 23, 24, 25, 89, 95, 97, 99, 101, 104, 195, 210, 227, 316], "look": [95, 99, 101, 170, 343], "lookup": [170, 212, 258, 269, 287], "lookuperror": [212, 287], "loss": [41, 43, 45, 47, 57, 66, 111, 112, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 233, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312], "loss_detail": [41, 43, 45, 47, 57, 61, 66], "loss_disc": [43, 47, 57, 66], "loss_func": [41, 43, 45, 47, 57, 66], "loss_gen": [43, 47, 57, 66], "loss_gen_": [43, 47, 57, 66], "loss_metr": [41, 43, 45, 47, 57, 66], "loss_ob": 66, "loss_obs_weight": 66, "lot": [218, 346, 347], "low": [7, 9, 10, 11, 12, 13, 22, 25, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 95, 99, 101, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 162, 163, 217, 219, 220, 221, 222, 227, 229, 231, 232, 233, 269, 298, 311, 312, 316, 317, 320, 322, 343, 346, 347, 348], "low_r": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 216, 217, 311, 312, 347], "low_res_lat_lon": [95, 99, 101, 320, 322], "low_res_tim": [95, 99, 101, 320, 322], "lower": [7, 9, 10, 11, 12, 13, 30, 32, 43, 47, 57, 66, 104, 112, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 138, 139, 157, 158, 159, 160, 166, 167, 170, 171, 212, 215, 224, 257, 287, 312], "lower_left_coordin": 158, "lower_model": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "lowercas": [212, 287], "lowest": [7, 9, 10, 11, 12, 13, 30, 32, 207, 212, 287], "lr": [102, 108, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 163, 217], "lr_": 347, "lr_cache_kwarg": 217, "lr_data": 217, "lr_dh": 347, "lr_featur": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 163], "lr_nei": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "lr_only_featur": [112, 114, 115, 117, 118, 119, 121, 122, 123, 128, 227, 229, 231, 233, 311, 312, 316, 317], "lr_pad_slic": 77, "lr_padded_slic": [22, 23, 24, 25], "lr_sample_shap": 229, "lr_shape": [43, 47, 57, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 219, 220, 221, 222, 311, 312], "lr_slice": [75, 162], "lr_topo": [54, 59], "lstrip": [212, 287], "m": [7, 9, 10, 11, 12, 13, 15, 16, 54, 59, 71, 72, 91, 92, 95, 99, 101, 157, 158, 159, 160, 166, 167, 170, 171, 284, 285, 289, 290, 346, 347, 348, 349], "m2": [30, 166, 167, 282], "machin": [346, 347, 348, 349], "maclaurin": 347, "made": [157, 158, 159, 160, 166, 167], "madi": [219, 220], "mae": [57, 66, 303, 307], "magic": 343, "magnitud": 30, "mai": [97, 108, 212, 287, 346, 347], "main": [32, 54, 59, 348, 349], "mainli": [212, 287], "mainqueueclass": 116, "maintain": [24, 41, 43, 45, 47, 57, 66, 126], "make": [23, 24, 30, 32, 37, 43, 47, 55, 59, 75, 78, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 166, 167, 212, 217, 229, 233, 243, 259, 268, 269, 282, 287, 289, 290, 292, 311, 312, 319, 320, 321, 322, 323, 324, 343, 346, 347, 348, 349], "make_mask": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "make_output": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "make_path": 290, "make_sh": 290, "make_yearly_fil": 292, "make_yearly_var_fil": 292, "maketran": [212, 287], "malik": 348, "manag": [290, 346, 347, 348, 349], "mani": [7, 9, 10, 11, 12, 13, 30, 32, 217, 343, 346, 347], "manipul": [55, 57], "manual": [43, 47, 57, 66, 157, 264], "manuscript": 346, "map": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 87, 108, 157, 158, 159, 160, 166, 167, 170, 171, 211, 212, 219, 220, 221, 222, 287, 301, 346], "map_block": 195, "map_new_nam": [157, 158, 159, 160, 166, 167, 170, 171], "mappabl": 57, "mark": 237, "mask": [19, 45, 66, 78, 87, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 159, 160, 166, 167, 171, 175, 282, 294], "mask1": 294, "mask2": 294, "masked_meta": 87, "match": [7, 9, 10, 11, 12, 13, 20, 24, 30, 32, 37, 51, 54, 55, 57, 59, 66, 78, 95, 99, 101, 102, 112, 114, 115, 117, 118, 119, 121, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 157, 158, 159, 160, 162, 166, 167, 170, 171, 180, 216, 219, 220, 235, 250, 252, 269, 282, 287, 311, 312, 320], "match_zero_r": [7, 9, 10, 11, 12, 13, 30, 32], "materi": 299, "material_deriv": 299, "matter": [43, 47, 57, 66, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 348], "maurer": [28, 30], "max": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 69, 75, 78, 95, 99, 101, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 157, 183, 269, 272, 273, 274, 275, 276, 277, 278, 279, 292, 300, 303, 307, 312, 340], "max_batch": [41, 43, 45, 47, 57, 66], "max_delta": 224, "max_lat": 292, "max_length": [278, 279], "max_lon": 292, "max_nod": [78, 343], "max_tim": [274, 277], "max_work": [5, 9, 10, 11, 12, 13, 18, 23, 24, 30, 32, 37, 87, 95, 99, 101, 125, 126, 128, 148, 219, 220, 221, 222, 292, 343], "maximum": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 66, 69, 78, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 166, 167, 212, 215, 219, 220, 221, 222, 224, 273, 275, 276, 287, 300, 311, 312], "maxsplit": [212, 287], "mayb": [157, 218], "mean": [7, 9, 10, 11, 12, 13, 17, 19, 27, 30, 32, 41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 97, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 154, 166, 167, 199, 212, 287, 292, 300, 311, 312, 346], "meanabsoluteerror": [41, 43, 45, 47, 57, 66, 298], "meansquarederror": [41, 43, 45, 47, 57, 66, 298], "measur": [196, 198, 346, 348], "median": [7, 9, 10, 11, 12, 13, 30, 32, 219, 220], "meet": [75, 78], "member": [108, 112, 114, 115, 123, 126, 128, 138, 139, 141, 152, 156, 229, 233, 289, 311, 312], "memori": [16, 72, 78, 92, 95, 99, 101, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224, 285, 289, 290, 311, 312], "memoryerror": 78, "mere": 202, "mesoscal": 346, "met": 75, "meta": [7, 9, 10, 11, 12, 13, 19, 27, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 85, 87, 89, 95, 96, 97, 99, 101, 104, 109, 148, 162, 166, 167, 219, 220, 221, 222, 269, 282, 320], "meta_arr": 97, "meta_data": [95, 99, 101], "metal": [348, 349], "meteorolog": [58, 346, 348], "meteorologi": [54, 346, 348], "meter": [54, 59, 158, 199], "method": [5, 7, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 62, 66, 69, 75, 77, 78, 79, 85, 87, 89, 95, 96, 97, 99, 101, 104, 106, 107, 108, 109, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 145, 148, 152, 153, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 170, 171, 195, 200, 201, 203, 204, 205, 207, 212, 213, 215, 217, 219, 220, 221, 222, 224, 225, 227, 229, 231, 233, 242, 246, 256, 268, 269, 282, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 327, 335, 340, 343, 346, 348], "methodologi": 55, "metric": [295, 298], "mf": 30, "mh": 30, "microclim": 348, "mid": [41, 43, 45, 47, 66, 69, 114, 115, 117, 118, 119, 121, 122, 123, 162, 227, 229, 231, 233, 311, 316, 317], "middl": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 229, 282], "midnight": 235, "might": [28, 30, 43, 45, 47, 49, 53, 54, 55, 57, 66, 78, 105, 162, 219, 220, 343, 346, 348], "migrat": [105, 151], "mimic": 107, "mimick": [15, 16, 71, 72, 87, 91, 92, 284, 285, 289], "min": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 78, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 157, 184, 219, 220, 269, 272, 273, 274, 275, 276, 277, 278, 279, 292, 303, 307, 312, 340], "min_lat": 292, "min_length": [278, 279], "min_lon": 292, "min_tim": [274, 277], "min_width": [75, 78], "mini": [41, 43, 45, 47, 57, 66], "miniconda": [346, 347], "minim": [5, 7, 9, 10, 11, 12, 13, 30, 32, 59, 346, 348], "minimum": [23, 24, 28, 30, 32, 37, 75, 78, 148, 157, 158, 159, 160, 166, 167], "minor": 217, "minu": [59, 269], "minut": [157, 158, 159, 160, 166, 167, 171, 347, 348], "miscellan": [142, 194, 234, 326], "mislead": 32, "miss": [9, 10, 11, 12, 13, 27, 30, 32, 104, 162], "missus": [30, 32], "mixin": [61, 218], "ml": 346, "mm": [28, 30, 290], "mmd": [300, 308], "mode": [55, 57, 69, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 145, 148, 289, 311, 312], "model": [7, 8, 9, 10, 11, 12, 13, 30, 32, 34, 69, 75, 78, 81, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 157, 161, 162, 163, 164, 219, 220, 226, 227, 229, 230, 231, 233, 269, 282, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 320, 343, 345, 348, 349], "model_class": [69, 78, 81], "model_dir": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 343], "model_kwarg": [53, 69, 78, 343], "model_meta": 320, "model_param": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 347], "model_step": 162, "model_step_exo": 162, "modern": [346, 348], "modif": 57, "modul": [1, 3, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 55, 57, 60, 66, 68, 78, 82, 93, 102, 142, 194, 212, 267, 268, 269, 270, 280, 281, 282, 287, 289, 290, 326, 343, 346, 347], "module_class": 289, "module_nam": [15, 16, 71, 72, 91, 92, 284, 285, 289], "module_root": 290, "modulefil": 290, "modulenam": 289, "moldova": 347, "moment": [44, 45, 114, 115, 117, 118, 119, 121, 122, 123, 129, 130, 131, 132, 133, 134, 135, 136, 311], "monitor": [343, 346, 347], "month": [11, 18, 19, 25, 30, 32, 291, 292], "monthli": [10, 11, 12, 13, 19, 25, 30, 32, 36, 292], "monthly_averaged_ensemble_memb": 292, "monthly_averaged_reanalysi": 292, "monthly_fil": 292, "monthly_file_pattern": 292, "monthly_fpattern": 292, "monthlylinearcorrect": [11, 13, 36], "more": [7, 9, 10, 11, 12, 13, 22, 23, 25, 30, 32, 36, 37, 41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 69, 78, 104, 156, 157, 158, 159, 160, 161, 162, 166, 167, 212, 215, 224, 227, 231, 254, 268, 282, 287, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 316, 317, 343, 346, 347, 348], "most": [43, 45, 47, 104, 108, 157, 158, 159, 160, 166, 167, 171], "mostli": 213, "move": 52, "mri": 346, "mro": 109, "mse": [45, 57, 296, 301], "mst": 282, "much": [166, 167, 227, 316, 347, 348], "multi": [22, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 66, 78, 102, 108, 125, 157, 158, 159, 160, 162, 166, 167, 170, 171, 322, 343, 346], "multi_gpu": [41, 43, 45, 47, 57, 66], "multifilensrdbx": 159, "multifileresourcex": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "multifilewindx": [160, 205, 224], "multipl": [21, 41, 43, 45, 47, 57, 59, 66, 69, 78, 87, 108, 125, 148, 152, 162, 163, 249, 282, 317, 326, 327, 343, 346, 347], "multipli": [18, 23, 43, 47, 57, 66, 75, 104, 317], "multistep": 163, "multistepgan": [54, 55, 162, 163, 164], "murdock": [30, 32], "must": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 43, 47, 51, 54, 55, 57, 59, 66, 75, 78, 87, 95, 99, 101, 148, 157, 158, 159, 160, 166, 167, 174, 212, 217, 227, 229, 231, 233, 235, 237, 269, 282, 287, 292, 298, 316, 317], "mycalc": 30, "mydictdataset": 30, "myfil": [30, 249], "n": [24, 30, 32, 41, 43, 45, 47, 49, 57, 59, 66, 162, 212, 219, 220, 221, 222, 227, 231, 263, 287, 299, 316, 317, 346, 347], "n_batch": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "n_chunk": 75, "n_dai": [57, 59], "n_epoch": [41, 43, 45, 47, 57, 66], "n_featur": [41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 66, 104, 229], "n_lat": [22, 23, 24, 25], "n_lon": [22, 23, 24, 25], "n_ob": [41, 43, 45, 47, 51, 53, 54, 57, 59, 66, 144, 227, 229, 231, 233, 236, 298, 301, 308, 316, 339], "n_observ": [41, 43, 45, 47, 57, 66, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "n_quantil": [30, 32], "n_sampl": [30, 32], "n_space_bin": [47, 112, 138, 139, 312], "n_spatial_1_chunk": 75, "n_spatial_2_chunk": 75, "n_spatial_chunk": 75, "n_step": [239, 241], "n_sup3r_sit": 282, "n_tempor": [41, 43, 45, 47, 53, 54, 55, 57, 66, 162], "n_time_bin": [47, 112, 138, 139, 312], "n_time_chunk": 75, "n_time_step": [30, 32, 229], "n_write": 87, "name": [7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 24, 25, 28, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 71, 72, 78, 81, 85, 87, 89, 91, 92, 95, 96, 97, 99, 101, 104, 107, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 197, 201, 203, 205, 207, 219, 220, 221, 222, 224, 227, 229, 231, 233, 252, 262, 265, 269, 282, 284, 285, 287, 289, 290, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 316, 317, 319, 322, 327, 328, 330, 331, 332, 333, 343, 348, 349], "name1": 108, "name2": 108, "namedtupl": [107, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "namespac": [41, 43, 45, 47, 57, 66, 78, 85, 87, 89, 95, 96, 99, 101, 109, 269], "nan": [9, 10, 11, 12, 13, 27, 28, 30, 32, 66, 104, 157, 158, 159, 160, 166, 167, 171, 173, 175, 217, 219, 220, 221, 233, 236, 237, 292, 334], "nan_method_kwarg": [157, 158, 159, 160, 166, 167, 171], "nation": [346, 347, 348], "natur": [212, 287, 346, 348], "navier": 299, "navig": [346, 347], "nc": [7, 9, 10, 11, 12, 13, 30, 32, 148, 157, 158, 159, 160, 166, 167, 182, 183, 184, 185, 219, 220, 224, 254, 269, 292, 319, 323, 343, 348], "ndarrai": [7, 9, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 28, 30, 32, 34, 41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 77, 85, 87, 89, 95, 96, 97, 99, 101, 104, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 144, 145, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 195, 196, 198, 215, 219, 220, 221, 222, 224, 229, 231, 235, 236, 240, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 294, 312, 319, 322, 329, 334, 339, 340], "nearbi": [157, 158, 159, 160, 166, 167, 170, 171], "nearest": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 30, 32, 36, 37, 59, 69, 78, 95, 99, 101, 157, 158, 159, 160, 166, 167, 215, 219, 220, 221, 222, 224, 282, 329, 334], "nearli": [28, 30, 41, 43, 45, 47, 57, 66], "nearsurf": 346, "necessari": [7, 9, 10, 11, 12, 13, 30, 32, 69, 85, 87, 89, 269, 282, 289, 346], "necessarili": [87, 346, 347, 348], "need": [7, 9, 10, 11, 12, 13, 19, 20, 24, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 76, 78, 95, 97, 99, 101, 104, 111, 116, 148, 157, 158, 159, 160, 163, 166, 167, 170, 171, 176, 179, 186, 187, 188, 189, 190, 191, 195, 204, 215, 217, 224, 229, 256, 264, 269, 273, 274, 275, 276, 277, 278, 279, 289, 291, 343, 346, 348], "neg": [7, 9, 10, 11, 12, 13, 30, 32, 95, 99, 101, 219, 220], "neglig": [28, 30, 32], "neighbor": [7, 9, 10, 11, 12, 13, 22, 23, 25, 27, 30, 32, 36, 37, 157, 158, 159, 160, 166, 167, 215, 219, 220, 221, 222, 224, 282, 329], "neighborhood": 348, "neighbour": [69, 78, 95, 99, 101], "nest": [41, 43, 45, 47, 54, 57, 59, 66, 78, 157, 158, 159, 160, 166, 167, 170, 171, 290], "netcdf": [19, 69, 78, 83, 84, 85, 88, 89, 101, 148, 156, 157, 158, 159, 160, 163, 165, 166, 167, 174, 179, 201, 203, 205, 207, 215, 219, 220, 221, 222, 224, 292], "network": [41, 43, 45, 47, 49, 53, 54, 55, 57, 66, 69, 75, 78, 114, 115, 117, 118, 119, 121, 122, 123, 162, 227, 229, 231, 233, 311, 316, 317, 348], "neural": 348, "never": [212, 287], "new": [6, 7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 62, 66, 87, 89, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 157, 158, 159, 160, 162, 164, 166, 167, 169, 170, 171, 212, 213, 219, 220, 252, 282, 287, 290, 292, 311, 312, 339, 340, 346, 348, 349], "new_data": [41, 43, 45, 47, 57, 66], "new_dset": 104, "new_mean": [41, 43, 45, 47, 57, 66], "new_meta": 87, "new_stdev": [41, 43, 45, 47, 57, 66], "new_time_index": 87, "next": [346, 347], "nice": 225, "night": 236, "nightim": 237, "nighttim": [173, 175], "nn": [217, 219, 220, 221, 222], "nn_fill": [69, 78, 95, 99, 101, 329], "nn_fill_arrai": 27, "nn_threshold": 282, "no_overlap": [157, 158, 159, 160, 166, 167, 170, 171], "no_trend": [23, 24, 37], "noaa": [188, 191], "node": [7, 9, 10, 11, 12, 13, 16, 30, 32, 69, 72, 75, 78, 92, 125, 282, 285, 289, 290, 322, 343, 346], "node_chunk": 78, "node_finish": 78, "node_idx": 78, "node_index": [69, 343], "nohup": [290, 343], "nois": 59, "noise_add": 59, "nomin": [41, 43, 45, 47, 57, 66], "non": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 37, 75, 78, 85, 87, 89, 108, 212, 224, 287, 334, 338, 346], "noncach": 217, "none": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 71, 72, 75, 78, 80, 85, 87, 89, 91, 92, 95, 96, 97, 99, 101, 104, 106, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 152, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 201, 203, 205, 207, 212, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 237, 239, 243, 244, 252, 264, 265, 266, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 287, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 321, 323, 327], "nonetyp": [97, 290], "nonexclus": [346, 347, 348], "noon": [157, 158, 159, 160, 166, 167, 171], "norm_in": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "norm_input": [41, 43, 45, 47, 57, 66], "normal": [41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 97, 104, 108, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 154, 175, 273, 275, 276], "north": [95, 99, 101, 198], "notabl": 348, "notat": [212, 287], "note": [22, 23, 24, 25, 28, 30, 32, 37, 41, 43, 45, 47, 49, 57, 59, 66, 75, 78, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 141, 212, 227, 281, 282, 287, 311, 316, 343, 346, 347, 348, 349], "notebook": [346, 347], "noth": [95, 99, 101], "now": [30, 97, 269, 346, 347], "np": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 28, 30, 32, 34, 41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 66, 69, 75, 85, 87, 89, 95, 96, 97, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 157, 158, 159, 160, 162, 164, 166, 167, 196, 198, 229, 231, 235, 236, 269, 282, 294, 311, 312, 319, 322, 334, 339, 340], "np_arrai": 104, "nrel": [78, 97, 343, 346, 347, 348, 349], "nsrdb": [7, 8, 9, 10, 11, 12, 13, 30, 32, 59, 166, 167, 173, 175, 186, 189, 214, 219, 220, 224, 229, 280, 281, 282, 343, 346], "nsrdb_2015": 343, "nsrdb_agg": [166, 167], "nsrdb_clearski": 346, "nsrdb_fp": [282, 343], "nsrdb_smooth": [166, 167], "nsrdb_source_fp": [166, 167], "nsrdb_tslice": 282, "nt": [9, 10, 11, 12, 13], "ntime": 30, "nuanc": 345, "num_par": 45, "number": [7, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 27, 28, 30, 32, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 75, 78, 87, 95, 99, 101, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 157, 158, 159, 160, 162, 166, 167, 171, 212, 217, 219, 220, 227, 229, 231, 263, 269, 272, 273, 275, 276, 282, 287, 290, 292, 299, 311, 312, 316, 317, 346, 347], "numer": [212, 287], "numpi": [78, 97, 104, 260, 269], "o": 337, "ob": [66, 112, 114, 115, 123, 126, 128, 138, 139, 141, 233, 311, 312], "obj": [15, 16, 71, 72, 91, 92, 243, 244, 250, 253, 284, 285, 289, 338], "object": [6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 30, 32, 41, 43, 45, 47, 53, 55, 57, 59, 61, 62, 66, 69, 71, 72, 75, 77, 78, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 195, 201, 203, 205, 207, 213, 214, 215, 217, 219, 220, 221, 222, 224, 226, 227, 229, 231, 232, 233, 237, 242, 243, 244, 252, 269, 282, 284, 285, 289, 292, 294, 311, 312, 315, 316, 317, 319, 322, 327, 338, 347, 348], "obkect": 292, "obs_axi": [144, 339], "obs_featur": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "obs_loss_weight": 66, "obs_mask": 66, "obs_training_ind": 66, "obs_zero_r": 30, "observ": [7, 9, 10, 11, 12, 13, 18, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 65, 66, 78, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 218, 219, 220, 221, 227, 229, 231, 233, 311, 312, 316, 317, 339, 340, 346, 348], "observation_index": 231, "obsraster": 78, "obstacl": 199, "obtain": [30, 32], "occurr": [212, 287], "ocean": 78, "oe": [346, 348], "oedi": [346, 347, 348], "off": [69, 75, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 231, 311, 312, 343, 346, 347], "offic": [346, 347, 348], "offset": [23, 97, 282], "offshor": 66, "offshore_obs_frac": 66, "often": [28, 30, 43, 47, 57, 66], "oh": 30, "old": [15, 16, 43, 47, 57, 66, 71, 72, 87, 91, 92, 212, 284, 285, 287, 289], "onc": [41, 43, 45, 47, 57, 66, 87, 89, 105, 151, 219, 220, 224, 346, 347], "one": [7, 9, 10, 11, 12, 13, 30, 32, 36, 37, 41, 43, 45, 47, 53, 54, 55, 57, 66, 75, 85, 87, 89, 102, 108, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 156, 161, 166, 167, 212, 282, 287, 290, 294, 343, 346, 347], "ones": [212, 287], "onli": [30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 78, 89, 95, 97, 99, 101, 104, 107, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 156, 157, 158, 159, 160, 162, 166, 167, 212, 227, 229, 231, 233, 269, 282, 287, 311, 312, 316, 317, 320, 346, 347, 348], "onshor": 66, "onshore_obs_frac": 66, "open": [7, 9, 10, 11, 12, 13, 30, 32, 78, 97, 201, 203, 269, 290, 341, 346, 347, 348], "open_dataset": 97, "open_fil": 97, "open_mfdataset": [89, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224, 292, 336, 341], "openei": [346, 348], "oper": [9, 10, 12, 20, 51, 59, 127, 140, 212, 213, 287, 298, 348], "optim": [41, 43, 45, 47, 57, 63, 66, 348], "optimizer_disc": [41, 43, 45, 47, 57, 66], "option": [7, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 30, 32, 34, 37, 41, 43, 45, 47, 54, 55, 57, 59, 66, 71, 72, 78, 87, 91, 92, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 141, 148, 157, 158, 159, 160, 166, 167, 170, 171, 176, 201, 203, 205, 207, 212, 224, 227, 229, 231, 233, 239, 269, 272, 273, 275, 276, 284, 285, 287, 289, 290, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 340, 341, 343, 346, 347, 350], "order": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 95, 99, 101, 104, 108, 109, 112, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 148, 162, 164, 196, 198, 211, 212, 215, 219, 220, 221, 222, 224, 248, 261, 262, 265, 268, 269, 282, 312, 319, 320, 322, 329], "ordin": [212, 287], "ordinari": [23, 24, 37, 97], "org": [7, 9, 10, 11, 12, 13, 17, 180, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 346, 347, 348], "organ": 24, "origin": [30, 95, 148, 212, 287, 346], "orog": [158, 292], "osx": [348, 349], "other": [7, 9, 10, 11, 12, 13, 28, 30, 32, 78, 104, 152, 156, 207, 212, 221, 282, 287, 290, 343, 346, 347, 348], "otherwis": [23, 24, 37, 78, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 201, 203, 205, 207, 212, 215, 217, 224, 227, 229, 231, 233, 264, 287, 311, 312, 315, 316, 317], "our": [24, 104, 346, 348], "out": [7, 9, 10, 11, 12, 13, 19, 21, 22, 24, 25, 27, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 112, 114, 115, 123, 125, 126, 128, 138, 139, 141, 162, 164, 166, 167, 269, 282, 290, 294, 311, 312, 343, 346, 348], "out_data": [7, 9, 10, 11, 12, 13, 30, 32], "out_dir": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "out_featur": 19, "out_fil": [18, 77, 78, 85, 87, 89, 95, 96, 99, 101, 148, 292, 319, 322, 324, 343], "out_file_path": [269, 343], "out_height": 19, "out_of_bound": 282, "out_pattern": [78, 343], "out_rang": [21, 22, 23, 24, 25, 37], "out_ti": [7, 9, 10, 11, 12, 13, 30, 32], "output": [7, 9, 10, 11, 12, 13, 18, 19, 21, 22, 23, 24, 25, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 85, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 148, 157, 158, 159, 160, 162, 163, 164, 166, 167, 219, 220, 221, 227, 229, 231, 233, 251, 259, 269, 274, 277, 278, 279, 280, 281, 282, 290, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 316, 317, 319, 320, 322, 327, 331, 334, 343, 346, 347, 348], "output_arrai": 75, "output_data": 69, "output_fil": [19, 343], "output_gen": 45, "output_nam": 269, "output_resolut": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "output_tru": 45, "output_typ": 269, "output_work": [69, 78, 343], "outputhandl": [94, 99, 101], "outputmixin": [85, 95], "outpuunion": 75, "outsid": [9, 10, 11, 12, 13, 27, 30, 32, 43, 47, 57, 66, 69, 78, 95, 99, 101, 329], "over": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 66, 125, 157, 158, 159, 160, 166, 167, 170, 171, 219, 220, 224, 269, 272, 273, 275, 276, 278, 279, 282, 298, 340, 346], "overlap": [69, 75, 78, 85, 87, 89, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 212, 217, 282, 287], "overload": 47, "overrid": [57, 104, 111, 220, 312, 317], "overwrit": [18, 19, 78, 87, 89, 148, 217, 292], "own": [346, 347], "p": [28, 30, 179, 290, 347], "pa": 59, "packag": [30, 32, 97, 291, 292, 348, 349], "pad": [52, 55, 57, 69, 75, 78, 85, 87, 89, 95, 99, 101, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 212, 282, 287, 311], "pad_lat_lon": [95, 99, 101], "pad_source_data": 69, "pad_width": [69, 77], "padded_slic": 75, "page": [343, 346], "paid": [346, 347, 348], "pair": [59, 95, 97, 99, 101, 102, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 216, 225, 232, 233, 298, 311, 312, 343, 348], "panda": [41, 43, 45, 47, 57, 66, 85, 87, 89, 95, 96, 97, 99, 101, 195, 259], "paper": 30, "parallel": [9, 10, 11, 12, 13, 18, 30, 32, 41, 43, 45, 47, 55, 57, 66, 75, 78, 87, 148, 195, 282, 343, 346, 347], "param": [24, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "paramet": [7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 62, 64, 66, 69, 71, 72, 75, 78, 80, 85, 87, 89, 91, 92, 95, 96, 97, 99, 101, 104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 148, 152, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 174, 176, 188, 195, 196, 198, 199, 201, 203, 205, 207, 215, 217, 219, 220, 224, 227, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 251, 252, 253, 254, 259, 261, 263, 264, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317, 319, 320, 322, 327, 329, 331, 334, 339, 340, 343, 346, 347], "parameter": [59, 343], "parametr": [30, 32], "params_mf": [23, 24, 37], "params_mh": [23, 24, 37], "parent": [43, 45, 47, 57, 66, 108, 109, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 138, 139, 220, 282], "pars": [104, 148, 197, 243, 247, 264, 266, 289, 290], "parse_chunk": 148, "parse_queue_str": 290, "part": [22, 23, 24, 25, 53, 54, 55, 75, 78, 104, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 212, 229, 287, 346, 347, 348], "partial": 78, "partit": [212, 287], "partnership": [346, 348], "pass": [7, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 30, 32, 34, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 70, 71, 74, 75, 76, 78, 89, 93, 95, 99, 101, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 163, 164, 166, 167, 171, 201, 203, 205, 207, 219, 220, 221, 224, 251, 256, 259, 265, 269, 282, 292, 311, 312, 319, 322, 327, 342, 346, 347, 348], "pass_context": [15, 16, 71, 72, 91, 92, 284, 285, 289], "pass_work": [78, 343], "password": 97, "past": [9, 10, 11, 12, 13], "pat": 254, "path": [16, 69, 72, 78, 85, 87, 89, 92, 95, 96, 97, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 154, 157, 158, 159, 160, 163, 166, 167, 201, 202, 203, 205, 207, 219, 220, 224, 249, 254, 269, 285, 289, 290, 311, 312, 346, 347], "path_pattern": 19, "pathlib": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224, 249], "patt": [85, 87, 89, 114, 115, 117, 118, 119, 121, 122, 123, 227, 229, 231, 233, 311, 316, 317], "pattern": [7, 9, 10, 11, 12, 13, 19, 30, 32, 78, 148, 157, 158, 159, 160, 166, 167, 170, 171, 282, 292, 320, 347, 348], "pavlo": 348, "pb": 290, "pd": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 41, 43, 45, 47, 57, 66, 85, 87, 89, 95, 96, 97, 99, 101, 235, 237, 251, 259, 282, 290, 335, 346, 347], "pdf": [180, 273, 275, 276], "peak": 346, "pend": 290, "per": [32, 41, 43, 45, 47, 57, 59, 66, 166, 167, 346, 348], "percent": 240, "percentil": [7, 9, 10, 11, 12, 13, 30, 32, 273, 275, 276], "perceptu": 301, "perform": [6, 7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 53, 57, 59, 66, 75, 78, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 157, 158, 159, 160, 161, 163, 166, 167, 169, 170, 171, 230, 231, 298, 311, 312, 346, 347, 348], "period": [30, 32, 66, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 138, 139, 215, 224, 273, 275, 276, 312, 327, 346, 347], "permut": 343, "perturb": 179, "phenomena": 346, "phygnn": [41, 43, 45, 47, 57, 66, 346], "physic": [23, 24, 37, 41, 43, 45, 47, 53, 54, 55, 57, 66, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 329], "piec": 348, "pierc": [7, 9, 10, 11, 12, 13, 28, 30], "pierce2015": [28, 30], "pil": 59, "pimenta": 348, "pinchuk": [347, 348], "pip": 350, "pipelin": [15, 16, 30, 87, 89, 91, 92, 284, 285, 289, 342, 346, 347], "pipeline_config": 343, "pipeline_step": [15, 16, 71, 72, 87, 91, 92, 284, 285, 289], "pixel": [7, 9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 166, 167, 219, 220, 221, 282], "pkl": [41, 43, 45, 47, 57, 66], "place": [36, 41, 43, 45, 47, 57, 66, 78, 95, 99, 101, 343, 348], "placehold": 97, "placement": [41, 43, 45, 47, 57, 66], "plan": 348, "plane": 199, "player": 348, "pleas": [296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 346], "plu": 104, "pna": 348, "podgorni": 348, "point": [2, 7, 9, 10, 11, 12, 13, 14, 30, 32, 43, 45, 47, 57, 66, 70, 73, 78, 90, 108, 212, 219, 220, 221, 222, 233, 270, 283, 287, 343, 348], "point_loss_hour": 57, "pointwis": [57, 298], "polad": [7, 9, 10, 11, 12, 13], "polade2014": [7, 9, 10, 11, 12, 13, 30, 32], "pole": [95, 99, 101], "pool": [23, 24, 37, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "pop": [162, 164], "popitem": [162, 164], "portion": [274, 277, 278, 279], "posit": [7, 9, 10, 11, 12, 13, 27, 30, 32, 66, 95, 99, 101, 212, 287, 343], "possibl": [24, 30, 69, 75, 78, 95, 99, 101, 212, 264, 287, 346, 348], "possibli": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 66], "post": [82, 112, 114, 115, 123, 126, 128, 138, 139, 141, 311, 312], "post_init_log": [106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 311, 312, 315, 316, 317], "post_proc": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "postprocess": 343, "potenti": [290, 348], "power": [167, 188, 191, 348], "pq": [212, 287], "practic": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "pre": [37, 41, 43, 45, 47, 57, 66, 78, 85, 87, 89, 95, 96, 97, 99, 101, 346, 348, 349], "pre_load": [7, 9, 10, 11, 12, 13, 30, 32], "precipit": [7, 9, 10, 11, 12, 13, 28, 30, 32, 78], "precis": [30, 32, 348], "predefin": [78, 269], "predict": [30, 43, 45, 47, 49, 57, 59, 66, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 346], "predictor": 45, "prefer": [104, 290], "prefix": [41, 43, 45, 47, 57, 66, 212, 287], "preflight": [55, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 227, 229, 231, 233, 282, 311, 312, 316, 317], "prelight": 78, "preload": [7, 9, 10, 11, 12, 13, 30, 32], "preload_sam": 97, "prep": 217, "prep_chunk_data": 78, "prep_var_list": 292, "prepar": [19, 78], "preprocess": [7, 9, 10, 11, 12, 13, 30, 32, 43, 45, 47, 57, 66, 78, 269, 336, 347], "pres_div": 59, "pres_exp": 59, "present": [41, 43, 45, 47, 55, 57, 66, 87, 162, 164, 212, 287], "preserv": [30, 32, 108, 348], "presrat": [23, 28, 31], "pressur": [59, 157, 158, 159, 160, 166, 167, 170, 171, 176, 179, 180, 197, 212, 292, 293, 294, 332, 347], "pressure_": [54, 59], "pressure_0m": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "pressure_level": 292, "pretrain": [43, 45, 47, 49, 53, 54, 55, 57, 66, 348], "pretti": 218, "prevent": [23, 24, 37], "previou": [30, 43, 47, 57, 66, 348], "previous": [24, 34, 43, 45, 47, 49, 53, 54, 55, 57, 66, 215, 290], "primarili": [95, 99, 101, 280, 281, 282], "print": [16, 43, 45, 47, 57, 66, 72, 92, 285, 289, 290], "printabl": [212, 287], "printout": 290, "prior": [225, 289, 343, 348, 349], "priori": 138, "priorit": [41, 43, 45, 47, 57, 66, 294], "prioriti": 290, "probabl": [24, 32, 112, 219, 220, 241], "problem": [7, 9, 10, 11, 12, 13, 30, 32], "proc": [112, 114, 115, 123, 126, 128, 138, 139, 141, 311, 312], "procces": 292, "proce": 126, "procedur": [29, 31], "proceed": [43, 47, 57, 66, 348], "process": [18, 23, 24, 25, 30, 32, 37, 59, 75, 78, 82, 112, 114, 115, 123, 126, 128, 138, 139, 141, 168, 282, 290, 292, 311, 312, 343, 347, 348], "process_and_combin": 292, "process_level_fil": 292, "process_surface_fil": 292, "produc": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 43, 47, 57, 59, 66, 69, 116, 128, 259, 348], "product": [23, 66, 346], "product_typ": 292, "profil": [41, 43, 45, 47, 57, 61, 66, 97, 158, 199], "profile_to_tensorboard": [41, 43, 45, 47, 57, 61, 66], "program": [346, 347, 348], "progress": [105, 151, 346, 347], "project": [16, 72, 92, 188, 191, 217, 285, 289, 290, 343, 346, 347], "project_point": 97, "pronounc": 348, "properti": [7, 9, 10, 11, 12, 13, 19, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 75, 78, 97, 104, 106, 107, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 163, 164, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 269, 282, 290, 292, 311, 312, 315, 316, 317, 327], "proport": 199, "protobuf": 78, "proven": 348, "provid": [30, 32, 41, 43, 45, 47, 55, 57, 59, 64, 66, 69, 75, 78, 87, 97, 102, 104, 108, 114, 115, 117, 118, 119, 121, 122, 123, 141, 148, 156, 162, 163, 164, 166, 167, 201, 203, 205, 207, 215, 219, 220, 221, 224, 227, 229, 233, 240, 241, 251, 252, 269, 289, 311, 316, 317, 346, 347, 348], "public": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 346, 347], "publicli": [346, 347, 348], "publish": [346, 347, 348], "pull": 343, "punctuat": [212, 287], "purpos": [32, 102, 152, 346, 347, 348], "py": 34, "python": [15, 16, 71, 72, 91, 92, 97, 212, 284, 285, 287, 289, 290, 346, 347, 348, 349], "q": [30, 32, 290], "qa": [104, 217, 342], "qa_fp": 269, "qdm": [23, 24, 29, 30, 37, 346], "qformat": 290, "qo": [16, 72, 92, 285, 289, 290], "qstat": 290, "quadrant": 240, "qualiti": 290, "quantifi": 346, "quantil": [23, 24, 29, 30, 31, 32, 37, 346], "quantiledeltamap": [23, 24, 30, 32, 37], "quantiledeltamappingcorrect": [7, 9, 10, 11, 12, 13, 24, 30, 37], "quantit": 348, "quantiti": [28, 30], "queri": [219, 220, 221, 222], "query_queu": 290, "query_tre": [219, 220, 221, 222], "question": [180, 346], "queu": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 290, 311, 312], "queue": [105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 290, 311, 312], "queue_cap": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "queue_dict": 290, "queue_futur": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "queue_job_id": 290, "queue_job_nam": 290, "queue_len": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "queue_shap": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "queue_str": 290, "queue_thread": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "queuemom1": [117, 135], "queuemom1sf": [118, 136], "queuemom2": 119, "queuemom2sep": 121, "queuemom2sepsf": 122, "quit": 346, "quot": 290, "r": [7, 9, 10, 11, 12, 13, 28, 30, 32, 97, 212, 287, 290, 347], "r1i1p1f1": 346, "rais": [22, 23, 25, 36, 37, 78, 157, 158, 159, 160, 162, 164, 166, 167, 212, 215, 219, 220, 224, 287, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "ram": 346, "random": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 235, 237, 311, 312, 315, 316, 330], "randomli": [227, 231, 316], "rang": [25, 43, 47, 57, 66, 75, 95, 99, 101, 212, 272, 273, 275, 276, 287, 292, 348], "raster": [7, 9, 10, 11, 12, 13, 20, 30, 32, 59, 75, 78, 102, 104, 105, 147, 149, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 169, 170, 176, 188, 192, 193, 201, 203, 204, 205, 227, 229, 231, 233, 252, 269, 316, 317, 347], "raster_fil": [157, 158, 159, 160, 166, 167, 215, 224], "raster_index": [215, 224], "rasterize_data": [215, 224], "rate": [23, 28, 30, 41, 43, 45, 47, 57, 59, 66], "rather": [102, 224], "ratio": [30, 55, 173, 174, 236, 280, 281, 282, 320, 343], "raw": [34, 43, 47, 57, 66, 157, 158, 159, 160, 166, 167, 170, 171, 172, 176, 219, 220, 252, 290], "re": [7, 9, 10, 11, 12, 13, 24, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 95, 98, 99, 101, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 151, 162, 163, 196, 198, 217, 219, 220, 222, 227, 229, 231, 233, 269, 298, 301, 311, 312, 316, 317, 320, 322, 343, 346, 347], "reach": 346, "read": [19, 97], "readi": 34, "real": [41, 43, 45, 47, 57, 66, 282, 346, 348], "realism": 348, "realist": [23, 24, 37, 43, 47, 57, 66], "realiz": 45, "realli": [43, 47, 53, 57, 66], "reanalysi": [292, 346, 347, 348], "reason": 108, "rec_nam": 97, "receiv": [41, 43, 45, 47, 53, 54, 55, 57, 66, 78, 269], "recent": 347, "recept": 346, "rechunk": 148, "recommend": [7, 9, 10, 11, 12, 13, 30, 32, 345, 350], "record": [8, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 97, 311, 312, 317, 346], "recurs": [157, 158, 159, 160, 166, 167, 170, 171], "redistribut": 78, "redistribute_chunk": 78, "reduc": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 69, 97, 205, 229, 236, 282, 346], "reduce_high_res_sub_daili": 229, "reduct": [7, 9, 10, 11, 12, 13, 30, 32, 229, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "redund": [97, 98], "refactor": [6, 20, 43, 47, 57, 66, 218, 268], "refer": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 36, 37, 43, 47, 57, 66, 104, 299, 308, 347], "reflect": [55, 57, 69], "regim": [7, 9, 10, 11, 12, 13], "region": [7, 9, 10, 11, 12, 13, 27, 30, 32, 59, 69, 75, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 138, 139, 201, 203, 205, 207, 215, 217, 224, 311, 312, 347], "regist": [109, 212, 287], "register_error": [212, 287], "registri": [157, 158, 159, 160, 166, 167, 170, 171], "regr": 59, "regress": 59, "regrid": 217, "regrid_lr": 217, "regrid_work": 217, "regridd": [166, 167, 217], "regular": [64, 89, 104, 212, 215, 224, 287], "reinforc": 23, "reiniti": 108, "rel": [23, 24, 30, 32, 37, 41, 43, 45, 47, 54, 57, 59, 66, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 180, 196, 294, 311, 312, 347], "relat": [24, 29, 31, 108, 161, 199, 348], "relationship": [108, 282], "relativehumid": 59, "relativehumidity_": [54, 59], "relativist": [43, 47, 57, 66], "releas": [290, 346, 347], "reli": 162, "reload": 148, "remain": [162, 212, 287], "remot": 346, "remov": [55, 87, 98, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 162, 164, 212, 227, 229, 231, 233, 287, 290, 311, 312, 316, 317, 332, 343], "removeprefix": [212, 287], "removesuffix": [212, 287], "renam": [95, 99, 101, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224, 292], "renew": [0, 346, 347, 348], "replac": [23, 24, 27, 37, 104, 157, 158, 159, 160, 166, 167, 170, 171, 204, 212, 263, 287], "repo": [346, 347, 350], "report": [7, 9, 10, 11, 12, 13], "repr": [212, 287], "repres": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 41, 43, 45, 47, 55, 57, 59, 66, 269, 346, 347, 348], "represent": [251, 348], "reproduc": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 346, 347, 348], "request": [7, 9, 10, 11, 12, 13, 16, 19, 30, 32, 72, 78, 92, 115, 123, 141, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 171, 215, 217, 224, 227, 229, 231, 233, 236, 264, 285, 289, 290, 292, 294, 311, 316, 317, 331, 348], "requir": [7, 9, 10, 11, 12, 13, 24, 30, 32, 37, 40, 41, 43, 45, 47, 48, 49, 51, 53, 54, 55, 57, 59, 66, 75, 78, 87, 89, 104, 112, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 163, 176, 243, 264, 269, 292, 343], "res_arrai": 97, "res_dset": 97, "res_kwarg": [89, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224, 292], "resampl": 59, "rescal": 87, "research": [346, 347, 348], "reserv": [212, 287], "reset": 312, "reshap": [227, 231, 269, 316, 317], "residu": 346, "resili": 348, "resiz": 59, "resolut": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 49, 50, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 95, 97, 99, 101, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 156, 162, 163, 166, 167, 217, 219, 220, 221, 222, 227, 229, 231, 232, 233, 269, 273, 275, 276, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 316, 317, 319, 322, 339, 340, 343, 346, 347], "resolv": [0, 7, 9, 10, 11, 12, 13, 30, 32, 43, 45, 47, 57, 87, 109, 163, 219, 220, 269, 343], "resourc": [0, 7, 9, 10, 11, 12, 13, 30, 32, 37, 97, 292, 346, 347, 348], "resource_dataset": 97, "resourcedataset": 97, "respect": [30, 32, 66, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 217, 224, 287, 343], "respons": [78, 348], "rest": [212, 287], "restrict": [34, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 159, 160, 166, 167, 239], "result": [23, 24, 30, 32, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 78, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 154, 199, 212, 287, 311, 312], "retain": [346, 347, 348], "retreiv": 87, "retriev": [6, 7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 36, 37, 54, 87, 97, 163, 166, 167, 224, 269, 282, 298], "return": [7, 9, 10, 11, 12, 13, 18, 19, 21, 22, 24, 25, 27, 28, 30, 32, 34, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 80, 85, 87, 89, 95, 96, 97, 99, 101, 104, 106, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 148, 152, 154, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 173, 174, 175, 188, 195, 196, 198, 199, 201, 203, 205, 207, 212, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 248, 249, 251, 252, 254, 258, 259, 262, 264, 265, 266, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 287, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317, 319, 320, 322, 327, 329, 331, 334, 339, 340], "rev": [15, 16, 71, 72, 87, 91, 92, 284, 285, 289, 290, 343], "review": 229, "rewrap": 108, "rex": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 195, 204, 346, 347], "rfind": [212, 287], "rh": 180, "right": [75, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 212, 240, 287, 311, 312], "rindex": [212, 287], "risk": 348, "rjust": [212, 287], "rm": 290, "role": [7, 9, 10, 11, 12, 13, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "roll": [57, 157, 158, 159, 160, 166, 167, 171, 282], "romania": 347, "root": 290, "rougher": [166, 167], "roughli": 66, "round": [7, 9, 10, 11, 12, 13, 30, 32], "routin": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 95, 99, 101, 126, 157, 158, 159, 160, 166, 167, 170, 171, 217, 229, 292], "row": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 66, 87, 95, 97, 99, 101, 157, 158, 159, 160, 166, 167, 215, 224, 238, 239, 240, 241, 290], "row_slic": 87, "rpartit": [212, 287], "rsd": [24, 166, 167, 174, 269], "rsplit": [212, 287], "rstrip": [212, 287, 290], "run": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 30, 32, 41, 43, 45, 47, 55, 57, 62, 66, 69, 71, 72, 75, 78, 85, 87, 89, 91, 92, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 166, 167, 195, 217, 219, 220, 229, 269, 282, 284, 285, 289, 290, 292, 311, 312, 343, 345, 348, 349], "run_attr": 97, "run_chunk": [69, 78], "run_config": [346, 347], "run_exo_lay": [41, 43, 45, 47, 57, 66], "run_for_var": 292, "run_gener": 69, "run_gradient_desc": [41, 43, 45, 47, 57, 66], "run_input_check": [166, 167], "run_level_check": [157, 158, 159, 160, 166, 167, 170, 171, 294], "run_month": 292, "run_qa": [217, 292], "run_temporal_chunk": [282, 343], "run_wrap_check": [166, 167], "runn": 327, "runtim": 97, "ryan": [346, 348], "s1_hr_crop_slic": 75, "s1_hr_slice": 75, "s1_lr_pad_slic": 75, "s1_lr_slice": 75, "s2_hr_crop_slic": 75, "s2_hr_slice": 75, "s2_lr_pad_slic": 75, "s2_lr_slice": 75, "s3": [97, 346, 347], "s41560": [346, 348], "s_enhanc": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 163, 217, 219, 220, 221, 222, 229, 233, 269, 298, 311, 312, 339, 343], "s_file": 87, "s_hr_crop_slic": 75, "s_hr_slice": 75, "s_lr_crop_slic": 75, "s_lr_pad_slic": 75, "s_lr_slice": 75, "s_pad": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "s_slices_hr": 322, "s_slices_lr": 322, "safe": 337, "sai": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 290], "sam": 97, "sam_config": 97, "sam_r": 97, "same": [24, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 87, 89, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 148, 152, 154, 212, 217, 218, 219, 220, 221, 222, 227, 229, 231, 233, 236, 248, 269, 282, 287, 294, 311, 312, 316, 317, 327, 339, 340, 343, 347], "sampl": [7, 9, 10, 11, 12, 13, 30, 32, 47, 57, 66, 102, 104, 108, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 206, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 311, 312, 313, 316, 317], "sample_batch": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "sample_index": [227, 316], "sample_q_linear": [30, 32], "sample_shap": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 227, 229, 231, 233, 238, 239, 240, 241, 311, 312, 316, 317], "sampler": [102, 105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 201, 203, 205, 207, 311, 312, 316, 317, 325], "sampler_kwarg": [112, 114, 115, 117, 118, 119, 121, 122, 123, 311, 312], "samplerclass": [116, 313, 325], "samplerdc": [111, 112, 116], "samplertest": [311, 312, 314, 318], "samresourc": 97, "sanit": [43, 47, 57, 66], "saniti": 78, "satellit": 348, "satisfi": [30, 41, 43, 45, 47, 57, 66], "save": [24, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 148, 153, 154, 157, 158, 159, 160, 166, 167, 170, 171, 215, 219, 220, 221, 222, 224, 269, 311, 312, 343, 346], "save_param": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "save_raster_index": 224, "save_sourc": 269, "save_stat": 154, "sbatch": 290, "scalar": [7, 9, 10, 11, 12, 13, 18, 21, 22, 25, 27, 30, 32], "scalar_rang": 25, "scalarcorrect": 11, "scale": [30, 32, 59, 87, 97, 166, 167, 180, 205, 219, 220, 273, 275, 276, 348], "scale_clearsky_ghi": [166, 167], "scale_factor": [87, 97, 205, 219, 220, 221, 222], "scancel": 290, "scenario": 346, "schedul": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "scheme": [41, 43, 45, 47, 57, 66, 89, 212, 287], "scienc": 348, "scientif": [7, 9, 10, 11, 12, 13, 346, 347, 348], "scipi": [30, 32], "scontrol": 290, "scratch": 345, "script": [15, 16, 71, 72, 91, 92, 284, 285, 289, 290], "se": 32, "seam": [9, 10, 11, 12, 13, 27, 30, 32, 59], "search": [85, 87, 89, 157, 158, 159, 160, 162, 166, 167, 170, 171, 176, 212, 287], "season": [9, 112, 231, 312, 346], "second": [43, 45, 47, 49, 54, 57, 59, 66, 75, 104, 133, 134, 135, 136, 217, 229, 241, 294, 346, 348], "secur": 348, "see": [23, 24, 28, 30, 37, 57, 69, 89, 97, 112, 157, 158, 159, 160, 166, 167, 170, 171, 231, 269, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 312, 343, 346, 347, 348], "seed": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "seem": [108, 162], "sel": 104, "select": [24, 47, 66, 78, 112, 157, 158, 159, 160, 162, 166, 167, 215, 217, 221, 224, 227, 229, 231, 233, 240, 241, 294, 316, 317, 347], "self": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 104, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 162, 163, 166, 167, 170, 212, 215, 224, 227, 229, 231, 287, 311, 312, 316, 327], "send": [7, 9, 10, 11, 12, 13, 30, 32, 43, 47, 57, 66, 69, 75, 78, 112, 114, 115, 123, 126, 128, 138, 139, 141, 311, 312], "sens": [30, 32], "sent": [75, 78], "sep": [212, 287], "separ": [43, 47, 57, 66, 102, 136, 148, 212, 216, 287, 292], "sequenc": [30, 32, 249], "sequenti": [54, 282], "seri": [9, 30, 54, 219, 220, 348], "serial": [7, 9, 10, 11, 12, 13, 30, 32, 53, 75, 78, 87, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312, 337, 343, 346, 347], "serializ": [107, 154, 338], "server": [346, 347], "servic": 290, "set": [7, 9, 10, 11, 12, 13, 15, 16, 19, 21, 22, 23, 24, 25, 27, 30, 32, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 71, 72, 75, 76, 78, 87, 91, 92, 97, 102, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 151, 152, 162, 163, 164, 212, 215, 217, 221, 224, 227, 229, 231, 233, 244, 248, 257, 265, 274, 277, 278, 279, 282, 284, 285, 287, 289, 290, 311, 312, 316, 317, 320, 327, 329, 343, 346, 348, 349], "set1": 343, "set_config": 97, "set_model_param": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "set_norm_stat": [41, 43, 45, 47, 57, 66], "set_regular_grid": 104, "set_tag": 343, "set_version_attr": 97, "setdefault": [162, 164], "seto": [346, 347, 348], "setup": [125, 346, 347, 348], "sever": [7, 9, 10, 11, 12, 13, 30, 32, 343, 346, 347], "sf": [118, 122, 132, 134, 136], "sh": 290, "shallow": [162, 164], "shape": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 75, 78, 87, 95, 97, 99, 101, 104, 106, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 235, 236, 237, 239, 241, 248, 269, 282, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 319, 321, 322, 323, 324, 343, 346], "share": [60, 142, 194, 290, 326], "shell": [15, 16, 71, 72, 91, 92, 284, 285, 289, 290], "shift": [30, 32, 95, 99, 101, 157, 158, 159, 160, 166, 167, 171], "short": 290, "should": [7, 9, 10, 11, 12, 13, 20, 30, 32, 36, 37, 41, 43, 45, 47, 53, 54, 55, 57, 66, 69, 78, 85, 87, 89, 94, 97, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 148, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 176, 204, 219, 220, 227, 229, 231, 233, 268, 269, 282, 287, 292, 294, 311, 312, 316, 317, 343, 346, 347], "show": [290, 343, 346], "shown": [59, 290], "side": [30, 32, 55, 57, 75, 78, 299], "sigma": [300, 308], "signatur": [109, 148, 243, 244, 245, 250, 253, 256], "significantli": [219, 220, 346], "similar": [7, 9, 10, 11, 12, 13, 30, 32, 108, 218], "simpl": [21, 22, 25, 50, 51, 59, 107, 144, 252, 269, 282, 335, 348], "simpli": [43, 47, 57, 66, 117, 131, 148], "simplifi": 162, "simplist": 346, "simul": [28, 30, 66, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 312, 348], "sinc": [30, 32, 41, 43, 45, 47, 66, 87, 128, 157, 158, 159, 160, 166, 167, 170, 171, 179, 215, 219, 220, 224, 229, 317], "singl": [7, 9, 10, 11, 12, 13, 19, 21, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 78, 85, 87, 89, 95, 99, 101, 102, 104, 108, 116, 126, 128, 139, 148, 157, 158, 159, 160, 162, 163, 166, 167, 170, 171, 180, 186, 189, 219, 220, 221, 222, 227, 231, 269, 282, 292, 316, 317, 320, 343, 346, 347], "single_hr": 59, "single_hr_temp": 59, "single_lr": 59, "single_lr_pr": 59, "single_lr_rh": 59, "single_lr_temp": 59, "singlebatchqueu": [114, 115, 116, 123, 130, 138, 141, 311], "singleexodatastep": [78, 162], "site": [5, 7, 9, 10, 11, 12, 13, 22, 25, 30, 32, 97, 195, 282], "six": 346, "size": [7, 9, 10, 11, 12, 13, 30, 32, 43, 47, 57, 66, 75, 78, 80, 87, 97, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 212, 215, 219, 220, 224, 227, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 287, 311, 312, 316, 317], "skill": 13, "skillassess": [7, 9, 10, 11, 12, 30, 32], "skillfulli": 346, "skip": [78, 290], "skip_param": [243, 244], "skip_row": 290, "sklearn": 59, "sky": [173, 174], "slater": 348, "slice": [22, 23, 24, 25, 34, 57, 69, 75, 77, 78, 80, 87, 97, 104, 108, 157, 158, 159, 160, 162, 166, 167, 212, 215, 224, 227, 231, 235, 236, 237, 238, 239, 240, 241, 246, 248, 263, 265, 282, 287, 316, 322], "slightli": [59, 346], "slow": 20, "slurm": [16, 72, 92, 285, 289, 290, 346, 347], "small": [7, 9, 10, 11, 12, 13, 23, 24, 25, 28, 30, 32, 37, 75, 195, 343, 348], "smaller": [30, 32], "smallest": [69, 272, 346, 347], "smirnov": [7, 9, 10, 11, 12, 13, 30, 32], "smooth": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 166, 167, 311, 312], "smooth_extend": [5, 9, 10, 11, 12, 13, 27, 30, 32], "smooth_interior": [5, 9, 10, 11, 12, 13, 27, 30, 32], "smoothed_featur": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "smoothing_ignor": [112, 114, 115, 117, 118, 119, 121, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 311, 312], "snake": 328, "snapshot": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "so": [19, 20, 43, 47, 55, 57, 66, 75, 78, 89, 97, 104, 108, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 141, 148, 151, 157, 158, 159, 160, 166, 167, 171, 175, 176, 195, 201, 203, 205, 207, 215, 224, 226, 229, 256, 261, 265, 273, 275, 276, 282, 290, 311, 346, 347, 348], "sobi": [30, 32], "softwar": [39, 42, 44, 46, 56, 346, 347, 348], "solar": [55, 57, 97, 181, 195, 342, 346, 347, 348], "solar_zenith_angl": 282, "solarcc": [52, 159], "solarmultistepgan": [52, 162], "some": [8, 43, 47, 55, 57, 59, 66, 78, 97, 112, 114, 115, 123, 126, 128, 138, 139, 141, 162, 166, 167, 195, 206, 224, 269, 282, 311, 312, 346, 348], "someth": 229, "soon": 126, "sort": [85, 87, 89, 249], "sourc": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 35, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 62, 63, 64, 66, 69, 71, 72, 75, 77, 78, 80, 81, 85, 87, 89, 91, 92, 95, 96, 97, 99, 101, 104, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 205, 207, 209, 210, 212, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 287, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349], "source_data": [219, 220, 221, 222], "source_featur": [34, 269], "source_fil": [78, 219, 220, 221, 222, 343], "source_file_h5": 222, "source_file_path": [269, 343], "source_handl": [219, 220, 221, 222], "source_handler_kwarg": [219, 220, 221, 222], "source_lat_lon": [219, 220, 221, 222], "source_typ": 254, "south_north": [104, 108, 148, 158, 196, 212, 219, 220, 262, 269], "sp": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "spa": 195, "space": [24, 30, 32, 78, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 139, 212, 261, 287, 290, 348], "space1": 269, "space2": 269, "spars": [66, 78, 219, 220, 221, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "sparser": 66, "sparsifi": 269, "spatial": [7, 9, 10, 11, 12, 13, 19, 21, 22, 23, 24, 25, 27, 30, 32, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 85, 87, 89, 95, 97, 99, 101, 104, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 157, 158, 159, 160, 162, 163, 166, 167, 171, 212, 217, 219, 220, 227, 229, 231, 233, 238, 240, 269, 273, 275, 282, 296, 298, 302, 303, 304, 311, 312, 316, 317, 322, 339, 347, 348], "spatial_1": [22, 23, 24, 25, 41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 162, 196, 198, 215, 219, 220, 221, 222, 224, 229, 235, 236, 237, 240, 269, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 319, 320, 322, 339, 340], "spatial_2": [22, 23, 24, 25, 41, 43, 45, 47, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 162, 196, 198, 215, 219, 220, 221, 222, 224, 229, 235, 236, 237, 240, 269, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 319, 320, 322, 339, 340], "spatial_chunk_index": [85, 87, 89], "spatial_chunk_lookup": 75, "spatial_id": 282, "spatial_model": 162, "spatial_pad": [75, 78, 343], "spatial_solar_model": [55, 162], "spatial_solar_model_dir": 55, "spatial_weight": [112, 138, 139, 231, 312], "spatial_wind_model": [55, 162], "spatial_wind_model_dir": 55, "spatialextremesloss": [41, 43, 45, 47, 57, 66, 298], "spatio": [54, 55, 57], "spatiotempor": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 102, 104, 111, 112, 114, 115, 123, 139, 162, 176, 188, 212, 213, 214, 215, 219, 220, 221, 222, 227, 233, 239, 241, 269, 282, 305, 311, 316, 346, 348], "special": [41, 43, 45, 47, 53, 55, 57, 58, 66, 157, 162, 164, 176, 225, 229], "specif": [66, 69, 77, 78, 97, 102, 148, 156, 157, 158, 159, 160, 163, 166, 167, 170, 171, 176, 188, 201, 203, 205, 207, 212, 213, 220, 274, 277, 278, 279, 287, 290], "specifi": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 80, 104, 148, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 212, 215, 224, 240, 241, 274, 277, 278, 279, 287, 292], "specifii": 221, "spectra": [274, 277, 278, 279], "spectrum": [274, 277, 278, 279, 304, 305], "speed": [97, 158, 199, 219, 220, 347, 348], "spit": 343, "split": [78, 80, 87, 89, 102, 112, 114, 115, 117, 118, 119, 121, 122, 123, 162, 212, 227, 229, 231, 233, 287, 290, 311, 312, 316, 317], "split_list": 162, "split_step": 162, "splitlin": [212, 287], "sponsor": [346, 347, 348], "spot": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "squar": 297, "squeue": [290, 346, 347], "srep04364": [7, 9, 10, 11, 12, 13], "srl": 218, "ss": 290, "ssp2": 346, "ssp245": 30, "ssp5": 346, "ssssss": 282, "stabil": 199, "stack": [227, 231, 316, 317], "stackexchang": 180, "stai": 290, "stamp": [157, 158, 159, 160, 166, 167, 171, 195], "standard": [9, 10, 11, 12, 13, 19, 22, 25, 27, 30, 32, 41, 43, 45, 47, 53, 54, 55, 57, 59, 66, 104, 112, 114, 116, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 154, 176, 188, 209, 210, 211, 212, 258, 265, 290, 292, 300, 308, 312, 336], "standard_nam": 209, "start": [41, 43, 45, 47, 57, 66, 69, 75, 78, 80, 97, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 166, 167, 171, 212, 215, 224, 231, 235, 237, 241, 287, 311, 312, 327, 343, 346, 347], "starting_hour": 57, "startswith": [212, 287], "stat": [104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 311, 312], "state": [16, 41, 43, 45, 47, 57, 66, 72, 92, 104, 285, 289, 290, 346, 348], "static": [7, 9, 10, 11, 12, 13, 28, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 85, 87, 89, 95, 96, 97, 99, 101, 148, 195, 212, 229, 282, 287, 290, 292], "statist": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 41, 43, 45, 47, 57, 66, 346, 348], "statscollect": [114, 115, 117, 118, 119, 121, 122, 123], "statu": [87, 89, 289, 290, 346, 347], "std": [9, 10, 11, 12, 13, 27, 30, 32, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 154, 292, 311, 312], "stderr": [16, 72, 92, 285, 289, 290, 343], "stdev": [41, 43, 45, 47, 53, 54, 55, 57, 66, 104], "stdout": [16, 72, 87, 89, 92, 285, 289, 290, 343], "stdout_path": [16, 72, 92, 285, 289, 290], "step": [15, 16, 30, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 66, 69, 71, 72, 75, 78, 87, 91, 92, 95, 97, 99, 101, 104, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 171, 215, 224, 227, 229, 269, 276, 284, 285, 289, 298, 311, 312, 316, 340, 343, 346, 347], "stich": 78, "still": [12, 24, 78, 104, 109, 166, 167, 204, 269], "stitch": [69, 75, 78], "stoke": 299, "stop": [41, 43, 45, 47, 57, 66, 75, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 166, 167, 212, 215, 224, 287, 311, 312, 327], "storag": 258, "store": [34, 77, 78, 97, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 162, 166, 167, 170, 171, 205, 269, 292, 311, 312, 317, 327], "storm": 346, "str": [7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 24, 25, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 71, 72, 77, 78, 85, 87, 89, 91, 92, 95, 96, 97, 99, 101, 104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 145, 148, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 188, 195, 201, 203, 205, 207, 212, 215, 217, 219, 220, 221, 222, 224, 249, 252, 254, 258, 264, 269, 282, 284, 285, 287, 289, 290, 292, 298, 311, 312, 319, 320, 331, 340], "str_decod": 97, "strateg": [346, 348], "strategi": [43, 45, 47, 69, 137, 240, 241, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 348], "stream": [346, 347], "strength": 348, "strict": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 212, 287], "strictli": 59, "string": [69, 78, 85, 87, 89, 95, 97, 99, 101, 163, 212, 219, 220, 244, 252, 258, 264, 266, 269, 282, 287, 289, 290, 292, 320, 327, 328, 330], "strip": [212, 287], "struct": 69, "structur": [41, 43, 45, 47, 57, 66, 77, 78, 345, 347, 348], "studi": 346, "style": [78, 85, 87, 89, 104, 163, 219, 220, 254, 269, 282], "sub": [41, 43, 45, 47, 49, 53, 54, 55, 57, 66, 212, 287, 343], "subclass": [40, 41, 48, 49, 102, 109, 168, 170, 200, 213, 215, 218, 225], "subfilt": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "subject": 346, "submiss": [16, 72, 92, 285, 289, 290, 346, 348], "submit": [15, 16, 71, 72, 91, 92, 284, 285, 289, 290], "subprocess": 290, "subsampl": [112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 269, 298, 312, 340], "subsequ": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 66, 75, 78], "subset": [55, 87], "subset_masked_meta": 87, "substanti": 346, "substitut": [212, 287], "substr": [212, 287], "subtract": [59, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 294], "success": [104, 176, 346, 347, 348], "successfulli": 290, "suffer": 348, "suffix": [66, 78, 87, 212, 221, 269, 282, 287, 332], "suggest": 104, "suit": 348, "suitabl": [212, 287], "sum": [7, 9, 10, 11, 12, 13, 23, 30, 32, 41, 43, 45, 47, 57, 66, 269, 340], "sum_over_batch_s": [296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "sup3r": [342, 346, 347, 349], "sup3r_file_tttttt_ssssss": 282, "sup3r_fp": 282, "sup3r_model": 343, "sup3r_out_": 343, "sup3rcc": [345, 347], "sup3rcc_conus_ecearth3_ssp585_r1i1p1f1_wind_2015": 346, "sup3rcc_models_202412": 346, "sup3rcc_models_202507": 346, "sup3rconcatob": 66, "sup3rcondmom": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "sup3rdataset": [105, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 151, 152, 154, 156, 157, 158, 159, 160, 166, 167, 170, 171, 174, 176, 188, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 232, 233, 237, 311, 312, 315, 316, 317], "sup3rgan": [47, 51, 53, 54, 55, 57, 59, 62, 66, 69, 78, 163, 219, 220, 269, 343, 347], "sup3rgandc": [112, 138, 139, 312], "sup3rob": [43, 45, 47, 49, 51, 57, 59, 66], "sup3robsmodel": 66, "sup3rqa": [289, 343], "sup3rwind": 345, "sup3rx": [27, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 148, 152, 157, 158, 159, 160, 166, 167, 170, 171, 174, 176, 188, 212, 227, 231, 237, 247, 268, 311, 312, 315, 316, 317], "super": [0, 43, 45, 47, 50, 55, 57, 66, 343, 346, 347, 348], "superresolv": [43, 47, 57, 66, 75], "suppli": [43, 45, 47, 49, 53, 54, 55, 57, 66], "support": [26, 30, 32, 89, 269, 346, 348], "sure": [55, 75, 78, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 166, 167, 217, 229, 233, 243, 282, 289, 311, 312, 346, 347, 348, 349], "surfac": [54, 156, 158, 180, 182, 183, 184, 188, 191, 292, 294], "surface_fil": 292, "surface_model_class": 54, "surface_model_kwarg": 54, "surfacespatialmetmodel": 54, "surround": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 158, 272, 273, 275, 276, 294], "swapcas": [212, 287], "switch": [51, 64], "switcher": 37, "sx": 104, "synonym": 97, "synthet": [41, 43, 45, 47, 49, 53, 54, 55, 57, 66, 269, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 348], "system": [18, 346, 348], "systemat": [219, 220], "sza": [43, 45, 47, 49, 57, 66, 218, 219, 220, 222], "t": [28, 30, 32, 41, 43, 45, 47, 57, 66, 78, 95, 99, 101, 157, 158, 159, 160, 162, 166, 167, 212, 233, 236, 287, 290], "t0": [41, 43, 45, 47, 57, 66], "t_center": [51, 64], "t_dataset": 264, "t_enhanc": [43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 64, 66, 69, 75, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 145, 163, 217, 219, 220, 221, 222, 229, 233, 269, 298, 311, 312, 340, 343], "t_file": 87, "t_hr_crop_slic": 75, "t_lr_crop_slic": 75, "t_lr_pad_slic": 75, "t_lr_slice": 75, "t_method": 298, "t_pad": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "t_slice": 282, "t_slices_hr": 322, "t_slices_lr": 322, "t_step": 276, "ta": [183, 184, 185], "ta_day_ec": 343, "tab": [43, 47, 57, 66, 212, 287], "tab_bodi": 180, "tabl": [212, 287, 346], "tabsiz": [212, 287], "tag": [41, 43, 45, 47, 57, 61, 66], "tailor": [274, 277, 278, 279], "take": [25, 55, 59, 78, 114, 115, 123, 162, 163, 217, 224, 229, 236, 269, 298, 311, 340, 343], "taken": 59, "tandfonlin": [188, 191], "target": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 78, 87, 89, 97, 104, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 157, 158, 159, 160, 163, 166, 167, 215, 219, 220, 221, 222, 224, 282, 343], "target_fp": 282, "target_masked_meta": 87, "target_meta": 87, "target_meta_fil": 87, "task": 78, "tau": 30, "tau_fut": 30, "td": [319, 320, 322], "tdir": 347, "tech": 97, "technic": 346, "techniqu": [28, 30, 32], "technologi": [97, 346, 347, 348], "tell": 348, "temp_laps": 59, "temperatur": [54, 59, 157, 158, 159, 160, 166, 167, 180, 182, 183, 184, 185, 210, 346, 347, 348], "temperature_": [54, 59], "temperature_100m": [157, 158, 159, 160, 166, 167], "temperature_2m": [108, 157, 158, 159, 160, 166, 167, 269], "temperature_max_2m": [108, 269], "temperature_min_2m": [108, 269], "temperaute_500m": 156, "tempfil": [319, 320, 322], "tempor": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 85, 87, 89, 95, 97, 99, 101, 102, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 157, 158, 159, 160, 162, 166, 167, 196, 198, 215, 217, 219, 220, 221, 222, 224, 229, 231, 233, 235, 236, 237, 239, 240, 241, 269, 273, 274, 275, 276, 282, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 311, 312, 319, 322, 339, 340, 348], "temporal_avg": 25, "temporal_chunk_index": [85, 87, 89], "temporal_coarsening_method": [112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 269, 312, 343], "temporal_id": 282, "temporal_model": 162, "temporal_model_class": 54, "temporal_model_kwarg": 54, "temporal_or_featur": [144, 339], "temporal_pad": [55, 57, 75, 78, 343], "temporal_solar_model": 55, "temporal_solar_model_dir": 55, "temporal_weight": [112, 138, 139, 231, 312], "temporalextremesloss": 298, "temporari": [330, 333], "temporarili": [95, 99, 101, 290], "temporarydirectori": [319, 320, 322], "tensor": [41, 43, 45, 47, 54, 55, 57, 66, 78, 162, 260, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "tensorboard": [41, 43, 45, 47, 57, 61, 66], "tensorboard_log": [43, 45, 47, 57, 66], "tensorboard_profil": [43, 47, 57, 66], "tensorboardmixin": 41, "tensorflow": [41, 43, 45, 47, 57, 66, 78, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 348, 349], "term": [23, 24, 25, 37, 41, 43, 45, 47, 57, 66, 115, 123, 141, 199, 233, 303, 307, 311], "term_weight": [41, 43, 45, 47, 57, 66], "termin": [41, 43, 45, 47, 57, 66, 346, 347], "tern": 254, "test": [7, 9, 10, 11, 12, 13, 30, 32, 43, 45, 47, 59, 102, 212, 287, 310, 312, 313, 317, 319, 320, 321, 322, 323, 324, 325, 347, 348], "text": [212, 287], "tf": [41, 43, 45, 47, 57, 66, 162, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "tf_gener": [41, 43, 45, 47, 57], "tf_loss": 298, "th": [269, 298, 340], "than": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 28, 30, 32, 36, 37, 41, 43, 45, 47, 57, 66, 75, 78, 87, 97, 102, 156, 157, 158, 159, 160, 162, 166, 167, 170, 171, 215, 219, 220, 224, 227, 229, 231, 233, 235, 236, 237, 316, 317, 346], "theanet": 308, "thei": [20, 43, 47, 57, 66, 78, 89, 104, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 151, 152, 154, 156, 212, 226, 261, 287, 311, 312], "them": [55, 148, 217, 348], "theori": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "therefor": [28, 30, 32, 282], "thi": [6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 69, 75, 76, 78, 87, 88, 89, 95, 97, 99, 101, 102, 103, 104, 106, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 152, 154, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 174, 176, 180, 195, 198, 201, 202, 203, 205, 207, 212, 215, 217, 219, 220, 221, 222, 224, 225, 227, 229, 230, 231, 233, 236, 247, 248, 251, 252, 256, 264, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 287, 290, 291, 292, 294, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 343, 346, 347, 348, 349], "thing": [102, 268], "think": 89, "third": [212, 287], "those": [20, 30, 32, 78, 102, 104, 108, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 195, 224, 249, 269, 311, 312], "though": 204, "thread": [43, 47, 57, 62, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 311, 312], "thread_nam": [126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141], "three": [30, 32, 212, 287], "threshold": [9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 28, 30, 32, 36, 37, 41, 43, 45, 47, 57, 66, 87, 157, 158, 159, 160, 166, 167, 215, 224, 282], "threshold_rang": [43, 47, 57, 66], "thresold": [41, 43, 45, 47, 57, 66], "through": [30, 32, 34, 41, 43, 45, 47, 57, 66, 69, 75, 77, 78, 95, 99, 101, 104, 109, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 157, 158, 159, 160, 163, 166, 167, 170, 176, 188, 195, 201, 203, 205, 207, 217, 219, 220, 224, 227, 229, 233, 251, 256, 269, 311, 312, 343, 346], "throughout": 104, "thu": [12, 23, 24, 28, 30, 32, 37], "ti": [87, 104, 164], "ti_nsrdb": [166, 167], "tif": 19, "time": [7, 9, 10, 11, 12, 13, 19, 24, 25, 27, 30, 32, 34, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 64, 66, 69, 75, 78, 85, 87, 89, 95, 96, 97, 99, 101, 104, 108, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 157, 158, 159, 160, 166, 167, 171, 177, 178, 201, 203, 215, 219, 220, 221, 222, 224, 227, 229, 231, 235, 236, 237, 239, 240, 241, 251, 259, 261, 262, 269, 276, 282, 292, 294, 298, 311, 312, 316, 317, 320, 327, 340, 343, 346, 347, 348], "time_chunk": 87, "time_dict": 292, "time_enhance_mod": [117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136], "time_independ": 104, "time_index": [19, 75, 85, 87, 89, 95, 96, 97, 99, 101, 104, 166, 167, 176, 195, 235, 237, 251, 259, 282], "time_index_step": 97, "time_kei": [85, 87, 89, 95, 96, 99, 101], "time_period": [201, 203, 205, 207], "time_rol": [157, 158, 159, 160, 166, 167, 171], "time_shift": [157, 158, 159, 160, 166, 167, 171], "time_slic": [34, 35, 75, 157, 158, 159, 160, 166, 167, 215, 224], "time_step": [75, 104, 235, 236, 237, 239, 241], "time_window": 24, "timeseri": [97, 307], "timestep": [54, 59, 78, 95, 97, 99, 101, 269, 320], "timezon": 282, "titl": [212, 287], "titlecas": [212, 287], "to_dataarrai": 104, "todo": [6, 20, 27, 43, 47, 52, 57, 66, 88, 89, 94, 98, 105, 111, 125, 151, 156, 157, 162, 166, 167, 204, 218, 225, 268, 269], "togeth": [30, 55, 75, 78, 89, 152, 282, 346, 348], "too": [7, 9, 10, 11, 12, 13, 30, 32, 43, 47, 57, 66, 151, 212, 217, 282, 287, 348], "toolkit": 224, "top": 53, "topo": [43, 45, 47, 49, 57, 59, 66, 227, 229, 231, 233, 316, 317], "topo_hr": 59, "topo_lr": 59, "topographi": [41, 43, 45, 47, 51, 54, 55, 57, 59, 69, 78, 114, 115, 117, 118, 119, 121, 122, 123, 162, 163, 218, 219, 220, 227, 229, 233, 311, 316, 317, 347], "tornado": 346, "total": [7, 9, 10, 11, 12, 13, 30, 32, 41, 43, 45, 47, 57, 61, 66, 75, 78, 112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 157, 269, 277, 278, 299, 312, 340], "total_batch": [41, 43, 45, 47, 57, 61, 66], "total_loss": 47, "track": [43, 47, 57, 66, 312, 325], "trail": [212, 287], "train": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 62, 65, 66, 102, 108, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 152, 227, 229, 230, 231, 233, 282, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 343, 345, 346, 349], "train_": [41, 43, 45, 47, 57, 66], "train_contain": [112, 114, 115, 117, 118, 119, 121, 122, 123, 311, 312, 347], "train_disc": [41, 43, 47, 57, 66], "train_epoch": [43, 47, 57, 66], "train_gen": [41, 43, 47, 57, 66], "train_queu": [112, 114, 115, 117, 118, 119, 121, 122, 123, 311, 312], "trainabl": 45, "training_dir": 347, "training_featur": 143, "training_weight": [41, 43, 45, 47, 57, 66], "trane": [112, 138, 139, 312], "transfer": [41, 43, 45, 47, 57, 66], "transform": [20, 24, 30, 32, 78, 95, 99, 101, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 170, 196, 198, 269, 311, 312, 348], "transform_kwarg": [112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 311, 312], "transit": 25, "translat": [212, 287], "transpos": [54, 148, 261, 265, 269], "treat": [66, 97, 282], "treatment": [30, 157], "tree": [199, 219, 220, 221, 222, 290], "trend": [23, 24, 29, 31, 32, 37, 348], "trhp": 347, "true": [5, 7, 9, 10, 11, 12, 13, 23, 24, 25, 27, 30, 32, 37, 41, 43, 45, 47, 49, 53, 54, 55, 57, 59, 66, 69, 78, 87, 89, 97, 144, 166, 167, 212, 215, 217, 219, 220, 221, 222, 224, 269, 282, 287, 290, 292, 298, 301, 339], "true_hr_rh": 59, "true_hr_temp": 59, "true_hr_topo": 59, "truncat": [28, 30, 212, 287], "truth": [41, 43, 45, 47, 57, 66, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "try": [104, 212, 287, 343], "tslice": 237, "tttttt": 282, "tune": [112, 114, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 312], "tupl": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 30, 32, 36, 37, 43, 47, 53, 54, 55, 57, 66, 69, 75, 77, 78, 87, 95, 97, 99, 101, 104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 195, 201, 203, 205, 207, 212, 215, 217, 224, 227, 229, 231, 233, 238, 239, 240, 241, 248, 262, 263, 272, 273, 275, 276, 282, 287, 290, 311, 312, 315, 316, 317], "turbul": 278, "turn": 343, "tutori": [296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "two": [7, 9, 10, 11, 12, 13, 24, 30, 32, 54, 55, 59, 108, 114, 115, 117, 118, 119, 121, 122, 123, 162, 212, 282, 287, 290, 346, 347, 348], "type": [30, 32, 59, 78, 97, 104, 109, 114, 115, 123, 126, 130, 148, 157, 158, 159, 160, 162, 163, 166, 167, 215, 219, 220, 221, 252, 254, 255, 269, 290, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 331, 337], "typic": [7, 8, 9, 10, 11, 12, 13, 30, 32, 54, 55, 57, 59, 69, 78, 163, 166, 167, 173, 175, 176, 217, 219, 220, 259, 282, 290, 292, 343], "tz": 282, "u": [7, 9, 10, 11, 12, 13, 30, 32, 55, 78, 95, 99, 101, 104, 109, 156, 157, 158, 159, 160, 166, 167, 170, 171, 186, 187, 188, 189, 196, 197, 198, 212, 225, 277, 278, 287, 292, 294, 299, 346, 347, 348], "u10": [157, 158, 159, 160, 166, 167, 201, 203, 205, 207, 224], "u_": [95, 99, 101, 157, 158, 159, 160, 166, 167, 170, 171], "u_1000pa": 197, "u_100m": [7, 9, 10, 11, 12, 13, 30, 32, 104, 157, 158, 159, 160, 166, 167, 170, 171, 197, 343], "u_10m": [104, 148, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 221, 224], "u_10m_ob": 221, "u_200m": 55, "u_20m": [157, 158, 159, 160, 166, 167, 170, 171], "u_30m": [157, 158, 159, 160, 166, 167, 170, 171], "u_40m": [157, 158, 159, 160, 166, 167, 170, 171], "u_50m": [157, 158, 159, 160, 166, 167, 170, 171], "u_idx": [95, 99, 101], "u_isobar": 158, "uclim": 348, "ukrain": [347, 348], "ultim": [108, 157, 158, 159, 160, 166, 167, 170, 171, 348], "un": [41, 43, 45, 47, 53, 54, 55, 57, 66], "un_norm_out": [41, 43, 45, 47, 49, 51, 53, 54, 55, 59, 66], "un_norm_output": [41, 43, 45, 47, 57, 66], "unbias": 24, "uncas": [212, 287], "uncertainti": 346, "uncertanti": 346, "uncoarsen": 347, "under": [43, 47, 57, 66, 219, 220, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 346, 347, 348], "underli": [104, 106, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 215, 217, 224, 226, 227, 229, 231, 233, 311, 312, 315, 316, 317], "underscor": [269, 287, 328], "understand": [343, 346, 348], "undetermin": 148, "unfilt": 87, "unfinish": 78, "unflatten": [104, 268], "unicod": [212, 287], "unicodeencodeerror": [212, 287], "unif": 225, "unifi": 151, "uniformli": 66, "union": [34, 69, 87, 104, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 148, 152, 164, 166, 167, 170, 171, 174, 176, 188, 196, 198, 227, 229, 231, 235, 236, 237, 269, 282, 294, 311, 312, 315, 316, 317, 334, 339, 340], "uniqu": [78, 87, 219, 220, 249], "unit": [30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 97, 210, 292, 346, 348], "unix": [78, 85, 87, 89, 163, 219, 220, 254, 269, 282], "unless": [43, 47, 57, 66, 212, 287], "unlik": [346, 348], "unmask": [66, 78], "unmasked_chunk": 78, "unnecessari": [59, 229], "unord": [30, 32], "unpad": [75, 78], "unpadded_slic": 75, "unpreced": 348, "unrealist": [166, 167], "unscal": 97, "until": 290, "untouch": [212, 287], "up": [23, 24, 37, 41, 43, 45, 47, 52, 57, 66, 75, 76, 78, 97, 219, 220, 221, 343, 346, 347, 348, 349], "updat": [18, 41, 43, 45, 47, 55, 57, 66, 97, 104, 111, 112, 138, 139, 162, 163, 164, 201, 203, 205, 207, 210, 224, 230, 231, 269, 312, 346, 347, 348], "update_adversarial_weight": [43, 47, 57, 66], "update_bound": [43, 47, 57, 66], "update_d": 104, "update_dset": 97, "update_fil": 18, "update_frac": [43, 47, 57, 66], "update_hr_data": 217, "update_loss_detail": [41, 43, 45, 47, 57, 66], "update_lr_data": 217, "update_optim": [43, 45, 47, 57, 66], "update_record": 312, "update_weight": [112, 138, 139, 231, 312], "upon": [62, 346], "upper": [7, 9, 10, 11, 12, 13, 30, 32, 43, 47, 57, 66, 212, 240, 287], "uppercas": [212, 287], "upsampl": 145, "urban": [346, 348], "url": 291, "us": [7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 35, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 64, 66, 69, 75, 78, 79, 85, 87, 89, 95, 96, 97, 99, 101, 102, 104, 106, 108, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 174, 176, 188, 191, 195, 201, 203, 205, 207, 208, 209, 212, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 237, 238, 239, 240, 241, 242, 247, 248, 251, 252, 256, 258, 263, 268, 269, 271, 272, 273, 275, 276, 280, 281, 282, 287, 289, 290, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 330, 343, 346, 347, 348, 349], "usabl": [212, 287, 346], "usag": [109, 162, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 345], "usaid": 348, "use_cpu": 78, "user": [148, 215, 224, 290, 343, 348], "usernam": [97, 290], "usual": [7, 9, 10, 11, 12, 13, 24, 28, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 61, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 154, 157, 158, 159, 160, 166, 167, 170, 201, 203, 205, 207, 212, 215, 217, 224, 227, 231, 311, 312, 316, 317], "utc": 282, "utf": [212, 287], "util": [1, 8, 23, 24, 30, 32, 41, 43, 45, 47, 57, 66, 280, 281, 282], "uv": [69, 95, 99, 101], "v": [7, 8, 9, 10, 11, 12, 13, 30, 32, 43, 47, 55, 57, 66, 78, 95, 99, 101, 104, 156, 158, 162, 164, 170, 189, 190, 191, 196, 198, 277, 278, 292, 299, 335, 343], "v0": [346, 348], "v_100m": [7, 9, 10, 11, 12, 13, 30, 32, 158], "v_10m": [104, 158], "v_200m": 55, "v_idx": [95, 99, 101], "v_isobar": 158, "val": [41, 43, 45, 47, 57, 66, 102, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 247, 255, 263, 290, 311, 312], "val_": [41, 43, 45, 47, 57, 66], "val_contain": [112, 114, 115, 117, 118, 119, 121, 122, 123, 311, 312], "val_queu": [112, 114, 115, 117, 118, 119, 121, 122, 123, 311, 312], "valbatchqueuedc": [112, 116, 312], "valid": [9, 10, 11, 12, 13, 41, 43, 45, 47, 57, 66, 102, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 212, 269, 287, 289, 311, 312, 346, 348], "validation_loss_disc": [41, 43, 45, 47, 57, 66], "validation_loss_gen": [41, 43, 45, 47, 57, 66], "valqueueclass": 116, "valu": [7, 9, 10, 11, 12, 13, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 36, 37, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 75, 78, 89, 97, 104, 107, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171, 188, 191, 199, 210, 212, 215, 219, 220, 221, 222, 224, 229, 233, 269, 272, 273, 275, 276, 282, 287, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 329, 334, 343], "valueerror": [212, 287], "var": [229, 233, 248, 273, 274, 275, 276, 279, 292], "var_arrai": 294, "vari": [114, 115, 123, 311], "variabl": [41, 43, 45, 47, 57, 59, 66, 78, 97, 104, 108, 156, 182, 183, 184, 185, 273, 274, 275, 276, 279, 282, 292, 294, 343, 346, 347, 348], "variant": 346, "varieti": 348, "variou": [96, 156, 227, 231, 316, 317, 348], "ve": 102, "veg_ssp585": 343, "vel": 136, "veloc": [132, 134, 199, 275], "verbos": [41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 289, 311, 312, 343], "veri": [23, 24, 37, 282, 343, 348], "verifi": [343, 346], "versa": [43, 47, 57, 66, 89], "version": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 97, 108, 212, 258, 287, 343, 345, 348], "version_record": [43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66], "vertic": 212, "vgg16": 301, "via": [16, 72, 92, 212, 285, 287, 289, 290, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 343, 346, 347], "vice": [43, 47, 57, 66, 89], "view": [43, 45, 47, 57, 66, 162, 164, 180, 346, 347, 348], "virtual": 109, "vision": [43, 47, 57, 66], "volum": [20, 75, 78], "vortex": [12, 17, 19], "vortic": 273, "vtype": 255, "w": [7, 9, 10, 11, 12, 13, 28, 30, 97, 148, 166, 167, 196, 198, 199, 282, 290], "w_delta_temp": 59, "w_delta_topo": 59, "wa": [30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 282, 290, 346, 347, 348], "wai": [30, 32, 43, 47, 57, 66, 104, 221, 227, 282, 316, 343, 346, 347], "walk": 346, "walltim": [16, 72, 92, 285, 289, 290, 343], "wang": [43, 47, 57, 66], "wang2018": [43, 47, 57, 66], "want": [78, 102, 108, 112, 148, 157, 158, 159, 160, 166, 167, 170, 171, 231, 265, 312, 343, 346, 347, 348, 349], "warn": [37, 104, 219, 220, 292], "warrant": [41, 43, 45, 47, 57, 66], "wavenumb": [278, 279], "wd": [196, 198], "wd_true": [319, 322], "we": [20, 24, 30, 43, 47, 57, 66, 75, 78, 87, 102, 104, 108, 112, 114, 115, 123, 128, 139, 154, 156, 157, 158, 159, 160, 162, 166, 167, 170, 171, 195, 204, 215, 224, 225, 229, 231, 256, 265, 269, 273, 275, 276, 311, 312, 317, 343, 346, 347], "weather": [346, 348], "weigh": [114, 115, 123, 311], "weight": [41, 43, 45, 47, 57, 59, 66, 104, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 152, 154, 230, 231, 240, 241, 298, 311, 312], "weight_gen_adv": [41, 43, 47, 57, 66], "weird": [9, 10, 11, 12, 13, 27, 30, 32, 175], "well": [7, 9, 10, 11, 12, 13, 30, 32, 104, 108, 157, 158, 159, 160, 166, 167, 212, 287, 343], "were": [7, 9, 10, 11, 12, 13, 24, 30, 32, 41, 43, 45, 47, 49, 53, 54, 55, 57, 66, 269, 343, 348], "west_east": [104, 108, 148, 158, 212, 219, 220, 262, 269], "weto": 348, "what": [163, 343, 346, 348], "whatev": [55, 57], "when": [7, 9, 10, 11, 12, 13, 20, 30, 32, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 78, 87, 95, 97, 99, 101, 104, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 201, 203, 205, 207, 212, 215, 217, 219, 220, 221, 224, 227, 229, 231, 233, 269, 274, 277, 278, 279, 282, 287, 292, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 327, 343, 346], "where": [7, 9, 10, 11, 12, 13, 15, 16, 22, 23, 24, 25, 30, 32, 36, 37, 41, 43, 45, 47, 54, 57, 59, 66, 71, 72, 75, 78, 87, 91, 92, 117, 118, 119, 121, 122, 126, 130, 131, 132, 133, 134, 135, 136, 166, 167, 173, 175, 212, 229, 233, 236, 263, 269, 274, 277, 278, 279, 282, 284, 285, 287, 289, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 343, 348], "whether": [9, 10, 11, 12, 13, 18, 19, 27, 30, 32, 41, 43, 45, 47, 57, 66, 69, 78, 87, 89, 95, 99, 101, 104, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 162, 212, 215, 219, 220, 272, 273, 275, 276, 287, 289, 292, 311, 312, 327, 329], "which": [7, 9, 10, 11, 12, 13, 30, 32, 33, 34, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 64, 66, 69, 75, 78, 87, 93, 95, 99, 101, 102, 104, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 148, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 176, 186, 188, 189, 199, 201, 203, 205, 206, 207, 212, 213, 215, 217, 219, 220, 221, 222, 224, 226, 227, 229, 230, 231, 233, 250, 251, 252, 269, 282, 287, 290, 292, 298, 311, 312, 315, 316, 317, 325, 339, 340, 346, 347, 348], "while": [24, 30, 32, 107, 108, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 269, 311, 312, 348], "whitespac": [212, 287], "whole": [290, 346], "whose": [212, 287], "wide": 348, "width": [69, 75, 78, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 212, 287], "wiki": 299, "wikipedia": 299, "wildcard": [157, 158, 159, 160, 166, 167, 170, 171], "wildfir": 346, "wind": [7, 9, 10, 11, 12, 13, 30, 32, 55, 78, 95, 99, 101, 158, 167, 186, 187, 188, 189, 190, 191, 198, 199, 224, 277, 278, 292, 294, 299, 343, 346, 347, 348], "wind_spe": [157, 158, 159, 160, 166, 167, 170, 171], "windcc": 160, "winddirect": [7, 9, 10, 11, 12, 13, 30, 32, 69, 95, 99, 101, 170, 196, 198, 273, 275, 276], "winddirection_100m": [319, 322, 343], "winddirection_200m": 158, "windir": [319, 322], "window": [24, 30, 32, 157, 239], "window_cent": 30, "window_mask": [30, 32], "window_s": [30, 32], "windshearformula": [188, 191], "windspe": [7, 9, 10, 11, 12, 13, 19, 30, 32, 69, 78, 95, 99, 101, 104, 148, 157, 158, 159, 160, 166, 167, 170, 171, 186, 189, 196, 198, 199, 319, 322], "windspeed_100m": [319, 322, 343], "windspeed_200m": 158, "windspeed_40m": 158, "windspeed_60m": 158, "windspeed_80m": 158, "wise": 282, "within": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 47, 87, 97, 112, 212, 221, 287, 346], "without": [9, 10, 11, 12, 13, 19, 23, 27, 30, 32, 97, 104, 116, 135, 175, 343, 346, 347], "won": 236, "word": [212, 287, 290, 346, 347], "work": [55, 59, 108, 117, 118, 119, 121, 122, 125, 130, 131, 132, 133, 134, 135, 136, 212, 214, 227, 269, 282, 287, 290, 316, 346, 347, 349], "worker": [9, 10, 11, 12, 13, 18, 23, 24, 30, 32, 37, 69, 78, 87, 95, 99, 101, 126, 128, 148, 217, 219, 220, 292], "workshop": [43, 47, 57, 66], "workspac": 17, "world": [346, 348], "worldwid": [346, 347, 348], "would": [24, 28, 30, 32, 41, 43, 45, 47, 57, 66, 89, 108, 115, 123, 141, 157, 204, 225, 311, 343], "wouldn": 30, "wrangl": [148, 157, 158, 159, 160, 166, 167], "wrap": [62, 104, 106, 112, 114, 115, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 152, 154, 157, 158, 159, 160, 166, 167, 170, 171, 195, 201, 203, 205, 207, 215, 217, 224, 227, 229, 231, 233, 256, 311, 312, 315, 316, 317, 347], "wrapper": [62, 104, 108, 201, 203, 335, 341], "wrf": [163, 179, 214, 219, 220, 343], "writabl": 97, "write": [9, 10, 11, 12, 13, 18, 19, 20, 30, 32, 41, 43, 45, 47, 57, 61, 66, 69, 78, 85, 87, 89, 93, 95, 96, 97, 99, 101, 148, 154, 156, 219, 220, 282, 292, 320, 327, 331], "write_data": [19, 85, 87, 89, 95, 96, 99, 101], "write_dataset": 97, "write_h5": 148, "write_mean": 97, "write_netcdf": 148, "write_output": [9, 10, 11, 12, 13, 30, 32, 95, 99, 101], "write_profil": 97, "write_statu": [87, 89], "written": [12, 87, 97, 102, 148, 224, 269, 290, 292], "wrong": [30, 32], "ws_true": [319, 322], "wtk": [7, 8, 9, 10, 11, 12, 13, 30, 32, 114, 115, 117, 118, 119, 121, 122, 123, 214, 217, 219, 220, 229, 346, 347], "www": [188, 191, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307], "x": [59, 212, 287], "x1": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "x2": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "x_rang": [278, 279], "xarrai": [19, 89, 103, 104, 105, 106, 148, 151, 174, 201, 203, 204, 205, 207, 210, 224, 346], "xd": 108, "xintao": [43, 47, 57, 66], "xml": 180, "xmlcharrefreplac": [212, 287], "xr": [24, 104, 106, 108, 148, 152, 157, 158, 159, 160, 162, 166, 167, 171, 173, 174, 175, 176, 188, 201, 203, 205, 207, 210, 217, 219, 220, 221, 222, 224, 248, 261, 292, 294, 315, 336, 341], "y": [59, 212, 274, 277, 278, 279, 287], "y_pred": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "y_true": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "year": [7, 9, 10, 11, 12, 13, 22, 24, 30, 32, 112, 231, 291, 292, 312, 346, 347], "yearli": 292, "yearly_file_pattern": 292, "yearly_fpattern": 292, "yet": [41, 43, 45, 47, 57, 66, 78, 224], "yml": [346, 347], "you": [41, 43, 45, 47, 57, 66, 78, 102, 108, 148, 156, 221, 269, 291, 343, 346, 347, 348, 349], "your": [69, 78, 290, 346, 347, 348, 349], "z": [199, 292], "z_fg": 30, "z_gf": [28, 30], "zenith": [181, 195, 282], "zenodo": 348, "zero": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 37, 57, 59, 75, 78, 85, 87, 89, 117, 118, 119, 121, 122, 130, 131, 132, 133, 134, 135, 136, 144, 199, 212, 282, 287, 339], "zero_precipitation_r": [28, 30], "zero_r": 30, "zero_rate_threshold": [23, 30], "zeroratemixin": 30, "zeroth": [157, 158, 159, 160, 166, 167, 171], "zfill": [212, 287], "zg": [158, 292], "zonal": [278, 279]}, "titles": ["sup3r", "sup3r.batch", "sup3r.batch.batch_cli", "sup3r.bias", "sup3r.bias.abstract", "sup3r.bias.abstract.AbstractBiasCorrection", "sup3r.bias.base", "sup3r.bias.base.DataRetrievalBase", "sup3r.bias.bias_calc", "sup3r.bias.bias_calc.LinearCorrection", "sup3r.bias.bias_calc.MonthlyLinearCorrection", "sup3r.bias.bias_calc.MonthlyScalarCorrection", "sup3r.bias.bias_calc.ScalarCorrection", "sup3r.bias.bias_calc.SkillAssessment", "sup3r.bias.bias_calc_cli", "sup3r.bias.bias_calc_cli.kickoff_local_job", "sup3r.bias.bias_calc_cli.kickoff_slurm_job", "sup3r.bias.bias_calc_vortex", "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate", "sup3r.bias.bias_calc_vortex.VortexMeanPrepper", "sup3r.bias.bias_transforms", "sup3r.bias.bias_transforms.global_linear_bc", "sup3r.bias.bias_transforms.local_linear_bc", "sup3r.bias.bias_transforms.local_presrat_bc", "sup3r.bias.bias_transforms.local_qdm_bc", "sup3r.bias.bias_transforms.monthly_local_linear_bc", "sup3r.bias.mixins", "sup3r.bias.mixins.FillAndSmoothMixin", "sup3r.bias.mixins.ZeroRateMixin", "sup3r.bias.presrat", "sup3r.bias.presrat.PresRat", "sup3r.bias.qdm", "sup3r.bias.qdm.QuantileDeltaMappingCorrection", "sup3r.bias.utilities", "sup3r.bias.utilities.bias_correct_feature", "sup3r.bias.utilities.bias_correct_features", "sup3r.bias.utilities.lin_bc", "sup3r.bias.utilities.qdm_bc", "sup3r.cli", "sup3r.models", "sup3r.models.abstract", "sup3r.models.abstract.AbstractSingleModel", "sup3r.models.base", "sup3r.models.base.Sup3rGan", "sup3r.models.conditional", "sup3r.models.conditional.Sup3rCondMom", "sup3r.models.dc", "sup3r.models.dc.Sup3rGanDC", "sup3r.models.interface", "sup3r.models.interface.AbstractInterface", "sup3r.models.linear", "sup3r.models.linear.LinearInterp", "sup3r.models.multi_step", "sup3r.models.multi_step.MultiStepGan", "sup3r.models.multi_step.MultiStepSurfaceMetGan", "sup3r.models.multi_step.SolarMultiStepGan", "sup3r.models.solar_cc", "sup3r.models.solar_cc.SolarCC", "sup3r.models.surface", "sup3r.models.surface.SurfaceSpatialMetModel", "sup3r.models.utilities", "sup3r.models.utilities.TensorboardMixIn", "sup3r.models.utilities.TrainingSession", "sup3r.models.utilities.get_optimizer_class", "sup3r.models.utilities.st_interp", "sup3r.models.with_obs", "sup3r.models.with_obs.Sup3rGanWithObs", "sup3r.pipeline", "sup3r.pipeline.forward_pass", "sup3r.pipeline.forward_pass.ForwardPass", "sup3r.pipeline.forward_pass_cli", "sup3r.pipeline.forward_pass_cli.kickoff_local_job", "sup3r.pipeline.forward_pass_cli.kickoff_slurm_job", "sup3r.pipeline.pipeline_cli", "sup3r.pipeline.slicer", "sup3r.pipeline.slicer.ForwardPassSlicer", "sup3r.pipeline.strategy", "sup3r.pipeline.strategy.ForwardPassChunk", "sup3r.pipeline.strategy.ForwardPassStrategy", "sup3r.pipeline.utilities", "sup3r.pipeline.utilities.get_chunk_slices", "sup3r.pipeline.utilities.get_model", "sup3r.postprocessing", "sup3r.postprocessing.collectors", "sup3r.postprocessing.collectors.base", "sup3r.postprocessing.collectors.base.BaseCollector", "sup3r.postprocessing.collectors.h5", "sup3r.postprocessing.collectors.h5.CollectorH5", "sup3r.postprocessing.collectors.nc", "sup3r.postprocessing.collectors.nc.CollectorNC", "sup3r.postprocessing.data_collect_cli", "sup3r.postprocessing.data_collect_cli.kickoff_local_job", "sup3r.postprocessing.data_collect_cli.kickoff_slurm_job", "sup3r.postprocessing.writers", "sup3r.postprocessing.writers.base", "sup3r.postprocessing.writers.base.OutputHandler", "sup3r.postprocessing.writers.base.OutputMixin", "sup3r.postprocessing.writers.base.RexOutputs", "sup3r.postprocessing.writers.h5", "sup3r.postprocessing.writers.h5.OutputHandlerH5", "sup3r.postprocessing.writers.nc", "sup3r.postprocessing.writers.nc.OutputHandlerNC", "sup3r.preprocessing", "sup3r.preprocessing.accessor", "sup3r.preprocessing.accessor.Sup3rX", "sup3r.preprocessing.base", "sup3r.preprocessing.base.Container", "sup3r.preprocessing.base.DsetTuple", "sup3r.preprocessing.base.Sup3rDataset", "sup3r.preprocessing.base.Sup3rMeta", "sup3r.preprocessing.batch_handlers", "sup3r.preprocessing.batch_handlers.dc", "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC", "sup3r.preprocessing.batch_handlers.factory", "sup3r.preprocessing.batch_handlers.factory.BatchHandler", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF", "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler", "sup3r.preprocessing.batch_queues", "sup3r.preprocessing.batch_queues.abstract", "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue", "sup3r.preprocessing.batch_queues.base", "sup3r.preprocessing.batch_queues.base.SingleBatchQueue", "sup3r.preprocessing.batch_queues.conditional", "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue", "sup3r.preprocessing.batch_queues.conditional.QueueMom1", "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF", "sup3r.preprocessing.batch_queues.conditional.QueueMom2", "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF", "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep", "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF", "sup3r.preprocessing.batch_queues.dc", "sup3r.preprocessing.batch_queues.dc.BatchQueueDC", "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC", "sup3r.preprocessing.batch_queues.dual", "sup3r.preprocessing.batch_queues.dual.DualBatchQueue", "sup3r.preprocessing.batch_queues.utilities", "sup3r.preprocessing.batch_queues.utilities.smooth_data", "sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing", "sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing", "sup3r.preprocessing.cachers", "sup3r.preprocessing.cachers.base", "sup3r.preprocessing.cachers.base.Cacher", "sup3r.preprocessing.cachers.utilities", "sup3r.preprocessing.collections", "sup3r.preprocessing.collections.base", "sup3r.preprocessing.collections.base.Collection", "sup3r.preprocessing.collections.stats", "sup3r.preprocessing.collections.stats.StatsCollection", "sup3r.preprocessing.data_handlers", "sup3r.preprocessing.data_handlers.base", "sup3r.preprocessing.data_handlers.base.DailyDataHandler", "sup3r.preprocessing.data_handlers.base.DataHandler", "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC", "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC", "sup3r.preprocessing.data_handlers.exo", "sup3r.preprocessing.data_handlers.exo.ExoData", "sup3r.preprocessing.data_handlers.exo.ExoDataHandler", "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep", "sup3r.preprocessing.data_handlers.nc_cc", "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC", "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw", "sup3r.preprocessing.derivers", "sup3r.preprocessing.derivers.base", "sup3r.preprocessing.derivers.base.BaseDeriver", "sup3r.preprocessing.derivers.base.Deriver", "sup3r.preprocessing.derivers.methods", "sup3r.preprocessing.derivers.methods.ClearSkyRatio", "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC", "sup3r.preprocessing.derivers.methods.CloudMask", "sup3r.preprocessing.derivers.methods.DerivedFeature", "sup3r.preprocessing.derivers.methods.Latitude", "sup3r.preprocessing.derivers.methods.Longitude", "sup3r.preprocessing.derivers.methods.PressureWRF", "sup3r.preprocessing.derivers.methods.SurfaceRH", "sup3r.preprocessing.derivers.methods.Sza", "sup3r.preprocessing.derivers.methods.Tas", "sup3r.preprocessing.derivers.methods.TasMax", "sup3r.preprocessing.derivers.methods.TasMin", "sup3r.preprocessing.derivers.methods.TempNCforCC", "sup3r.preprocessing.derivers.methods.USolar", "sup3r.preprocessing.derivers.methods.UWind", "sup3r.preprocessing.derivers.methods.UWindPowerLaw", "sup3r.preprocessing.derivers.methods.VSolar", "sup3r.preprocessing.derivers.methods.VWind", "sup3r.preprocessing.derivers.methods.VWindPowerLaw", "sup3r.preprocessing.derivers.methods.Winddirection", "sup3r.preprocessing.derivers.methods.Windspeed", "sup3r.preprocessing.derivers.utilities", "sup3r.preprocessing.derivers.utilities.SolarZenith", "sup3r.preprocessing.derivers.utilities.invert_uv", "sup3r.preprocessing.derivers.utilities.parse_feature", "sup3r.preprocessing.derivers.utilities.transform_rotate_wind", "sup3r.preprocessing.derivers.utilities.windspeed_log_law", "sup3r.preprocessing.loaders", "sup3r.preprocessing.loaders.Loader", "sup3r.preprocessing.loaders.base", "sup3r.preprocessing.loaders.base.BaseLoader", "sup3r.preprocessing.loaders.h5", "sup3r.preprocessing.loaders.h5.LoaderH5", "sup3r.preprocessing.loaders.nc", "sup3r.preprocessing.loaders.nc.LoaderNC", "sup3r.preprocessing.loaders.utilities", "sup3r.preprocessing.loaders.utilities.standardize_names", "sup3r.preprocessing.loaders.utilities.standardize_values", "sup3r.preprocessing.names", "sup3r.preprocessing.names.Dimension", "sup3r.preprocessing.rasterizers", "sup3r.preprocessing.rasterizers.base", "sup3r.preprocessing.rasterizers.base.BaseRasterizer", "sup3r.preprocessing.rasterizers.dual", "sup3r.preprocessing.rasterizers.dual.DualRasterizer", "sup3r.preprocessing.rasterizers.exo", "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer", "sup3r.preprocessing.rasterizers.exo.ExoRasterizer", "sup3r.preprocessing.rasterizers.exo.ObsRasterizer", "sup3r.preprocessing.rasterizers.exo.SzaRasterizer", "sup3r.preprocessing.rasterizers.extended", "sup3r.preprocessing.rasterizers.extended.Rasterizer", "sup3r.preprocessing.samplers", "sup3r.preprocessing.samplers.base", "sup3r.preprocessing.samplers.base.Sampler", "sup3r.preprocessing.samplers.cc", "sup3r.preprocessing.samplers.cc.DualSamplerCC", "sup3r.preprocessing.samplers.dc", "sup3r.preprocessing.samplers.dc.SamplerDC", "sup3r.preprocessing.samplers.dual", "sup3r.preprocessing.samplers.dual.DualSampler", "sup3r.preprocessing.samplers.utilities", "sup3r.preprocessing.samplers.utilities.daily_time_sampler", "sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data", "sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler", "sup3r.preprocessing.samplers.utilities.uniform_box_sampler", "sup3r.preprocessing.samplers.utilities.uniform_time_sampler", "sup3r.preprocessing.samplers.utilities.weighted_box_sampler", "sup3r.preprocessing.samplers.utilities.weighted_time_sampler", "sup3r.preprocessing.utilities", "sup3r.preprocessing.utilities.check_signatures", "sup3r.preprocessing.utilities.composite_info", "sup3r.preprocessing.utilities.composite_sig", "sup3r.preprocessing.utilities.compute_if_dask", "sup3r.preprocessing.utilities.contains_ellipsis", "sup3r.preprocessing.utilities.dims_array_tuple", "sup3r.preprocessing.utilities.expand_paths", "sup3r.preprocessing.utilities.get_class_kwargs", "sup3r.preprocessing.utilities.get_date_range_kwargs", "sup3r.preprocessing.utilities.get_input_handler_class", "sup3r.preprocessing.utilities.get_obj_params", "sup3r.preprocessing.utilities.get_source_type", "sup3r.preprocessing.utilities.is_type_of", "sup3r.preprocessing.utilities.log_args", "sup3r.preprocessing.utilities.lower_names", "sup3r.preprocessing.utilities.lowered", "sup3r.preprocessing.utilities.make_time_index_from_kws", "sup3r.preprocessing.utilities.numpy_if_tensor", "sup3r.preprocessing.utilities.ordered_array", "sup3r.preprocessing.utilities.ordered_dims", "sup3r.preprocessing.utilities.parse_ellipsis", "sup3r.preprocessing.utilities.parse_features", "sup3r.preprocessing.utilities.parse_keys", "sup3r.preprocessing.utilities.parse_to_list", "sup3r.qa", "sup3r.qa.qa", "sup3r.qa.qa.Sup3rQa", "sup3r.qa.qa_cli", "sup3r.qa.utilities", "sup3r.qa.utilities.continuous_dist", "sup3r.qa.utilities.direct_dist", "sup3r.qa.utilities.frequency_spectrum", "sup3r.qa.utilities.gradient_dist", "sup3r.qa.utilities.time_derivative_dist", "sup3r.qa.utilities.tke_frequency_spectrum", "sup3r.qa.utilities.tke_wavenumber_spectrum", "sup3r.qa.utilities.wavenumber_spectrum", "sup3r.solar", "sup3r.solar.solar", "sup3r.solar.solar.Solar", "sup3r.solar.solar_cli", "sup3r.solar.solar_cli.kickoff_local_job", "sup3r.solar.solar_cli.kickoff_slurm_job", "sup3r.utilities", "sup3r.utilities.ModuleName", "sup3r.utilities.cli", "sup3r.utilities.cli.BaseCLI", "sup3r.utilities.cli.SlurmManager", "sup3r.utilities.era_downloader", "sup3r.utilities.era_downloader.EraDownloader", "sup3r.utilities.interpolation", "sup3r.utilities.interpolation.Interpolator", "sup3r.utilities.loss_metrics", "sup3r.utilities.loss_metrics.CoarseMseLoss", "sup3r.utilities.loss_metrics.ExpLoss", "sup3r.utilities.loss_metrics.LowResLoss", "sup3r.utilities.loss_metrics.MaterialDerivativeLoss", "sup3r.utilities.loss_metrics.MmdLoss", "sup3r.utilities.loss_metrics.PerceptualLoss", "sup3r.utilities.loss_metrics.SpatialDerivativeLoss", "sup3r.utilities.loss_metrics.SpatialExtremesLoss", "sup3r.utilities.loss_metrics.SpatialFftLoss", "sup3r.utilities.loss_metrics.SpatiotemporalFftLoss", "sup3r.utilities.loss_metrics.TemporalDerivativeLoss", "sup3r.utilities.loss_metrics.TemporalExtremesLoss", "sup3r.utilities.loss_metrics.gaussian_kernel", "sup3r.utilities.pytest", "sup3r.utilities.pytest.helpers", "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC", "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC", "sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory", "sup3r.utilities.pytest.helpers.DualSamplerTesterCC", "sup3r.utilities.pytest.helpers.DummyData", "sup3r.utilities.pytest.helpers.DummySampler", "sup3r.utilities.pytest.helpers.SamplerTester", "sup3r.utilities.pytest.helpers.SamplerTesterDC", "sup3r.utilities.pytest.helpers.make_collect_chunks", "sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files", "sup3r.utilities.pytest.helpers.make_fake_dset", "sup3r.utilities.pytest.helpers.make_fake_h5_chunks", "sup3r.utilities.pytest.helpers.make_fake_nc_file", "sup3r.utilities.pytest.helpers.make_fake_tif", "sup3r.utilities.pytest.helpers.test_sampler_factory", "sup3r.utilities.utilities", "sup3r.utilities.utilities.Timer", "sup3r.utilities.utilities.camel_to_underscore", "sup3r.utilities.utilities.enforce_limits", "sup3r.utilities.utilities.generate_random_string", "sup3r.utilities.utilities.get_dset_attrs", "sup3r.utilities.utilities.get_feature_basename", "sup3r.utilities.utilities.get_tmp_file", "sup3r.utilities.utilities.nn_fill_array", "sup3r.utilities.utilities.pd_date_range", "sup3r.utilities.utilities.preprocess_datasets", "sup3r.utilities.utilities.safe_cast", "sup3r.utilities.utilities.safe_serialize", "sup3r.utilities.utilities.spatial_coarsening", "sup3r.utilities.utilities.temporal_coarsening", "sup3r.utilities.utilities.xr_open_mfdataset", "Command Line Interfaces (CLIs)", "sup3r", "&lt;no title&gt;", "Examples", "Sup3rCC Examples", "Sup3rWind Examples", "Getting Started", "Installation", "Installation and Usage"], "titleterms": {"1": [348, 349], "2": [348, 349], "3": 348, "abstract": [4, 5, 40, 41, 125, 126], "abstractbatchqueu": 126, "abstractbiascorrect": 5, "abstractinterfac": 49, "abstractsinglemodel": 41, "access": [346, 347], "accessor": [103, 104], "acknowledg": [346, 347, 348], "analyst": [348, 349], "applic": 348, "base": [6, 7, 42, 43, 84, 85, 94, 95, 96, 97, 105, 106, 107, 108, 109, 127, 128, 147, 148, 151, 152, 156, 157, 158, 159, 160, 169, 170, 171, 202, 203, 214, 215, 226, 227], "basecli": 289, "basecollector": 85, "basederiv": 170, "baseexoraster": 219, "baseload": 203, "baseraster": 215, "batch": [1, 2, 343], "batch_cli": 2, "batch_handl": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "batch_queu": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "batchhandl": 114, "batchhandlercc": 115, "batchhandlerdc": 112, "batchhandlerfactori": 116, "batchhandlermom1": 117, "batchhandlermom1sf": 118, "batchhandlermom2": 119, "batchhandlermom2sep": 121, "batchhandlermom2sepsf": 122, "batchhandlermom2sf": 120, "batchhandlertestercc": 311, "batchhandlertesterdc": 312, "batchhandlertesterfactori": 313, "batchqueuedc": 138, "bia": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 343], "bias_calc": [8, 9, 10, 11, 12, 13], "bias_calc_cli": [14, 15, 16], "bias_calc_vortex": [17, 18, 19], "bias_correct_featur": [34, 35], "bias_transform": [20, 21, 22, 23, 24, 25], "biascorrectupd": 18, "cacher": [146, 147, 148, 149], "calc": 343, "camel_to_underscor": 328, "cc": [228, 229], "check_signatur": 243, "citat": [346, 347, 348], "clearskyratio": 173, "clearskyratiocc": 174, "cli": [38, 288, 289, 290, 342], "climat": 348, "clone": [348, 349], "cloudmask": 175, "coars": 348, "coarsemseloss": 296, "collect": [150, 151, 152, 153, 154, 343, 348], "collector": [83, 84, 85, 86, 87, 88, 89], "collectorh5": 87, "collectornc": 89, "command": 342, "composite_info": 244, "composite_sig": 245, "compute_if_dask": 246, "condit": [44, 45, 129, 130, 131, 132, 133, 134, 135, 136], "conditionalbatchqueu": 130, "contain": 106, "contains_ellipsi": 247, "continuous_dist": 272, "daily_time_sampl": 235, "dailydatahandl": 157, "data": [343, 346, 347, 348], "data_collect_cli": [90, 91, 92], "data_handl": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "datahandl": 158, "datahandlerh5solarcc": 159, "datahandlerh5windcc": 160, "datahandlerncforcc": 166, "datahandlerncforccwithpowerlaw": 167, "dataretrievalbas": 7, "dc": [46, 47, 111, 112, 137, 138, 139, 230, 231], "deriv": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "derivedfeatur": 176, "develop": [348, 349], "dimens": 212, "dims_array_tupl": 248, "direct_dist": 273, "directori": 346, "dsettupl": 107, "dual": [140, 141, 216, 217, 232, 233], "dualbatchhandl": 123, "dualbatchqueu": 141, "dualraster": 217, "dualsampl": 233, "dualsamplercc": 229, "dualsamplertestercc": 314, "dummydata": 315, "dummysampl": 316, "enforce_limit": 329, "era_download": [291, 292], "eradownload": 292, "exampl": [345, 346, 347], "exo": [161, 162, 163, 164, 218, 219, 220, 221, 222], "exodata": 162, "exodatahandl": 163, "exoraster": 220, "expand_path": 249, "exploss": 297, "extend": [223, 224], "factori": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "fillandsmoothmixin": 27, "forward": 343, "forward_pass": [68, 69], "forward_pass_cli": [70, 71, 72], "forwardpass": 69, "forwardpasschunk": 77, "forwardpassslic": 75, "forwardpassstrategi": 78, "frequency_spectrum": 274, "from": [347, 348, 349], "gaussian_kernel": 308, "gener": 348, "generate_random_str": 330, "get": 348, "get_chunk_slic": 80, "get_class_kwarg": 250, "get_date_range_kwarg": 251, "get_dset_attr": 331, "get_feature_basenam": 332, "get_input_handler_class": 252, "get_model": 81, "get_obj_param": 253, "get_optimizer_class": 63, "get_source_typ": 254, "get_tmp_fil": 333, "global_linear_bc": 21, "gradient_dist": 275, "h5": [86, 87, 98, 99, 204, 205], "helper": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "high": 348, "histor": 348, "how": 348, "infer": 348, "instal": [348, 349, 350], "interfac": [48, 49, 342], "interpol": [293, 294], "invert_uv": 196, "is_type_of": 255, "kickoff_local_job": [15, 71, 91, 284], "kickoff_slurm_job": [16, 72, 92, 285], "latitud": 177, "learn": 348, "lin_bc": 36, "line": 342, "linear": [50, 51], "linearcorrect": 9, "linearinterp": 51, "loader": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "loaderh5": 205, "loadernc": 207, "local_linear_bc": 22, "local_presrat_bc": 23, "local_qdm_bc": 24, "log_arg": 256, "longitud": 178, "loss_metr": [295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "lower": 258, "lower_nam": 257, "lowresloss": 298, "make_collect_chunk": 319, "make_fake_cs_ratio_fil": 320, "make_fake_dset": 321, "make_fake_h5_chunk": 322, "make_fake_nc_fil": 323, "make_fake_tif": 324, "make_time_index_from_kw": 259, "materialderivativeloss": 299, "method": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "mixin": [26, 27, 28], "mmdloss": 300, "model": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 346, 347], "modulenam": 287, "monthly_local_linear_bc": 25, "monthlylinearcorrect": 10, "monthlyscalarcorrect": 11, "multi_step": [52, 53, 54, 55], "multistepgan": 53, "multistepsurfacemetgan": 54, "name": [211, 212], "nc": [88, 89, 100, 101, 206, 207], "nc_cc": [165, 166, 167], "nn_fill_arrai": 334, "nsrdb_reduce_daily_data": 236, "nsrdb_sub_daily_sampl": 237, "nuanc": 346, "numpy_if_tensor": 260, "obsraster": 221, "option": [348, 349], "ordered_arrai": 261, "ordered_dim": 262, "outputhandl": 95, "outputhandlerh5": 99, "outputhandlernc": 101, "outputmixin": 96, "paramet": 249, "parse_ellipsi": 263, "parse_featur": [197, 264], "parse_kei": 265, "parse_to_list": 266, "pass": 343, "pd_date_rang": 335, "perceptualloss": 301, "phase": 348, "physic": 348, "pip": [348, 349], "pipelin": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 343], "pipeline_cli": 73, "postprocess": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "preprocess": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "preprocess_dataset": 336, "presrat": [29, 30], "pressurewrf": 179, "public": 348, "pytest": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "qa": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 343], "qa_cli": 270, "qdm": [31, 32], "qdm_bc": 37, "quantiledeltamappingcorrect": 32, "queuemom1": 131, "queuemom1sf": 132, "queuemom2": 133, "queuemom2sep": 135, "queuemom2sepsf": 136, "queuemom2sf": 134, "raster": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "realist": 348, "recommend": [346, 347, 348, 349], "record": 348, "repo": [348, 349], "resolut": 348, "rexoutput": 97, "run": [346, 347], "safe_cast": 337, "safe_seri": 338, "sampler": [225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "samplerdc": 231, "samplertest": 317, "samplertesterdc": 318, "scalarcorrect": 12, "scenario": 348, "scratch": 347, "singlebatchqueu": 128, "singleexodatastep": 164, "skillassess": 13, "slicer": [74, 75], "slurmmanag": 290, "smooth_data": 143, "solar": [280, 281, 282, 283, 284, 285, 343], "solar_cc": [56, 57], "solar_cli": [283, 284, 285], "solarcc": 57, "solarmultistepgan": 55, "solarzenith": 195, "spatial_coarsen": 339, "spatial_simple_enhanc": 144, "spatialderivativeloss": 302, "spatialextremesloss": 303, "spatialfftloss": 304, "spatiotemporalfftloss": 305, "st_interp": 64, "standardize_nam": 209, "standardize_valu": 210, "start": 348, "stat": [153, 154], "statscollect": 154, "step": 348, "strategi": [76, 77, 78], "structur": 346, "sup3r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 348], "sup3rcc": [346, 348], "sup3rcondmom": 45, "sup3rdataset": 108, "sup3rgan": 43, "sup3rgandc": 47, "sup3rganwithob": 66, "sup3rmeta": 109, "sup3rqa": 269, "sup3ruhi": 348, "sup3rwind": [347, 348], "sup3rx": 104, "surfac": [58, 59], "surfacerh": 180, "surfacespatialmetmodel": 59, "sza": 181, "szaraster": 222, "ta": 182, "tasmax": 183, "tasmin": 184, "tempncforcc": 185, "temporal_coarsen": 340, "temporal_simple_enhanc": 145, "temporalderivativeloss": 306, "temporalextremesloss": 307, "tensorboardmixin": 61, "test_sampler_factori": 325, "time_derivative_dist": 276, "timer": 327, "tke_frequency_spectrum": 277, "tke_wavenumber_spectrum": 278, "train": [347, 348], "trainingsess": 62, "transform_rotate_wind": 198, "uniform_box_sampl": 238, "uniform_time_sampl": 239, "usag": [346, 347, 350], "usolar": 186, "util": [33, 34, 35, 36, 37, 60, 61, 62, 63, 64, 79, 80, 81, 142, 143, 144, 145, 149, 194, 195, 196, 197, 198, 199, 208, 209, 210, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "uwind": 187, "uwindpowerlaw": 188, "valbatchqueuedc": 139, "version": [346, 347], "vortexmeanprepp": 19, "vsolar": 189, "vwind": 190, "vwindpowerlaw": 191, "wavenumber_spectrum": 279, "weighted_box_sampl": 240, "weighted_time_sampl": 241, "winddirect": 192, "windspe": 193, "windspeed_log_law": 199, "with_ob": [65, 66], "work": 348, "writer": [93, 94, 95, 96, 97, 98, 99, 100, 101], "xr_open_mfdataset": 341, "zeroratemixin": 28}})